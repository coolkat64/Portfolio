{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<center> ===============================================================================================================================================  \n",
    "<center> ===============================================================================================================================================  \n",
    "<center> ===============================================================================================================================================  \n",
    "    \n",
    "# <center><font color='green'> **Topics Modelling and Extractive summarization of documents**\n",
    "![Topics Modelling](https://miro.medium.com/max/3916/0*uKkeYoh84QgWddJA.png)\n",
    "![Documents summarization](https://hackernoon.com/hn-images/1*4d7oCMtJbCcL6NU0ufCODw.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<center> ===============================================================================================================================================  \n",
    "\n",
    "# **Topics Modelling**\n",
    "<center> ===============================================================================================================================================  "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Contents table\n",
    "1. \n",
    "2. \n",
    "3. \n",
    "\n",
    "# 1. Import Packages and prepare stopwords"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np, pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "from pprint import pprint\n",
    "import glob\n",
    "import re\n",
    "import sys\n",
    "#!{sys.executable} -m spacy download en\n",
    "\n",
    "# Gensim\n",
    "import gensim, spacy, logging, warnings \n",
    "import gensim.corpora as corpora \n",
    "from gensim.utils import lemmatize, simple_preprocess \n",
    "from gensim.models import CoherenceModel \n",
    "\n",
    "# NLTK \n",
    "from nltk.corpus import stopwords \n",
    "from nltk.tokenize import sent_tokenize, word_tokenize \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "%matplotlib inline\n",
    "warnings.filterwarnings(\"ignore\", category=DeprecationWarning)\n",
    "logging.basicConfig(format='%(asctime)s : %(levelname)s : %(message)s', level=logging.ERROR)\n",
    "\n",
    "stop_words = stopwords.words('english') \n",
    "stop_words.extend(['airbus','helicopter','helicopters','flight','vsr','heli_expo','unmanned','also','use','blr',\n",
    "                   'say','subject','edu','would','say','know','good','go','get','done','try','many',\n",
    "                   'nice','thank','think','see','rather','easy','easily','lot','lack','make','want',\n",
    "                   'seem','run','need','even','right','line','even','also','may','take','come',\n",
    "                   'year','time','hour','first','last','second','high','new','low'])\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 2. Read the data\n",
    "Dans ce present cas, un document peut contenir plusieur textes. Chaque texte est stocké dans un fichier. Par exemple, le docuemnt `h160` contient 10 textes chacun contenu dans un fichier.  \n",
    "La fonction `read_document` permet de lire tous les fichiers contenus dans un même dossier."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Importer les fichiés textes \n",
    "def read_document(path_text):\n",
    "    \n",
    "    files_text = glob.glob(path_text+'*.txt')\n",
    "\n",
    "    texts = []\n",
    "    for file in files_text:\n",
    "        texts.append(open(file,'r', encoding=\"latin-1\").read())\n",
    "        \n",
    "    return texts\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 3. Preprocessing\n",
    "La fonction `process_document` suprime les caractères spécifiques tous en repérant les liens internet,… et de coriger l'orthographe de certains mots tel que les contractions, les abréviations."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Replace contractions with their longer forms\n",
    "contraction_mapping = {\"u.s.\":\"america\", \"u.s\":\"america\", \"usa\":\"america\", \"u.k.\":\"england\", \"u.k\":\"england\", \"e-mail\":\"email\",\n",
    "                       \"can't\": \"cannot\", \"'cause\": \"because\", \"could've\": \"could have\",\"he'd\": \"he would\",\"he'll\": \"he will\", \n",
    "                       \"he's\": \"he is\", \n",
    "                       \"how'd\": \"how did\", \"how'd'y\": \"how do you\", \"how'll\": \"how will\", \"how's\": \"how is\", \"I'd\": \"I would\", \n",
    "                       \"I'd've\": \"I would have\", \"I'll\": \"I will\", \"I'll've\": \"I will have\",\"I'm\": \"I am\", \"I've\": \"I have\", \n",
    "                       \"i'd\": \"i would\", \"i'd've\": \"i would have\", \"i'll\": \"i will\",  \"i'll've\": \"i will have\",\"i'm\": \"i am\",\n",
    "                       \"i've\": \"i have\", \"it'd\": \"it would\", \"it'd've\": \"it would have\", \"it'll\": \"it will\", \n",
    "                       \"it'll've\": \"it will have\",\"let's\": \"let us\", \"ma'am\": \"madam\", \"mayn't\": \"may not\", \n",
    "                       \"might've\": \"might have\",\"mightn't've\": \"might not have\", \"must've\": \"must have\",\n",
    "                       \"mustn't've\": \"must not have\", \"needn't've\": \"need not have\",\n",
    "                       \"o'clock\": \"of the clock\", \"oughtn't\": \"ought not\", \"oughtn't've\": \"ought not have\",\n",
    "                       \"sha'n't\": \"shall not\", \"shan't've\": \"shall not have\", \"she'd\": \"she would\", \"she'd've\": \"she would have\", \n",
    "                       \"she'll\": \"she will\", \"she'll've\": \"she will have\",\n",
    "                       \"shouldn't've\": \"should not have\", \"so've\": \"so have\",\"so's\": \"so as\", \n",
    "                       \"this's\": \"this is\",\"that'd\": \"that would\", \"that'd've\": \"that would have\", \"that's\": \"that is\", \n",
    "                       \"there'd\": \"there would\", \"there'd've\": \"there would have\", \"there's\": \"there is\", \"here's\": \"here is\",\n",
    "                       \"they'd\": \"they would\", \"they'd've\": \"they would have\", \"they'll\": \"they will\", \"they'll've\": \"they will have\", \n",
    "                       \"they're\": \"they are\", \"they've\": \"they have\", \"to've\": \"to have\", \"we'd\":\"we would\", \n",
    "                       \"we'd've\": \"we would have\", \"we'll\": \"we will\", \"we'll've\": \"we will have\", \"we're\":\"we are\", \"we've\":\"we have\",\n",
    "                       \"what'll\": \"what will\", \"what'll've\": \"what will have\", \"what're\": \"what are\",\n",
    "                       \"what's\": \"what is\", \"what've\": \"what have\", \"when's\": \"when is\", \"when've\": \"when have\", \"where'd\": \"where did\",\n",
    "                       \"where's\": \"where is\", \"where've\":\"where have\", \"who'll\":\"who will\", \"who'll've\":\"who will have\", \"who's\":\"who is\", \n",
    "                       \"who've\": \"who have\", \"why's\": \"why is\", \"why've\": \"why have\", \"will've\": \"will have\",\n",
    "                       \"would've\": \"would have\", \"wouldn't've\":\"would not have\", \n",
    "                       \"y'all\": \"you all\", \"y'all'd\": \"you all would\",\"y'all'd've\": \"you all would have\",\"y'all're\": \"you all are\",\n",
    "                       \"y'all've\": \"you all have\",\"you'd've\": \"you would have\"}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "def process_document(text):\n",
    "        \n",
    "    sentences = []\n",
    "    for sentence in text:\n",
    "        \n",
    "        space_pattern = '\\s+'\n",
    "        giant_url_regex = ('http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|'\n",
    "                           '[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+')\n",
    "        mention_regex = '@[\\w\\-]+'\n",
    "        hashtag_regex = '#[\\w\\-]+'\n",
    "        #punctuations = '''!()-[]{};:'\"\\,<>./?@#$%^&*_~'''\n",
    "        \n",
    "        sentence = re.sub(space_pattern, ' ', sentence)\n",
    "        sentence = re.sub(giant_url_regex, 'URLHERE', sentence)\n",
    "        sentence = re.sub(mention_regex, 'MENTIONHERE', sentence)\n",
    "        sentence = re.sub(hashtag_regex, 'HASHTAGHERE', sentence)\n",
    "        \n",
    "        sentence = re.sub(r\"[^A-Za-z0-9^, !. \\/'+=]\", \" \", sentence)\n",
    "        #sentence = re.sub(r\"[^a-zA-Z0-9\\s]\",\" \", sentence)\n",
    "        #sentence = re.sub(r'\\d+', '', sentence) # number\n",
    "        sentence = re.sub(r\"\\/\",\" \", sentence)\n",
    "        sentence = re.sub(r\"\\^\",\" ^ \", sentence)\n",
    "        sentence = re.sub(r\"\\+\",\" + \", sentence)\n",
    "        sentence = re.sub(r\"\\-\",\" - \", sentence)\n",
    "        sentence = re.sub(r\"\\=\",\" = \", sentence)\n",
    "        sentence = sentence.lower()\n",
    "        \n",
    "        sentence = ' '.join([contraction_mapping[t] if t in contraction_mapping else t for t in sentence.split(\" \")])\n",
    "        sentence = ' '.join([contraction_mapping[t] if t in contraction_mapping else t for t in word_tokenize(sentence)])\n",
    "        #sentence = ' '.join([word for word in word_tokenize(sentence) if word.isalpha()])\n",
    "        #sentence = ' '.join([word for word in word_tokenize(sentence) if word.lower() not in Stopwords and len(word)>2])\n",
    "        sentences.append(sentence.replace(' .', '.'))\n",
    "        \n",
    "    return sentences"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Totaly, we have 29 documents.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>doc_id</th>\n",
       "      <th>document</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>continued weakness in the oil and gas market h...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>airbus helicopters flew the first production m...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>the first h160 to roll off the brand new airbu...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>there is as much innovation in the way the h16...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>airbus helicopters has successfully completed ...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   doc_id                                           document\n",
       "0       0  continued weakness in the oil and gas market h...\n",
       "1       1  airbus helicopters flew the first production m...\n",
       "2       2  the first h160 to roll off the brand new airbu...\n",
       "3       3  there is as much innovation in the way the h16...\n",
       "4       4  airbus helicopters has successfully completed ..."
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Import Dataset\n",
    "v700_path = 'txt/vsr700/'\n",
    "h160_path = 'txt/h160/'\n",
    "Expo_path = 'txt/heli-expo/'\n",
    "\n",
    "documents_h160 = process_document(read_document(h160_path))\n",
    "documents_v700 = process_document(read_document(v700_path))\n",
    "documents_Expo = process_document(read_document(Expo_path))\n",
    "\n",
    "all_documents = np.r_[documents_h160, documents_v700, documents_Expo]\n",
    "\n",
    "df_doc = pd.DataFrame(all_documents, columns=['document'])\n",
    "df_doc = df_doc.loc[df_doc.document!='']\n",
    "\n",
    "df_doc['doc_id'] = range(df_doc.shape[0])\n",
    "df_doc = df_doc[['doc_id', 'document']]\n",
    "\n",
    "print(\"Totaly, we have {} documents.\".format(df_doc.shape[0]))\n",
    "df_doc.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "def process_to_words(sentences):\n",
    "    \n",
    "    for sentence in sentences:\n",
    "        sentence = sentence.lower() \n",
    "        \n",
    "        sentence = re.sub(r\"[^A-Za-z0-9^, !. \\/'+=]\", \" \", sentence) \n",
    "        sentence = re.sub(\"\\'\", \"\", sentence)  # remove single quotes \n",
    "                \n",
    "        sentence = gensim.utils.simple_preprocess(str(sentence), deacc=True) \n",
    "        yield(sentence)  \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Convert to list \n",
    "data = df_doc.document.values.tolist()\n",
    "words_list = list(process_to_words(data))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 4. Creating Bigram and Trigram Models\n",
    "\n",
    "The two most important arguments to Phrases are:  \n",
    "- `min_count` ignore all words and bigrams with total collected count lower than this value.  \n",
    "- `threshold` represent a score threshold for forming the phrases (higher means fewer phrases). A phrase of words `a` followed by `b` is accepted if the score of the phrase is greater than threshold. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Build the bigram and trigram models \n",
    "bigram  = gensim.models.Phrases(words_list, min_count=5, threshold=50) # higher threshold fewer phrases.\n",
    "trigram = gensim.models.Phrases(bigram[words_list], threshold=70)  \n",
    "\n",
    "# Faster way to get a sentence clubbed as a trigram/bigram\n",
    "bigram_mod  = gensim.models.phrases.Phraser(bigram)\n",
    "trigram_mod = gensim.models.phrases.Phraser(trigram)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "# !python3 -m spacy download en  # run in terminal once # or do\n",
    "# !conda install -c conda-forge spacy-model-en_core_web_md \n",
    "# and use nlp=spacy.load('en_core_web_sm') instead in below function.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "def process_words(texts, stop_words=stop_words, allowed_postags=['NOUN', 'ADJ', 'VERB', 'ADV']):\n",
    "    \"\"\"\n",
    "    Remove Stopwords, Form Bigrams, Trigrams and Lemmatization\n",
    "    \"\"\"\n",
    "    \n",
    "    texts = [[word for word in simple_preprocess(str(doc)) if word not in stop_words \n",
    "              and len(word)>2 and word.isalpha()] for doc in texts]\n",
    "    texts = [bigram_mod[doc] for doc in texts] \n",
    "    texts = [trigram_mod[bigram_mod[doc]] for doc in texts]\n",
    "    \n",
    "    nlp = spacy.load('en', disable=['parser', 'ner'])\n",
    "    \n",
    "    texts_out = []\n",
    "    for sent in texts:\n",
    "        doc = nlp(\" \".join(sent)) \n",
    "        texts_out.append([token.lemma_ for token in doc if token.pos_ in allowed_postags])\n",
    "        \n",
    "    # remove stopwords once more after lemmatization\n",
    "    texts_out = [[word for word in simple_preprocess(str(doc)) if word not in stop_words and len(word)>2] for doc in texts_out]    \n",
    "    return texts_out\n",
    "\n",
    "data_ready = process_words(words_list)  # processed Text Data!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['continue', 'weakness', 'oil', 'gas', 'market', 'leave', 'uncertain', 'quickly', 'able', 'ramp', 'output', 'airframer', 'order', 'class', 'internal', 'target', 'objective', 'sell', 'difficult', 'situation', 'oil', 'gas', 'market', 'impact', 'sale', 'currently', 'plan', 'produce', 'annually', 'delivery', 'however', 'oil', 'gas', 'sale', 'could', 'impact', 'schedule', 'able', 'sell', 'oil', 'gas', 'probably', 'change', 'plan', 'regard', 'industrial', 'ramp', 'booking', 'include', 'initial', 'commitment', 'operator', 'yet', 'decide', 'aircraft', 'configure', 'offshore', 'transport', 'mission', 'apart', 'deal', 'none', 'order', 'oil', 'gas', 'sector', 'confident', 'oil', 'gas', 'sale', 'emerge', 'operator', 'look', 'replace', 'large', 'pool', 'age', 'aircraft', 'include', 'believe', 'question', 'short', 'term', 'manufacturer', 'focus', 'specific', 'attention', 'sector', 'catch', 'sale', 'market', 'segment', 'addition', 'grow', 'interest', 'operator', 'look', 'large', 'capable', 'aircraft']\n"
     ]
    }
   ],
   "source": [
    "print(trigram_mod[bigram_mod[data_ready[0][:100]]]) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Find the Optimal number of Topics"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create Dictionary\n",
    "id2word = corpora.Dictionary(data_ready)\n",
    "\n",
    "# Create Corpus: Term Document Frequency\n",
    "corpus = [id2word.doc2bow(text) for text in data_ready]\n",
    "\n",
    "def research_optimal_num_topics(start=2, limit=40, step=3):\n",
    "    \"\"\"\n",
    "    Compute c_v coherence for various number of topics\n",
    "\n",
    "    Parameters:\n",
    "    ----------\n",
    "    dictionary : Gensim dictionary\n",
    "    corpus : Gensim corpus\n",
    "    texts : List of input texts\n",
    "    limit : Max num of topics\n",
    "\n",
    "    Returns:\n",
    "    -------\n",
    "    model_list : List of LDA topic models\n",
    "    coherence_values : Coherence values corresponding to the LDA model with respective number of topics\n",
    "    \"\"\"\n",
    "    coherence_values = []\n",
    "    model_list = []\n",
    "    for num_topics in range(start, limit, step):\n",
    "        lda_model = gensim.models.ldamodel.LdaModel(corpus=corpus, id2word=id2word, \n",
    "                                                    alpha='auto', num_topics=num_topics, \n",
    "                                                    random_state=42, chunksize=100, \n",
    "                                                    passes=5, iterations=1000, \n",
    "                                                    per_word_topics=True)\n",
    "        model_list.append(lda_model)\n",
    "        coherencemodel = CoherenceModel(model=lda_model, texts=data_ready, dictionary=id2word, coherence='c_v')\n",
    "        coherence_values.append(coherencemodel.get_coherence())\n",
    "\n",
    "    return model_list, coherence_values\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Show graph\n",
    "def plot_coherence_values(start, limit, step, cv):\n",
    "    fig, ax = plt.subplots(figsize=(10,6))\n",
    "    \n",
    "    ax.plot(range(start, limit, step), cv, label='Coherence values', c='b', \n",
    "            linestyle='dashed', marker='o', markerfacecolor='r', markersize=10);\n",
    "\n",
    "    for i, c in zip(range(start,limit,step), cv):\n",
    "        if c == max(cv):\n",
    "            plt.annotate('Optimal K-topics='+str(i)+'\\nCoherence value='+str(round(c,2)),\n",
    "                         xy=(i, c), xytext=(-10, -90),\n",
    "                         arrowprops=dict(facecolor='g',shrink=0.05),\n",
    "                         clip_on=False,textcoords='offset points')\n",
    "            \n",
    "    plt.title('What is the Optimal Number of Topic (K) ?', fontsize=23)\n",
    "    ax.set_ylabel(ylabel='Coherence score', fontsize=17)\n",
    "    ax.set_xlabel(xlabel='Number of Topic', fontsize=17)\n",
    "    ax.legend(); plt.show()\n",
    "    \n",
    "    return plt.show() \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CPU times: user 10.7 s, sys: 515 ms, total: 11.2 s\n",
      "Wall time: 13.4 s\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "start,limit,step = 3,16,1\n",
    "model_list, coherence_values = research_optimal_num_topics(start,limit,step) \n",
    "plot_coherence_values(start,limit,step, coherence_values) "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- En se basant sur le score de cohérence, on voit que le modèle LDA a le meilleur score lorsque le nombre de topic est 9.\n",
    "- Dans la partie de la visualisation, ci-dessous, seul les 4 topics seront utilisés. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Building the Topic Model with 4 topics "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create Dictionary\n",
    "id2word = corpora.Dictionary(data_ready)\n",
    "\n",
    "# Create Corpus: Term Document Frequency\n",
    "corpus = [id2word.doc2bow(text) for text in data_ready]\n",
    "\n",
    "# Build LDA model\n",
    "lda_model = gensim.models.ldamodel.LdaModel(corpus=corpus, id2word=id2word, \n",
    "                                            alpha='symmetric', num_topics=4, \n",
    "                                            random_state=42, chunksize=100, \n",
    "                                            passes=5, iterations=1000, \n",
    "                                            per_word_topics=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[(0,\n",
      "  '0.014*\"test\" + 0.011*\"aircraft\" + 0.006*\"pilot\" + 0.006*\"operation\" + '\n",
      "  '0.006*\"base\" + 0.006*\"cabin\" + 0.005*\"fly\" + 0.005*\"customer\" + '\n",
      "  '0.005*\"carry\" + 0.005*\"production\"'),\n",
      " (1,\n",
      "  '0.015*\"system\" + 0.012*\"aircraft\" + 0.011*\"operator\" + 0.009*\"oil\" + '\n",
      "  '0.009*\"increase\" + 0.009*\"gas\" + 0.007*\"customer\" + 0.006*\"safety\" + '\n",
      "  '0.006*\"mission\" + 0.006*\"order\"'),\n",
      " (2,\n",
      "  '0.014*\"system\" + 0.012*\"aircraft\" + 0.009*\"design\" + 0.009*\"video\" + '\n",
      "  '0.007*\"military\" + 0.007*\"ship\" + 0.007*\"mission\" + 0.006*\"assembly\" + '\n",
      "  '0.006*\"allow\" + 0.005*\"surveillance\"'),\n",
      " (3,\n",
      "  '0.018*\"production\" + 0.013*\"aircraft\" + 0.012*\"cabin\" + 0.008*\"expect\" + '\n",
      "  '0.008*\"feature\" + 0.007*\"plan\" + 0.006*\"engine\" + 0.006*\"design\" + '\n",
      "  '0.006*\"test\" + 0.006*\"end\"')]\n"
     ]
    }
   ],
   "source": [
    "pprint(lda_model.print_topics())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Wordcloud of Top N words in each topic"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1008x720 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from matplotlib import pyplot as plt\n",
    "from wordcloud import WordCloud, STOPWORDS\n",
    "import matplotlib.colors as mcolors\n",
    "\n",
    "cols = [color for name, color in mcolors.TABLEAU_COLORS.items()]  # more colors: 'mcolors.XKCD_COLORS'\n",
    "\n",
    "cloud = WordCloud(stopwords=stop_words,\n",
    "                  background_color='white',\n",
    "                  width=2500,\n",
    "                  height=1800,\n",
    "                  max_words=10,\n",
    "                  colormap='tab10',\n",
    "                  color_func=lambda *args, **kwargs: cols[i],\n",
    "                  prefer_horizontal=1.0)\n",
    "\n",
    "topics = lda_model.show_topics(formatted=False)\n",
    "\n",
    "fig, axes = plt.subplots(2,2, figsize=(14,10), sharex=True, sharey=True)\n",
    "\n",
    "for i, ax in enumerate(axes.flatten()):\n",
    "    fig.add_subplot(ax)\n",
    "    topic_words = dict(topics[i][1])\n",
    "    cloud.generate_from_frequencies(topic_words, max_font_size=300)\n",
    "    plt.gca().imshow(cloud)\n",
    "    plt.gca().set_title('Topic_' + str(i), fontdict=dict(size=16))\n",
    "    plt.gca().axis('off')\n",
    "\n",
    "\n",
    "plt.subplots_adjust(wspace=0, hspace=0)\n",
    "plt.axis('off')\n",
    "plt.margins(x=0, y=0)\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Word Counts of Topic Keywords"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(40, 4)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>word</th>\n",
       "      <th>topic_id</th>\n",
       "      <th>importance</th>\n",
       "      <th>word_count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>test</td>\n",
       "      <td>0</td>\n",
       "      <td>0.013632</td>\n",
       "      <td>39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>aircraft</td>\n",
       "      <td>0</td>\n",
       "      <td>0.010812</td>\n",
       "      <td>75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>pilot</td>\n",
       "      <td>0</td>\n",
       "      <td>0.006037</td>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>operation</td>\n",
       "      <td>0</td>\n",
       "      <td>0.005985</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>base</td>\n",
       "      <td>0</td>\n",
       "      <td>0.005808</td>\n",
       "      <td>25</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        word  topic_id  importance  word_count\n",
       "0       test         0    0.013632          39\n",
       "1   aircraft         0    0.010812          75\n",
       "2      pilot         0    0.006037          24\n",
       "3  operation         0    0.005985          30\n",
       "4       base         0    0.005808          25"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from collections import Counter\n",
    "topics = lda_model.show_topics(formatted=False)\n",
    "data_flat = [w for w_list in data_ready for w in w_list]\n",
    "counter = Counter(data_flat)\n",
    "\n",
    "out = []\n",
    "for i, topic in topics:\n",
    "    for word, weight in topic:\n",
    "        out.append([word, i , weight, counter[word]])\n",
    "\n",
    "df = pd.DataFrame(out, columns=['word', 'topic_id', 'importance', 'word_count'])\n",
    "#df.sort_values('importance', inplace=True)\n",
    "print(df.shape)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x840 with 8 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plot Word Count and Weights of Topic Keywords \n",
    "fig, axes = plt.subplots(2, 2, figsize=(12,7), sharey=True, dpi=120)\n",
    "cols = [color for name, color in mcolors.TABLEAU_COLORS.items()]\n",
    "\n",
    "for i, ax in enumerate(axes.flatten()):\n",
    "    ax.bar(x='word', height=\"word_count\", data=df.loc[df.topic_id==i, :], color=cols[i], width=0.5, alpha=0.3, label='Word Count')\n",
    "    ax_twin = ax.twinx()\n",
    "    ax_twin.bar(x='word', height=\"importance\", data=df.loc[df.topic_id==i, :], color=cols[i], width=0.2, label='Weights')\n",
    "    ax.set_ylabel('Word Count', color=cols[i])\n",
    "    ax_twin.set_ylim(0, 0.040); ax.set_ylim(0, 100)\n",
    "    ax.set_title('Topic_' + str(i), color=cols[i], fontsize=16)\n",
    "    ax.tick_params(axis='y', left=False)\n",
    "    ax.set_xticklabels(df.loc[df.topic_id==i, 'word'], rotation=30, horizontalalignment= 'right')\n",
    "    ax.legend(loc='upper left'); ax_twin.legend(loc='upper right')\n",
    "\n",
    "fig.tight_layout(w_pad=2)\n",
    "fig.suptitle('Word Count and Importance of Topic Keywords', fontsize=22, y=1.05)    \n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "doc_lda = lda_model[corpus]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Finding the dominant topic in each sentence"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "def format_topics_sentences(ldamodel=None, corpus=corpus, texts=data):\n",
    "    # Init output\n",
    "    sent_topics_df = pd.DataFrame()\n",
    "\n",
    "    # Get main topic in each document\n",
    "    for i, row_list in enumerate(ldamodel[corpus]):\n",
    "        row = row_list[0] if ldamodel.per_word_topics else row_list \n",
    "        row = sorted(row, key=lambda x: (x[1]), reverse=True) \n",
    "        \n",
    "        # Get the Dominant topic, Perc Contribution and Keywords for each document\n",
    "        for j, (topic_num, prop_topic) in enumerate(row):\n",
    "            if j == 0:  # => dominant topic\n",
    "                wp = ldamodel.show_topic(topic_num)\n",
    "                topic_keywords = \", \".join([word for word, prop in wp])\n",
    "                sent_topics_df = sent_topics_df.append(pd.Series([int(topic_num), round(prop_topic,4), topic_keywords]), ignore_index=True)\n",
    "            else:\n",
    "                break\n",
    "                \n",
    "    sent_topics_df.columns = ['dominant_topic', 'perc_contribution', 'topic_keywords']\n",
    "\n",
    "    # Add original text to the end of the output\n",
    "    contents = pd.Series(texts)\n",
    "    sent_topics_df = pd.concat([sent_topics_df, contents], axis=1)\n",
    "    \n",
    "    return(sent_topics_df) \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>doc_id</th>\n",
       "      <th>dominant_topic</th>\n",
       "      <th>topic_perc_contrib</th>\n",
       "      <th>keywords</th>\n",
       "      <th>text</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>25</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.9984</td>\n",
       "      <td>system, aircraft, operator, oil, increase, gas, customer, safety, mission, order</td>\n",
       "      <td>[celebrate, heritage, continue, safety, core, mission, issue, plate, shortage, approval, single,...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.9981</td>\n",
       "      <td>system, aircraft, operator, oil, increase, gas, customer, safety, mission, order</td>\n",
       "      <td>[continue, weakness, oil, gas, market, leave, uncertain, quickly, able, ramp, output, airframer,...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.9979</td>\n",
       "      <td>system, aircraft, design, video, military, ship, mission, assembly, allow, surveillance</td>\n",
       "      <td>[much, innovation, report, model, next, generation, apply, way, aircraft, well, design, file, pa...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>23</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.9979</td>\n",
       "      <td>production, aircraft, cabin, expect, feature, plan, engine, design, test, end</td>\n",
       "      <td>[industry, gather, big, western, oem, schedule, bring, long, await, civil, model, market, promis...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>9</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.9971</td>\n",
       "      <td>test, aircraft, pilot, operation, base, cabin, fly, customer, carry, production</td>\n",
       "      <td>[hope, significant, inroad, niche, market, marketing, director, booth, display, full, size, mock...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    doc_id  dominant_topic  topic_perc_contrib  \\\n",
       "25      25             1.0              0.9984   \n",
       "0        0             1.0              0.9981   \n",
       "3        3             2.0              0.9979   \n",
       "23      23             3.0              0.9979   \n",
       "9        9             0.0              0.9971   \n",
       "\n",
       "                                                                                   keywords  \\\n",
       "25         system, aircraft, operator, oil, increase, gas, customer, safety, mission, order   \n",
       "0          system, aircraft, operator, oil, increase, gas, customer, safety, mission, order   \n",
       "3   system, aircraft, design, video, military, ship, mission, assembly, allow, surveillance   \n",
       "23            production, aircraft, cabin, expect, feature, plan, engine, design, test, end   \n",
       "9           test, aircraft, pilot, operation, base, cabin, fly, customer, carry, production   \n",
       "\n",
       "                                                                                                   text  \n",
       "25  [celebrate, heritage, continue, safety, core, mission, issue, plate, shortage, approval, single,...  \n",
       "0   [continue, weakness, oil, gas, market, leave, uncertain, quickly, able, ramp, output, airframer,...  \n",
       "3   [much, innovation, report, model, next, generation, apply, way, aircraft, well, design, file, pa...  \n",
       "23  [industry, gather, big, western, oem, schedule, bring, long, await, civil, model, market, promis...  \n",
       "9   [hope, significant, inroad, niche, market, marketing, director, booth, display, full, size, mock...  "
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Display setting to show more characters in column\n",
    "pd.options.display.max_colwidth = 100\n",
    "\n",
    "df_topic_sents_keywords = format_topics_sentences(ldamodel=lda_model, corpus=corpus, texts=data_ready)\n",
    "\n",
    "# Format\n",
    "df_dominant_topic = df_topic_sents_keywords.reset_index()\n",
    "df_dominant_topic.columns = ['doc_id', 'dominant_topic', 'topic_perc_contrib', 'keywords', 'text']\n",
    "\n",
    "df_dominant_topic.sort_values(by='topic_perc_contrib',  ascending=False, inplace=True)\n",
    "df_dominant_topic.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>doc_id</th>\n",
       "      <th>dominant_topic</th>\n",
       "      <th>topic_perc_contrib</th>\n",
       "      <th>keywords</th>\n",
       "      <th>text</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>15</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.7552</td>\n",
       "      <td>system, aircraft, design, video, military, ship, mission, assembly, allow, surveillance</td>\n",
       "      <td>[develop, rotary_wing, aerial, system, naval, application, newly, award, contract, sign, french,...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>17</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.7386</td>\n",
       "      <td>test, aircraft, pilot, operation, base, cabin, fly, customer, carry, production</td>\n",
       "      <td>[recently, start, autonomous, trial, optionally, pilot, demonstrator, anticipation, actual, prot...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>16</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.5445</td>\n",
       "      <td>production, aircraft, cabin, expect, feature, plan, engine, design, test, end</td>\n",
       "      <td>[demonstrator, military, tactical, aerial, system, develop, formerly, base, fully, autonomous, i...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    doc_id  dominant_topic  topic_perc_contrib  \\\n",
       "15      15             2.0              0.7552   \n",
       "17      17             0.0              0.7386   \n",
       "16      16             3.0              0.5445   \n",
       "\n",
       "                                                                                   keywords  \\\n",
       "15  system, aircraft, design, video, military, ship, mission, assembly, allow, surveillance   \n",
       "17          test, aircraft, pilot, operation, base, cabin, fly, customer, carry, production   \n",
       "16            production, aircraft, cabin, expect, feature, plan, engine, design, test, end   \n",
       "\n",
       "                                                                                                   text  \n",
       "15  [develop, rotary_wing, aerial, system, naval, application, newly, award, contract, sign, french,...  \n",
       "17  [recently, start, autonomous, trial, optionally, pilot, demonstrator, anticipation, actual, prot...  \n",
       "16  [demonstrator, military, tactical, aerial, system, develop, formerly, base, fully, autonomous, i...  "
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_dominant_topic.loc[df_dominant_topic.topic_perc_contrib<=0.8]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The percentage of documents that dominated the topic has less than 80% contribution is: 6.9%\n"
     ]
    }
   ],
   "source": [
    "print('The percentage of documents that dominated the topic has less than 80% contribution is: {}%'.format(\n",
    "      round(len(df_dominant_topic.loc[df_dominant_topic.topic_perc_contrib<=0.75])/len(df_dominant_topic)*100,2)))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Find the most representative document for each topic"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>no_topic</th>\n",
       "      <th>topic_perc_contrib</th>\n",
       "      <th>keywords</th>\n",
       "      <th>representative text</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.9971</td>\n",
       "      <td>test, aircraft, pilot, operation, base, cabin, fly, customer, carry, production</td>\n",
       "      <td>[hope, significant, inroad, niche, market, marketing, director, booth, display, full, size, mock...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.9984</td>\n",
       "      <td>system, aircraft, operator, oil, increase, gas, customer, safety, mission, order</td>\n",
       "      <td>[celebrate, heritage, continue, safety, core, mission, issue, plate, shortage, approval, single,...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2.0</td>\n",
       "      <td>0.9979</td>\n",
       "      <td>system, aircraft, design, video, military, ship, mission, assembly, allow, surveillance</td>\n",
       "      <td>[much, innovation, report, model, next, generation, apply, way, aircraft, well, design, file, pa...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3.0</td>\n",
       "      <td>0.9979</td>\n",
       "      <td>production, aircraft, cabin, expect, feature, plan, engine, design, test, end</td>\n",
       "      <td>[industry, gather, big, western, oem, schedule, bring, long, await, civil, model, market, promis...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   no_topic  topic_perc_contrib  \\\n",
       "0       0.0              0.9971   \n",
       "1       1.0              0.9984   \n",
       "2       2.0              0.9979   \n",
       "3       3.0              0.9979   \n",
       "\n",
       "                                                                                  keywords  \\\n",
       "0          test, aircraft, pilot, operation, base, cabin, fly, customer, carry, production   \n",
       "1         system, aircraft, operator, oil, increase, gas, customer, safety, mission, order   \n",
       "2  system, aircraft, design, video, military, ship, mission, assembly, allow, surveillance   \n",
       "3            production, aircraft, cabin, expect, feature, plan, engine, design, test, end   \n",
       "\n",
       "                                                                                   representative text  \n",
       "0  [hope, significant, inroad, niche, market, marketing, director, booth, display, full, size, mock...  \n",
       "1  [celebrate, heritage, continue, safety, core, mission, issue, plate, shortage, approval, single,...  \n",
       "2  [much, innovation, report, model, next, generation, apply, way, aircraft, well, design, file, pa...  \n",
       "3  [industry, gather, big, western, oem, schedule, bring, long, await, civil, model, market, promis...  "
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Display setting to show more characters in column \n",
    "pd.options.display.max_colwidth = 100\n",
    "\n",
    "sent_topics_sorteddf_mallet = pd.DataFrame()\n",
    "sent_topics_outdf_grpd = df_topic_sents_keywords.groupby('dominant_topic')\n",
    "\n",
    "for i, grp in sent_topics_outdf_grpd:\n",
    "    sent_topics_sorteddf_mallet = pd.concat([sent_topics_sorteddf_mallet, \n",
    "                                             grp.sort_values(['perc_contribution'], ascending=False).head(1)], \n",
    "                                            axis=0)\n",
    "\n",
    "# Reset Index \n",
    "sent_topics_sorteddf_mallet.reset_index(drop=True, inplace=True)\n",
    "\n",
    "# Format \n",
    "sent_topics_sorteddf_mallet.columns = ['no_topic', \"topic_perc_contrib\", \"keywords\", \"representative text\"]\n",
    "\n",
    "# Show \n",
    "sent_topics_sorteddf_mallet"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAABM0AAAI4CAYAAAB5pR5oAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAASdAAAEnQB3mYfeAAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4xLjMsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+AADFEAAAgAElEQVR4nOzde5xN9f7H8dfHbVwn1yhO5iB3QojIKKU45BJdnH5udc6hy9E5ofKrVEcnykmS1CmMhNwKvy4qMk6doxp1KkSlohti3OXSjO/vj7X3zJ49+zYzmzG8n4/HeszstT7ru77ftdfaY398v99lzjlEREREREREREQkW7HCroCIiIiIiIiIiMipRkkzERERERERERGRIEqaiYiIiIiIiIiIBFHSTEREREREREREJIiSZiIiIiIiIiIiIkGUNBMREREREREREQmipJmIiIiIiIiIiEgQJc1ERERERERERESCKGkmIiIiIiIiIiISREkzERERERERERGRIEqaiYiIiIiIiIiIBFHSTETkDGZmKWbmzGxLYdclVmY22FdnZ2ZJIbYXuTb5FeW6n2hmVtnMHjOzz83sl4Br4IHCrpuIRGZm7/nu1xWFXRcREZG8UNJMRKQIMLPOAUmCwCXTzPaZ2XdmlmZmz5rZzWZWpbDrLBIvZnYW8D4wEmgElMlnObqP5IQzs8kB19ZlUWJ7B8QeN7OqUeIfCIi/Lr41L1rM7DwzG2Vmb5rZt2Z2wMyOmNk2M1ttZhPMrFVh11NERIo2Jc1ERIq2YkAi8BugNfBH4DngRzN7wcxqFEalzCwp4Ivd4MKow6lCvcfi4lbgfN/vE4FOQDPf8nQcyj8l7yM5ueLYezE14PfkKLGdAqsAXJKH+H/loU6nDTMrb2ZTga+AR4GuQBJQHkgAauCdp9HAR2b2bzO7qJCqe1KZ2Q++a/j5wq6LiMjpokRhV0BERPJsGjkTBeWAs4DGQEfgarwvDv8DdDOz651zK0MV5JwbDAw+kZWNN+dcCpBSyNU4IYri+3GSXOH7+ZFzblScyozbfSQS5F+Aw0uCxZo0ywSK++JfCRVoZqWAdr6XXzrnthW8qkWLmdUCXgOa+1b9AswHVgJbgcNAdaAF0BtoA1wMjAL6nez6iohI0aekmYhI0fOzc259iPVvAU+Y2TnAU0BfoCrwipl1cM6tO5mVFImjc30/v4hjmbqP5IRwzqWb2QagKXCRmSU4544Gx5lZBbzkDniJnwHk7EkWrA3ZQ5NXx7HKRYKZlQaWkZ0wexMY6pz7KUT468DffcNjnzhJVRQRkdOQhmeKiJxmnHPbnHPXADN9qyoAGqohRVmC7+evJ+uAuo+kgPxJrdJA2zAxHfF6lx0GJvnWXWBmFcPEBybUzrikGTAOaOn7fQXQI0zCLItz7h3gImDBCa6biIicppQ0ExE5fd0K/Oj7va2ZXREcEMt8W2Z2tZktNrMtZnbYt3xvZh+b2VNm1tPMLCDeAd8GFDEzxMTrKQHxueY/M7PuZvayb2L2Y2a2NyA+4tMzQ9T/HDN71Mw2mdkhM9vtmyR6cGC9Q+y3JbiuYeJC1sc/YTcwyLeqdphJ6AP3iWn+MzM738yeNO9JkvvNe5rkN77920fZN8cxzKyCmd1rZp/6JtI+YGZrzeyvvuFgBWZmFX3HeN/M0s3sqJn9ZGbLzOz6UO9D4HkFavtWDwo6d6nxqF8UUe8jv/y0M0w5LXz31joz2+O75742s5Vm9hcz+01QfMxzCEa7xoKvezO7wLfPVl89vjWz58ysdtB+TczseV89/ZOxv2Bmv42xzc3NbKrvmt4XcKzZZtYhyr455iLznb9ZvjofNbOffe9ByKGS/jYHrBob4j5NjaUdAQKTWuGGaPrXvw98DOzF+7d5xyjxweXnYGZtzGy6mW027zPvgHmff1PNrGGkSlvQUy7N7Ldm9riZbfR91jgz6xFiv2vM7C0z2+V77zb7jlc30vFiZd4DEob7Xh4BBjvnMmLZ1zl32DkXNmlmZleY2Vzf9XLEd/19at7TemtF2K9ewPVxY5T6v+iL2xxme465yHxlP23e5/oR3+fJW2bWK8z+7/mu4Zq+VTeFuIZzHdvMepn3993fdv/f94/MbEqo91pE5IzjnNOiRYsWLaf4AnTGmyPHAQ/kYb97A/abFmJ7im/blhDbiuMNGXIxLKUD9oslPiUgPilg/RDgnyHi9wbEDw5YnxSpTUArYHuEerwBlAlz7rYE1zVMXMj6AA/EeC6SYnk/AmJGAMeilDkFKBZm/8Dzcz7eZNrhykkFEgp47XYCdkWp77tA5QjnNWz9ToX7qCDtDCqjFPAscDwv7SbnPTQ4SlsiXmOB1z1wA16CIlQddgCNfPtcHyEuHWgSoT7FgH/gzekV7ZouHqaMrPcU7yEO4e6P48DwCG2O57VWPWDft8LE/CfwWgRe9b1+NERscWC/b/vmMOWZ71xGun5+BUZFqPd7vrgVQM+AYwYuPYLqNSfC8fbhzUmYVW4+P0duDygzpSCfSQFlJgBzo7zvvwC/D7N/vYC4G6Mc68Uo790Pvu3P483FdiBCnf4W4X2LtGwOiC8BLIphHweUiMf51qJFi5aiuqinmYjI6e3NgN+T87jvcOBa3+/rgduAy/CGxyQDw/CGvPwStF8z4MqA1/eS/aRD//K/YY45AvgD8AFeD622vmM9nMe6A5QFFgOVgMeBS/HmBLoJ2OiLuQqYkY+yY/E0XluX+l7/RO7z0IzsXkxRmdlNePPzlMT7UvUA3tP22gF/DijrNrwvz5GUxfuSfi7eEykvBy7Ee88/8sUkA/fEWr8Q9W0KLAeq4H35moF3bbTGm7/pA19oR2C5mZUM2H0J2efIPwRrKTnP3ZD81i2PIt5HBWynvwwDFuIlfQzvvRyDd922wnt/7sLrleTi0agomuMNTf0O+BPevdgJL3kFcDbwvJm1AWb74obhDYW7BHjSF1eZyMNanwX+ipc8+y/e587leOfuOuBtX9xteMPzIumK94CHzb5y2vmWu/HuF8Obr65+iP2aBbyeRu77NE/XmnNuB7DJ9/JiM8sxj7CZlcVrI3jJVMh+Gmaoz+qWeEOEIXwvs7/jnUvD+8+Cv+C1vyPe5/A+vGTJo2Z2a5QmJOEllH4F7sN779vinYfvAuIm4l3j+NbfincNdMJ7v0oAL+E90bIgOgf8/loBy/KbiZcYBu+a+SNeGzvjPZXzKN4ccrNPYo+rFsA8YDfee9kB7+/W7cDPvph7zSz4Kav/g3ed7vC9fpnc13C3gPjbgGt8v38G3IL3WdMSr/3D8T6PDsenWSIiRVhhZ+20aNGiRUv0hfz3kClFdg+OX0NsTyFMrxO8L3IOrxdG+QjHqARY0LqkgPoOjlLHwFiH90UtZC8pX/zggNikCG3y96q4PERMGbJ7eTjgihAxW4ihV0Me6pPrHOfx/ahCdu+DPUDTEDHVgC/J7lXTJsr52QdcECKmLF5i0eF9UQvZwyeG9gSe41w9MfB6qQT2drgzTDkxvReFeB8VuJ14X1L9298BKkSoz28KcL9FvB7J2evqw1D1wEvI+mN+BtYQ4jMCL1ntj2sZYnvvgO13RajzBF9MBlA3xPbAz4/lBPR8DYi5LCDm8TDHyfO1EeVcPxNQZrugbV18648BZX3r2vuvseDzCdwZUNbAEMdqFnCNfgPUCBHTgOzekIfDxAT2WPoRqB2hfc0DjrkJqBIi5kLgYECZ+e1p9nVAGXXi8N50DygvLcz128F3nhywLfi64sT0NHPAWqBiiJimZPeiXBClnOej1GeNL+5roFyEuLA9Y7Vo0aLlTFnU00xE5DTmnDuGl2gBKGFmiXnY3d8z4GPn3MEIx9jjnHP5rWOQ/cAw59zxOJX3T+fciuCVzrnDwFCye+zcFqfjnUhDgPK+3+9zIZ786JzbiddTD7zeJrdHKfN+59ynIcr5heweRdWAxnmtrJm1xksCACx2zr0Y4jiZvvru8a36s6/H1Skl0n0Uj3aaWTG83lD4Yq51zh0gDOfc9/ltSx4NDVOPpwJ+rwbcFOYzIjAu1FMhx/h+rnLOTYhQj3vxehsWx0tSh3MEGOScOxK8wXkTwqf5XiZHKCOeAnuEBbff//oj3/0GXrLkMF7vrIvDxIM3bDrYrWTPVXyLc257cIBz7gu83orgPaDgj5EqD4x2zm2NsH14wDGHO+fSQxzzI7ykZ0FVDfh9R9io2P3Z99PhXTO5rl/n3L/xetKB9/fw2uCYE8Cf+N6ba4P3mf+q72VBr2H/3/ePnHOHwlbGud0FPI6ISJGnpJmIyOkv8MtAhbBRuf3g+9kpXpM5x2CZc25/HMsLO/TSObcJr4cQwGVmVjyOxz0R/BPQHwNmhQtyzq0GvgjaJ5w5EbZ9GPB7nai1yy3w2P8MF+Sc20P2k+3OA4KHzp0qwt1H8WjnBb51AC8453YVoJ7x8lmoxCyAc+5bspOInznnPg8T901AXI4HApjZuXjDziDKkw2dc7/i9YyB3MmkQCucNywyHP81nZ/rOT8iPQzA/9o/JNPfzg+C430JVv9wvC3OucDhkX7+6/B7cg4nDjYH8CdJIn0+HMXrHRmJf/8tzrlVEeLi8dRZ/z3nIiV5YuEbHu0/v++Fu359ng34PdrnaTx8Gu6+8/Ffw2ebWbkCHMf/971zrA/rEBE5UylpJiJy+gv8gp+XhNR0388qwHozm2dmg8zs/PhVLZdcvZ4K4FgM5fm/gJQn6Ev9Kcg/59KGSL2QfPwJhhq+p86FsjNKciawh0Feeij6Bc4R9X6U2DUBvzcLG1W4wt1H8Whnq4Dfwz4V8ST7Isp2f0+YWOOCE/ZtAn6fFuJJfzkWsudfijQ31sYI2yD7ms7P9Zxnzrmf8ObKAujo61GIeU+lvci3/l9Bu/nnNwtMsjXDGwYPIa4P3/xo/kTg+5F6/vp64f03oNxwNjnnjobb6Dum/z9TPgwX5zvmNrxkXkH4k9ZWwGQReA9AKe37PeI965z7gewE08n4bIr1GoaCXcf+v+/VgA1mNsfMBppZvQKUKSJyWlLSTETkNGZmCWR/Wf01hmRLFt8ws3vxkk+l8Z6QlwJ8aWbbzWymmUXq9ZEfe6KHxCzdOZcRJSawV0qVOB77RKjs+xnL0KTAoVnh2hX8AIdggUNk89MLz1/fIzH0HoylvoUmyn0Uj3YGJja35a+WcRfr9RFrXPA1dHaea+QpG2FbrHU5mf/+9Se5EvEmeQcvYVbaV5/3guL9SbQ2ZlbG93tgAi1UUrVywO95+Xw4K/gBBQGifRbn9ZgFHVIZmOCvXsCy8nu+TsZn04n+XAbAOZcCjMX7+14G72EOs4CvzGybmc0ws3b5LV9E5HSipJmIyOmtBd7cVhC9R0guzrmH8XowjMKbYHufb1N1vLmF/m1mz/t7UMRBZpzKidUpN39WDGKZPy6wXfGaby6/ilp9Q4nlPopXO0/F9p8IgV/4/0joJ8uGWq6kaAk1RNM/P9lnzrl9QfFr8B54UArvyZeB8RB6PrNA8boO4/1ZXNDP2k8Cfr+wgGUFysv5Oq3uTefcQ3i9Be/CG9LrT/rXwJtDc42ZPXMqzjMpInIyKWkmInJ6C/yCGTwMKCbOuR+dcxOdc93w/oe+FfAQ4J/0+SZOzYn0q0ToReEX2NsleBJr/5fGaH8rCzpUKFb++kUanuYX2BOjsCZy9te3TAwPoDgV6htJpPsoHu3cGfD7uXmsG+RMcJwq12s0gT2Hijnn1se4fFloNc6fSEmzd4Ni8c3X9d+geP98Zt/75pMLFngt5eXzYZ/vIRX5EXjMWHp+5bdnoV/gnGk9ClhW4Gd9Xs5X8GdTUbzvcnDO/eCce9Q5dxXeEOALgb+R3dY/4T3wQUTkjKWkmYjIaco3tOdPAauiTeoclXPuuHPuv865sUBHvB4RkPupYqfC/8iXwptgPZK2vp8HgeAvo/4heJWIrFGU7fE6F+t8P5uYWfmIkdlPc9xWiJPKrwv4Pdown/YBv392AuqSbzHcR/Fo50cBv+fnqXiBw0ULer2eLB8H/F7Ueo/FzDdp/xbfy0t8k9D7h7WH+48MfzKtk5k1JDtpE3K+O9/TN7/2vbwoVIyfmZUme5hovu+1oGO2jRRrZucAv8nvsXzmkT108Vozq1WAsjbjPaUUotyzvuP4jxV8vk7F+y7ff298f98/ds7dj5eo9Q8FPRlPDRUROWUpaSYicvqaSnavlTVRnm6WZ76nT/ondw6ebP5IwO8J8TxuHg0Nt8H3ZdT/5fWdED0uvvH9vDDc8BRfQqVflDr4z0VBz8Pbvp+lgIHhgsysE9AgaJ/CEHjsm8MFmVlFsr+UbT0FexJFu4/i0c7PyE6sDDSzPM2d5JzbS3bPkDbh4sysFdAkL2WfKL4na/oTjlebWePCrI9PvO7VYP5kV2VgEN6DRyB60qwdOZ/YGOkhEf7r8Dwz6xohbkDA8Qv6+eDfP8nMLo0QF/a+iJUv+f+M72VpYGYMPYkB73PazLISP76nlPrPZUff34Jw/hjwe/D5Sid7yoJI910bsj+TT7S4XMO+J4r+6HsZ7mEyIiJnBCXNREROM2Z2jpktxpuTBLx/1Of5S4vvSVolI2xvANT2vfwmaHM63gTDAIX5NK4/mlmX4JW+ZNcMsueqeSrEvqm+n+cA/xOijGJ4X+KiDU3yT+x+dgzD9yKZSfYT5MaZWa6eC75kyz99Lx0wpQDHKxDn3EfAf3wv+5vZ9cExvnP4LNm9NJ48SdWLKtb7KB7t9D3t8BHfy0rAgki9Cc0sVK8dfxKgl5nVD7FPFbxr6FTyoO9nceBlMzsvXKB5eppZ8xNYH/+9Gu/PrMBk1z2+n184534OE/8u3v1bBrgjYH1qhGNMJbtn0NNmlutzyffk4/G+l4eB5yJXO6pnAo45zcwqBwf4ErV3FfA4fv9L9txmlwOv+nqxhWVmyXhPyAzuLeW/Bw1ICfVETjNrjzefJ3gPA1gQuN133/oTn33NrC5BfE8vPpn3XdRr2MyKmdmNUf6+Nya7h13w33cRkTNKTP9DIyIip5SzzaxpwOuyQEW84R+XAD3xeiOBN1fStb7/Nc6rWcBEM1sK/Bv4CjiE97/O7fHmMfP/58vTgTs65zLM7ANffW42sw14w7H8ibR9zrkT/ZTAnb76vm5mU4D/w0s6Ncf7IuRPOr3knAvV42IO8ABeEuM5XyLidbw2NAZuwRsK9W+gQ4R6+J+OVwyY7qvLTrKH0Xzt6/kQkXNut5mNAKb76vS+mU0E3gF+xRsidRfZX3SecM6tjVbuCfYnIA2vZ8gcM7sMWIiXVK0P/JnsIYtpnNykWTzvo3i08zmgO9ALuAzYaGZP4yXk9uH1UmoJ9MW7BoN79jwF9PHVIdXM/gZ86GtDe+AveE//+xhvXsJC55xbbGbT8OZMagCsN7PngRV4X/4T8Ib1XQRcAyThvS8nagjve8Bv8Xq+/RkveeUfxveLb6hlfgQmzer4foadY9I5l25mG/E+Z/zxPznnNkfYZ72ZTcBLytUF/ut7/T5eUjIZGI13jQOMdM5tD1lYjJxzn5rZk3iJvQa+Y44H1uK9d12BvwJH8ZJOuZJKeTzeETO7GngV73P8SmCzmb2Ed818h/d+nY03BPVqsu+7r4LKesPM5gE34F1fH5vZY8CneMnKbr52lcb7rP6Dc+5oiGpNwbsmywCrffedv/3++64S3jx1LQvS/hi9h/f51c7M7gPeIPs/W475engWA2YD/zCzJXifMZvxhr9WxeuBfSvZ/6k07STUW0Tk1OWc06JFixYtp/gCdMb7h3usyxHgBaB6lHJTfPFbQmyL5Ti/AneGKfsqvImSQ+2XEhCXFLB+cAznYnBAfFKkNuF9Sdkeof7LgTIRjnU13he+UPseB8bFUJ9ieF9kwtUhKVTdI9RphO+8R3pfnsKbXD1P73lQXJ7elwjldMKb9D1Sfd8FqkQoY0vwdXMq3UdxbGcpvB6Q0eqVGmb/8RH2OeC7niO+/7Ge63jF4X0xvw8vERit3ZlA5xBl+Lc/EKUuD/hjw2xvjpd0ifmc5+Ha+z6ovBujxD8TFD83hmMY8DjeZ1O4c5gBjI5Qhv+zakWM7SoBzI1wvH14vcLyVG6UY5bH61kX7rM513sHtApRTgLeXGmR9v0F+H2U+kyMsP9+vAcXvOh7vTlMGT/4tj8f5Vg3B5RdK8T2WnjJ+lB12RzwnsVy3o4BdxT0/dKiRYuWor5oeKaISNHm/zL8I95k4s8BfwDOdc4NdM7tKEDZDfD+t3kxsB6vt00G3peAT4AngGbOuX+ErJhzy/F6w7yM94XgWKi4E8k591+8HgcTgS/wvgDtw0teDAW6OecOR9h/GV4Prpfwer78ipeEWwpc7py7N4Y6HMfrEfEAXi+f/XjvW37bNBmvB8pTwCa8XgRH8B5k8AJwsXPuNt9xC51z7l94Q4Xuw+v5tAfvPG7D6zEyAOjknAt+eunJVOD7KB7tdM4dc84Nxev58jzwJd776590fQVer7VcQ0B9+9+N1xNtpe/4R/GSVv/ESxosi9aOk815/oZ37v6O1zNqF95nzSG8HjBL8JLF5znnUk9gXT7DO/cv4p23IxF3yJvg+ciiPc04+MmakeYzA7LO5V/x2jATb1jdYbzz+AVej+BmzrlHY6pxDJxzGc65AUB/vOtzN955+wavh1Ir59yKeB3Pd8yDzrlb8Xpx3gW8BWzFa+cxYAfe+R0PtHTOdXbOfRyinKPOuRvwesS9hJfYPIr3WbAO7+9GfefcnCj1GYk3t+U7wF5fGd/iJT5bOudeLXCjY+Sc+wFvfrXn8HrX5fr75pzLABri9RZ/mdB/3yfhXStPnJyai4icusy5fP+7XURERERERERE5LSknmYiIiIiIiIiIiJBlDQTEREREREREREJoqSZiIiIiIiIiIhIECXNREREREREREREgihpJiIiIiIiIiIiEkRJMxERERERERERkSBKmomIiIiIiIiIiARR0kxERERERERERCRIicKuQFFjZmcBycD3wLFCro6IiIiIiIiIyOmgFPAbYLVzbl9hVwaUNMuPZGBpYVdCREREREREROQ01AtYVtiVACXN8uN7gCVLllCvXr3CrouIiIiIiIiISJG3efNmevfuDb68y6lASbO8OwZQr149mjRpUth1ERERERERERE5nZwyU2HpQQAiIiIiIiIiIiJBlDQTEREREREREREJoqSZiIiIiIiIiIhIECXNREREREREREREgihpJiIiIiIiIiIiEkRJMxERERERERERkSBKmomIiIiIiIiIiARR0kxERERERERERCSIkmYiIiIiIiIiIiJBlDQTEREREREREREJoqSZiIiIiIiIiIhIECXNREREREREREREgihpJiIiIiIiIiIiEuSUS5qZWQUze9TM3jKznWbmzOyBMLGtzGyFmR00s71m9rKZ1TnJVRYRERERERERkdPMKZc0A6oAfwQSgCXhgsysIZAKlAKuBYYC9YF3zazaia+miIiIiIiIiIicrkoUdgVC2ApUcs45M6sK3Bwm7iHgKNDDObcfwMw+Ar4CRgJ3nYzKioiIiIiIiIjI6eeU62nmfCLFmFkJoAew2J8w8+27FVgF9DmxtRQRERERERERkdPZqdjTLBZ1gTLAZyG2fQZcYWalnXNHgjea2dlAQYZv1i3AviIiIiIiIiIiUgQU1aRZFd/P3SG27QYMqARsC7H9FmDsCarXSWH2YGFXQQDnivRlJCIiIiIiIiIRFNWkmV+kYZzhtj0NLCzAMesCSwuwv4iIiIiIiIiInOKKatIs3fezSohtlfESZntD7eic+xn4Ob8HNrP87ioiIiIiIiIiIkXEKfcggBh9DRwGmoXY1gzYHGo+MxERERERERERkVgUyaSZcy4D+D+gr5lV8K83s/OAS4GXC6tuIiIiIiIiIiJS9J2SwzPNrBtQDvAnxBqbWT/f7687537Bm8w/DXjVzMYDpYGHgF3AP05ylUVERERERERE5DRySibNgGlA7YDX/X0LwG+BLc65TWbWGZgALAIygHeAkc65nSexriIiIiIiIiIicpo5JZNmzrmkGOM+Ai4/sbUREREREREREZEzTZGc00xEREREREREROREUtJMREREREREREQkiJJmIiIiIiIiIkFSUlIwM8yM1NTUXNudc9SrVw8zo3Pnzie9fqeCe++9lx49elCzZk3MjMGDB4eNdc4xc+ZM2rZtS7ly5UhMTKRVq1YsXbo0R9z27du57bbbqFOnDmXKlKF27drcdNNNfPfddzHV6ddff+XBBx8kKSmJhIQEGjZsyJQpUwrSTDmDKWkmIiIiIiIiEkaFChWYPn16rvWrV6/m66+/pkKFCoVQq1PDpEmTSE9P5+qrr6ZUqVIRY4cPH87w4cPp0qULy5YtY+HChQwYMIBffvklK+bo0aN06tSJ+fPnM3LkSN544w3GjBnDa6+9xsUXX8yBAwei1umWW27hkUce4dZbb+XNN9+kT58+jBgxgr///e8Fbq+ceU7JBwGIiIiIiIiInAquu+465syZw9SpU0lMTMxaP336dNq3b8/+/fsLsXaF68CBAxQr5vXFmT17dti4JUuW8OyzzzJ//nyuvfbarPVXXnlljrh3332Xr776iueff56bbroJgM6dO5OYmMiAAQNYsWIFffr0CXucDRs2MH36dB5++GFGjRqVtX96ejrjxo1j2LBhVK5cOd/tlTOPepqJiIiIiIiIhHHDDTcAMG/evKx1+/btY/HixQwdOjTkPseOHWPcuHE0bNiQhIQEqlWrxpAhQ9i5c2eOuPnz59O1a1fOOeccypQpQ6NGjbj77rs5dOhQjrjBgwdTvnx5Nm/eTPfu3Slfvjy/+c1vuPPOOzl69GicWxw7f8IsmsmTJ5OUlJQjYRZKyZIlATjrrLNyrK9YsSIApUuXjrj/kiVLcM4xZMiQHOuHDBnC4cOHWb58eUz1FfFT0kxEREREREQkjMTERPr168eMGTOy1s2bN49ixYpx3XXX5Yo/fvw4vXr1Yvz48QwYMIDXXnuN8ePH8/bbb9O5c2cOHz6cFfvVV1/RvXt3pk+fzvLly0aMYi8AACAASURBVLnjjjtYsGABPXv2zFXur7/+ytVXX02XLl1YunQpQ4cOZdKkSUyYMCGu7U1KSiIpKSlu5WVkZLBmzRpatmzJ448/Tu3atSlevDh16tRh4sSJOOeyYjt06MCFF17IAw88QFpaGgcPHuTjjz9mzJgxtGrVissvvzzisdavX0+1atWoUaNGjvXNmzfP2i6SFxqeKSIiIiIiIhLB0KFDufTSS9mwYQNNmjRhxowZ9O/fP+R8ZgsWLGD58uUsXryYvn37Zq2/4IILaNOmDSkpKQwfPhzwJtL3c87RoUMHGjVqRHJyMp999llWsge83msPPvgg/fv3B6BLly6sXbuWuXPncv/998etrSVKxDdNsGvXLo4ePcrKlStJS0vj4YcfplatWixcuJBRo0axZ88eHn744axjr1q1it///ve0bds2q4zOnTuzePHirJ5o4aSnp4ccflmuXDlKlSpFenp6XNsmpz/1NBMRERERERGJIDk5mbp16zJjxgzWrVtHWlpa2KGZr776KhUrVqRnz55kZGRkLS1atKBGjRo5nsT5zTffMGDAAGrUqEHx4sUpWbIkycnJAGzcuDFHuWaWqwda8+bN2bp1a1zbunnzZjZv3hy38o4fPw7A/v37WbhwIQMHDuSyyy5j2rRp9O7dm8cff5yDBw8CXm+66667jk8++YTnnnuOf/3rX8yaNYsff/yRK664gn379kU9npnla5tIKOppJiIiIiIiIhKBmTFkyBCefPJJjhw5Qv369bnkkktCxu7YsYO9e/eGfZrkrl27ADh48CCXXHIJpUuXZty4cdSvX5+yZcvy/fff07dv3xzDOAHKli2ba06vhIQEjhw5EocWnjiVKlXCzKhQoQLt2rXLsa1bt24sWbKEzz//nLZt2zJ9+nTeeOMN0tLSaN26NQCXXHIJHTt2pG7dujzxxBOMHTs27LGqVKnCJ598kmv9oUOHOHbsmB4CIHmmpJmIiIiIiIhIFIMHD+b+++/nmWeeyRpOGErVqlWpUqVK2Enn/UM633nnHX766SdSU1OzepcB7N27N74VL2RlypTh/PPPZ/v27bm2+ecz8z9Q4JNPPqF48eK0atUqR1ydOnWoUqVK1DnJmjVrxksvvcT27dtzzGu2bt06AJo2bVqgtsiZR8MzRURERERERKKoWbMmo0aNomfPngwaNChsXI8ePUhPTyczM5PWrVvnWho0aABkDxVMSEjIsf+zzz574hpRSK655hr279/Pf/7znxzrX3/9dcqXL0+TJk0AOPfcc8nMzCQtLS1H3Jdffkl6ejq1atWKeJxevXphZsyaNSvH+pSUFMqUKcNVV10Vh9bImUQ9zURERERERERiMH78+Kgx119/PXPmzKF79+6MGDGCtm3bUrJkSX744QdWrVpFr1696NOnDxdffDGVKlVi2LBhjB07lpIlSzJnzhw+/fTTk9CS8OrVqwcQ07xmq1evZufOnQBkZmaydetWFi1aBHjzwFWrVg2AkSNHMmfOHPr378/f/vY3atWqxaJFi1i2bBkTJ06kTJkyAAwZMoRJkyZxzTXXcO+999KgQQO++eYb/v73v1OuXDmGDRuWdewXXniBoUOHMmPGDAYOHAhAkyZNuOmmmxg7dizFixenTZs2vPXWW/zzn/9k3LhxGp4peaakmYiIiIiIiEicFC9enGXLljF58mRmz57NI488QokSJahVqxbJyck0a9YM8Obfeu2117jzzju58cYbKVeuHL169WL+/Pm5hieeTBkZGTHHjh07ltWrV2e9Tk1NzXrQwapVq+jcuTMAlStX5r333mP06NGMHDmSQ4cO0bBhQ2bMmMGQIUOy9v/Nb35DWloaDz30EBMmTGDbtm1Ur16d9u3bc//992f10gPvAQOZmZlZDxrwe/rpp6lZsyZTpkxh+/btJCUlMXnyZG6//fZ8nA0505l/DLHExsyaAOvXr1+f1YX05NfhwUI5ruTkXPgJKEVEREREREQkdhs2bPDPO9fUObehsOsDmtNMREREREREREQkFyXNREREREREREREgihpJiIiIiIiIiIiEkRJMxERERERERERkSBKmomIiIiIiIiIiARR0kxERERERERERCSIkmYiIiIiIiIiIiJBlDQTEREREREREREJoqSZiIiIiIiIiIhIECXNRERERERERIKkpKRgZpgZqampubY756hXrx5mRufOneN67KSkJAYPHpz1OjU1NWw9TiU//PADd9xxB8nJyVSsWBEzIyUlJWTsq6++ysCBA2nWrBklS5bEzELGff/99/Tp04c6depQrlw5zjrrLFq2bMlTTz1FRkZGTPU6ePAgd9xxB+eeey6lS5emRYsWvPTSS/ltppxBlDQTERERERERCaNChQpMnz491/rVq1fz9ddfU6FChRNeh1atWrFmzRpatWp1wo9VEJs3b2bOnDmUKlWK7t27R4x95ZVXeP/992ncuDEXXHBB2LhDhw6RmJjIfffdx7Jly3jppZfo2LEjt99+O8OGDYupXn379mXWrFmMHTuWN954gzZt2nDDDTcwd+7cPLVPzjwlCrsCIiIiIiIiIqeq6667jjlz5jB16lQSExOz1k+fPp327duzf//+E16HxMRE2rVrd8KPU1CdOnVi586dAKxdu5Z58+aFjX3uuecoVszrx3Pbbbfx0UcfhYxr2LAhs2bNyrGuW7du/Pzzz8yaNYupU6eSkJAQ9jivv/46b7/9NnPnzuWGG24A4NJLL2Xr1q2MGjWK6667juLFi+epnXLmUE8zERERERERkTD8iZbABNC+fftYvHgxQ4cODbnPsWPHGDduHA0bNiQhIYFq1aoxZMiQrISS36+//sro0aOpUaMGZcuWpWPHjnz44Ye5ygs1PHPt2rVcf/31JCUlUaZMGZKSkrjhhhvYunVrjn39w0xXrVrF8OHDqVq1KlWqVKFv37789NNP+T0tIfmTYPGODaVatWoUK1YsasLrlVdeoXz58vTv3z/H+iFDhvDTTz/xwQcfFKgecnpT0kxEREREREQkjMTERPr168eMGTOy1s2bN49ixYpx3XXX5Yo/fvw4vXr1Yvz48QwYMIDXXnuN8ePH8/bbb9O5c2cOHz6cFfuHP/yBiRMnMnDgQJYuXco111xD37592bNnT9R6bdmyhQYNGvDEE0/w5ptvMmHCBLZt20abNm3YtWtXrvibb76ZkiVLMnfuXB599FFSU1O58cYbYzqOmeWYY60wOOfIyMhgz549zJ8/n5SUFO68805KlIg8gG79+vU0atQoV1zz5s2ztouEo+GZIiIiIiIiIhEMHTqUSy+9lA0bNtCkSRNmzJhB//79Q85ntmDBApYvX87ixYvp27dv1voLLriANm3akJKSwvDhw9m0aROzZs3iL3/5C48++igAV1xxBdWrV+f3v/991Dr169ePfv36Zb3OzMykR48eVK9enblz5/LnP/85R/xVV13Fk08+mfV69+7djB49mu3bt1OjRo2wxzEzihcvXuhDGCdMmMA999yTVacxY8Ywbty4qPulp6dTp06dXOsrV66ctV0kHPU0ExEREREREYkgOTmZunXrMmPGDNatW0daWlrYoZmvvvoqFStWpGfPnmRkZGQtLVq0oEaNGllDLFetWgWQK0F27bXXRu09Bd4TIe+66y7q1atHiRIlKFGiBOXLl+fQoUNs3LgxV/zVV1+d47W/p1XwcM5gtWvXJiMjI+TDEE6mwYMHk5aWxptvvsno0aN57LHHuP3222PaN9yTOaNtE1FPMxEREREREZEIzIwhQ4bw5JNPcuTIEerXr88ll1wSMnbHjh3s3buXUqVKhdzuHzrp7+EU3MurRIkSVKlSJWqdBgwYwMqVK7nvvvto06YNiYmJmBndu3fPMQTUL7hM/+T5oWJPRTVq1Mg6V127dqVSpUrcfffdDB06lJYtW4bdr0qVKiF7k+3evRvI7nEmEoqSZiIiIiIiIiJRDB48mPvvv59nnnmGhx9+OGycf6L95cuXh9zuH9LpT2Jt376dmjVrZm3PyMiIOmRw3759vPrqq4wdO5a77747a/3Ro0ezkkGnu7Zt2wLw5ZdfRkyaNWvWjHnz5pGRkZGjB9+6desAaNq06YmtqBRpGp4pIiIiIiIiEkXNmjUZNWoUPXv2ZNCgQWHjevToQXp6OpmZmbRu3TrX0qBBAwA6d+4MwJw5c3Lsv2DBAjIyMiLWxcxwzmX1FvN7/vnnyczMzEfrih7/8NZ69epFjOvTpw8HDx5k8eLFOdbPmjWLc889l4suuuiE1VGKPvU0ExEREREREYnB+PHjo8Zcf/31zJkzh+7duzNixAjatm1LyZIl+eGHH1i1ahW9evWiT58+NGrUiBtvvJEnnniCkiVLcvnll7N+/XomTpxIYmJixGMkJibSqVMnHnvsMapWrUpSUhKrV69m+vTpVKxYMV7NBbw5z+rWrcugQYNimtds0aJFAHzzzTcArF27lvLlywPkeHDB1q1bSUtLA+Drr7/OsW9SUhKtW7cGYOzYsezYsYNOnTpRs2ZN9u7dy/Lly3nuuefo378/F154YVaZDz30EA899BArV64kOTkZgG7dunHFFVcwfPhw9u/fT7169Zg3bx7Lly/nxRdfLPQHHMipTUkzERERERERkTgpXrw4y5YtY/LkycyePZtHHnmEEiVKUKtWLZKTk2nWrFlW7PTp06levTopKSk8+eSTtGjRgsWLF3P99ddHPc7cuXMZMWIEo0ePJiMjgw4dOvD222/zu9/9Lq7tcc6RmZkZcw+2/v3753g9depUpk6dmlWW36pVqxgyZEjIfQcNGkRKSgoArVu35sknn2TJkiWkp6dTunRpGjduzKRJkxg+fHiO/Y8fP05mZmaO4wC8/PLL/O///i/3338/u3fvpmHDhsybNy+m8yxnNgu+mCQyM2sCrF+/fj1NmjQppDo8WCjHlZycG1vYVRARERERERE5LWzYsME/x1xT59yGwq4PaE4zERERERERERGRXJQ0ExERERERERERCaKkmYiIiIiIiIiISBAlzURERERERERERIIoaSYiIiIiIiIiIhJESTMREREREREREZEgSpqJiIiIiIiIiIgEUdJMREREREREREQkiJJmIiIiIiIiIiF88MEH9OnTh/POO4+EhASqV69O+/btufPOO3PEPf3006SkpMRcbmpqKmZGampqfCtcSN577z1uvvlmLrzwQhISEjAztmzZkivuyy+/ZOTIkVx44YVUrFiRypUr06FDBxYtWpQr9ocffuCOO+4gOTmZihUrYmZ5OscA33zzDX379qVixYqUL1+eK664go8//jifrZQzkZJmIiIiIiIiIkFee+01Lr74Yvbv38+jjz7KW2+9xeTJk+nQoQPz58/PEZvXpNnpZuXKlaxYsYLzzjuPiy++OGzcW2+9xWuvvcY111zDwoULmTNnDueffz79+/fnoYceyhG7efNm5syZQ6lSpejevXue67Rz504uueQSvvzyS2bMmMGCBQs4cuQInTt35osvvshzeXJmMudcYdehSDGzJsD69evX06RJk0Kqw4OFclzJybmxhV0FERERERE5QZKTk/nxxx/ZtGkTJUqUyLHt+PHjFCuW3QeladOmVK1aNeaeY6mpqVx66aWsWrWKzp07x7HWhSPwfEycOJFRo0bx7bffkpSUlCNu165dVKlSBTPLsb5Hjx6sWrWK3bt3k5CQkKvMtWvX0qZNG2bOnMngwYNjqtPo0aN54okn+Oqrr6hduzYA+/fvp27dulx22WW5Ep9S+DZs2EDTpk0BmjrnNhR2fUA9zURERERERERySU9Pp2rVqrkSZkCOhFlSUhIbNmxg9erVmBlmliNZtGnTJq666irKli1L1apVGTZsGAcOHAh5zBUrVtClSxcSExMpW7YsHTp0YOXKlVnblyxZgpnlWOc3bdo0zIzPPvusAK3On8DzEUnVqlVzJcwA2rZtyy+//MLu3bvzXGY4r7zyCpdddllWwgwgMTGRvn378n//939kZGQUqHw5MyhpJiIiIiIiIhKkffv2fPDBB/z5z3/mgw8+4Ndffw0Z98orr1CnTh1atmzJmjVrWLNmDa+88goAO3bsIDk5mfXr1/P0008ze/ZsDh48yG233ZarnBdffJGuXbuSmJjIrFmzWLBgAZUrV+bKK6/MSpL16NGDs88+m5kzZ+baPyUlhVatWtG8efO4tD8lJSVf84jlx6pVq6hWrRpnn312XMo7fPgwX3/9dchz0bx5cw4fPsw333wTl2PJ6S13ylxERERERETkDDd+/Hg2bdrElClTmDJlCiVLlqRNmzb07NmT2267jfLlywPQsmVLypQpQ2JiIu3atctRxqRJk9i5cyf//e9/ueCCCwDo1q0bXbt25bvvvsuK++WXXxgxYgQ9evTISrgBdO/enVatWjFmzBg++OADSpQowY033si0adPYt28fZ511FgAbN27kww8/ZMqUKXFrf7FixShevHiBe3xF8/zzz5OamsrkyZMpXrx4XMrcs2cPzjkqV66ca5t/XXp6elyOJac39TQTERERERERCVKlShXeffdd0tLSGD9+PL169eLLL7/knnvuoVmzZuzatStqGatWraJJkyZZCTO/AQMG5Hj9n//8h927dzNo0CAyMjKyluPHj3PVVVeRlpbGoUOHABg6dCiHDx/OMSfXzJkzSUhIyFVuQQwcOJCMjAwGDhwYtzKDvfHGG9x6663069eP22+/Pe7lhxoKGss2ET8lzURERERERETCaN26NXfddRcLFy7kp59+4i9/+Qtbtmzh0Ucfjbpveno6NWrUyLU+eN2OHTsA6NevHyVLlsyxTJgwAedc1nxfTZo0yZoUHyAzM5MXX3yRXr16hexZdap688036du3L1dccQVz5syJaxKrUqVKmFnI3mT+81iUzpUUHg3PFBEREREREYlByZIlGTt2LJMmTWL9+vVR46tUqcL27dtzrQ9eV7VqVQCmTJmSa4inX/Xq1bN+HzJkCLfccgsbN27km2++Ydu2bQwZMiQvTSlUb775Jr179yY5OZnFixdTqlSpuJZfpkwZ6tWrx7p163JtW7duHWXKlKFOnTpxPaacntTTTERERERERCTItm3bQq7fuHEjAOeee27WuoSEBA4fPpwr9tJLL2XDhg18+umnOdbPnTs3x+sOHTpQsWJFPv/8c1q3bh1yCUws3XDDDZQuXZqUlBRSUlKoWbMmXbt2zXdbT6a33nqL3r1707FjR5YsWUJCQsIJOU6fPn145513+P7777PWHThwgJdffpmrr7465FNRRYLpKhEREREREREJcuWVV1KrVi169uxJw4YNOX78OJ988gn/+Mc/KF++PCNGjMiKbdasGS+99BLz58+nTp06lC5dmmbNmnHHHXcwY8YMfve73zFu3DiqV6/OnDlz2LRpU45jlS9fnilTpjBo0CB2795Nv379OPvss9m5cyeffvopO3fuZNq0aVnxFStWpE+fPqSkpLB3715GjhwZ9wn7X3jhBYYOHcqMGTOizmu2c+dOVq9eDZDVu+uNN96gWrVqVKtWjeTkZADee+89evfuTY0aNRgzZgyffPJJjnIaN25MYmJi1utFixYBZD3pcu3atVkPYOjXr19WXJcuXVi9ejUZGRlZ60aOHMns2bP53e9+x0MPPURCQgLjx4/nyJEjPPDAA/k5JXIGUtJMREREREREJMi9997L0qVLmTRpEtu2bePo0aOcc845XH755dxzzz00atQoK/bBBx9k27Zt/OEPf+DAgQPUrl2bLVu2UKNGDVavXs2IESMYPnw4ZcuWpU+fPjz11FP06tUrx/FuvPFGzjvvPB599FH+9Kc/ceDAAc4++2xatGjB4MGDc9VvyJAhzJs3DyDk9oI6fvw4mZmZHD9+PGrshg0b6N+/f451t9xyCwDJycmkpqYCsGLFCg4fPsyWLVu47LLLcpWzatUqOnfunPU6uMypU6cydepUAJxzWeszMzPJzMzMEVutWjXeffddRo4cmfWAhfbt25OamkrDhg2jtkkEwAIvNInOzJoA69evX0+TJk0KqQ4PFspxJSfnxhZ2FUREREREREROCxs2bKBp06YATZ1zGwq7PqA5zURERERERERERHJR0kxERERERERERCSIkmYiIiIiIiIiIiJBlDQTEREREREREREJoqSZiIiIiIiIiIhIECXNREREREREREREgihpJiIiIiIiIiIiEkRJMxERERERERERkSBKmomIiIiIiIiIiARR0kxEREREREQkyIEDBxg9ejRdu3alWrVqmBkPPPBAyNiXX36ZBg0akJiYSI8ePfjxxx9zxfTo0YOBAweG3D+47NTUVMyM1NTUOLTk5Pr+++/p06cPderUoVy5cpx11lm0bNmSp556ioyMjFzxzjlmzpxJ27ZtKVeuHImJibRq1YqlS5fGdLwVK1bQvn17ypYtS9WqVRk8eDA///xzvJslZyglzURERERERESCpKen889//pOjR4/Su3fvsHFff/01119/Pf3792fRokXs2rWLQYMG5YhZsGAB77//Pv/4xz9ClrFmzRpuvvnmuNa/sBw6dIjExETuu+8+li1bxksvvUTHjh25/fbbGTZsWK744cOHM3z4cLp06cKyZctYuHAhAwYM4Jdffol6rNWrV9OtWzeqV6/O0qVLmTx5MitWrKBLly4cPXr0RDRPzjAlCrsCIiIiIiIiIqea2rVrs2fPHsyMXbt28fzzz4eMe+utt/jtb3/LuHHjAChfvjwdO3bk8OHDlClThr179zJixAgmTpxItWrVQpbRrl27E9aOk61hw4bMmjUrx7pu3brx888/M2vWLKZOnUpCQgIAS5Ys4dlnn2X+/Plce+21WfFXXnllTMcaNWoU9evXZ9GiRZQo4aU3fvvb39KhQwdmzJjB8OHD49QqOVOpp5mIiIiIiIhIEDPDzKLGHTlyhHLlymW9Ll++PM65rJ5Od911F40aNWLw4MERjxVu6GegtWvXcvXVV1O5cmVKly5Ny5YtWbBgQdT9TgXVqlWjWLFiFC9ePGvd5MmTSUpKypEwi9WPP/5IWloa//M//5OVMAO4+OKLqV+/Pq+88kpc6i1nNiXNRERERERERPLp4osv5tNPP2XZsmXs3r2bxx57jEaNGlGxYkX+/e9/M3v2bJ599tkCH2fVqlV06NCBvXv38swzz7B06VJatGjBddddR0pKSsEbEkVSUhJJSUkxxzvnyMjIYM+ePcyfP5+UlBTuvPPOrARXRkYGa9asoWXLljz++OPUrl2b4sWLU6dOHSZOnIhzLmL569evB6B58+a5tjVv3jxru0hBaHimiIiIiIiISD5ddNFF3HPPPfTu3RvnHOeccw4vv/wyx44d449//CNjxozh/PPPL/BxbrnlFpo0acI777yTlXi68sor2bVrF2PGjGHgwIEUK3bi+sUE9uaKxYQJE7jnnnsAryfdmDFjsoawAuzatYujR4+ycuVK0tLSePjhh6lVqxYLFy5k1KhR7Nmzh4cffjhs+enp6QBUrlw517bKlStnbRcpiCLb08zMWprZEjP7ycx+MbNNZna/mZUt7LqJiIiIiIjImWPcuHHs3r2bTZs28d1339GuXTsmTJgAeMMzt27dSo8ePahcuTKNGzfO89DBzZs3s2nTJn7/+98DXi8t/9K9e3e2bdvGF198Efd2Bddh8+bNMccPHjyYtLQ03nzzTUaPHs1jjz3G7bffnrX9+PHjAOzfv5+FCxcycOBALrvsMqZNm0bv3r15/PHHOXjwYNTjhBtCG8vQWpFoimRPMzNrDPwH+AK4A9gFdALuBy4EehVe7URERERERORMU7FiRSpWrAjAV199xSOPPMLbb79NyZIlufHGG6lfvz4//PADqamp9O3bl88++4z69evHVPaOHTsAGDlyJCNHjgwZs2vXrvg0JE5q1KhBjRo1AOjatSuVKlXi7rvvZujQobRs2ZJKlSphZlSoUCHXgxC6devGkiVL+Pzzz2nbtm3I8qtUqQIQskfZ7t27Q/ZAE8mrIpk0AwYApYFrnHNf+9a9Y2bnAH80s0rOuT2FVz0RERERERE5U/3pT39i4MCBdOjQgYMHD/Lee+/x9NNPU7ZsWbp3707jxo15++23Y06aVa1aFYB77rmHvn37hoxp0KBB3Op/IviTX19++SUtW7akTJkynH/++Wzfvj1XrH8+s0jDTZs2bQrAunXr6N69e45t69aty9ouUhBFdXjmr76f+4LW7wWOA8dObnVEREREREREYObMmWzcuDFreKY/AXTo0KGsmIMHD0ad6D5QgwYNOP/88/n0009p3bp1yKVChQrxbUicrVq1CoB69eplrbvmmmvYv38///nPf3LEvv7665QvX54mTZqELa9mzZq0bduWF198kczMzKz177//Pl988UXY5KJIXhTVnmaz8IZlTjOzu4CdQDLwJ2Cqc+5QpJ1FREREREREonnjjTc4dOgQBw4cAODzzz9n0aJFAHTv3p2yZXNOqb1z505GjRrFtGnTOOusswCoUKEC7du3Z9SoUdx3333861//4ttvv6VLly55qsuzzz5Lt27duPLKKxk8eDA1a9Zk9+7dbNy4kY8//piFCxfGocXh+ZNd0eY1Gzt2LDt27KBTp07UrFmTvXv3snz5cp577jn69+/PhRdemBU7cuRI5syZQ//+/fnb3/5GrVq1WLRoEcuWLWPixImUKVMmK7ZEiRIkJyezcuXKrHUTJkzgiiuuoH///txyyy38/PPP3H333TRt2pQhQ4bE+QzImahIJs2cc1vMrD3wCvB1wKYn8ZJpYZnZ2UC1Ahy+bgH2FRERERERkSJi+PDhbN26Nev1woULs5JT3377LUlJSTni//rXv9KuXTv69++fY/2LL77IsGHDuOaavJAMHAAAIABJREFUa6hRowazZ8+mUaNGearLpZdeyocffsjDDz/MHXfcwZ49e6hSpQqNGzfm2muvzV8D8yAjIyOmuNatW/Pkk0+yZMkS0tPTKV26NI0bN2bSpEkMHz48R2zlypV57733GD16NCNHjuTQoUM0bNiQGTNm5Ep6ZWZm5uhRBtC5c2def/117r//fnr27EnZsmXp0aMHjz32GAkJCQVrsAhgeekSeqowsyTgbWAHMAmvp9lFwL3AIufcTRH2fQAYW9A6rF+/PmJX0RPJ7MFCOa7k5FyBLyMRERERERERATZs2OCfi66pc25DYdcHimhPM2A8kAi0CBiK+S8z2wXMMLMXnHOrw+z7NFCQfqt1gaUF2F9ERERERERERE5xRTVp1gL4PMTcZWm+n02BkEkz59zPwM/5PbCZ5XdXEREREREREREpIorq0zN/ApqYWfmg9e19P384yfUREREREREREZHTSFHtafYEsAR428wmAbuAdsA9wOfAG4VYNxERERERERERKeKKZE8z59wyoAuwH5gMvAoMAp4FOjnnjhVi9UREREREREREpIgrqj3NcM6tAlYVdj1E/p+9e4/Xda7zx/9629txEyFEoWjU0GlyrAaFxDTJRE1qSkNNiah8c6gcqml2TUoHJp0o/UpFpRORMFJoSgmdT0oTIRrk/Pn9cd1rt9zW2nutda+17732fj4fj/tx73Vdn+tzve917fv0Wp/rcwEAAABLn1k50gwAAAAAZpLQDAAAAAD6CM0AAABgDJdddll23XXXrLbaall11VXztKc9LRdffPED2t1111056qij8ohHPCIrrLBCNtpooxxxxBH5y1/+cr92v/3tb7P77rvnQQ96UB7zmMfkzDPPfEBfn/3sZ7PWWmvlj3/84wPW7bvvvtl4443vt2zjjTfOvvvuO9DjnEkf/vCHU1VZddVVH7Bu3333TVU94PboRz/6fu1+/etfj9muqnLaaadNqI7rr78+++67b9Zee+2sssoq2W677XLeeedNy2Nk6TVr5zQDAACAmfKd73wn22+/fbbeeuuceuqpaa3lHe94R3baaaecf/752W677Ra0fcELXpCvfvWrOeqoo7LVVlvl29/+dt761rfmqquuyhe/+MUF7V7ykpfkzjvvzOmnn54LLrggz3ve83L11Vdnk002SZLccsstOfjgg/POd74zD3nIQx5Q05ve9KYcfPDBM//gp8m1116bQw89NOuvv35uueWWMdusvPLK+cY3vvGAZWM56KCDss8++9xv2aMe9ahF1nHnnXdmp512ys0335z3vOc9WWeddXLCCSfkmc98Zr7+9a9nhx12mOAjYlkjNAMAAIA+b3rTm7LGGmvk7LPPziqrrJIk2XnnnfPIRz4yhx566IIRZ5dcckk+97nP5bjjjstrX/vaBe3mzp2bI488Mueee2522WWX3H777bngggty8cUXZ7vttssznvGMnH766Tn33HMXhGaHHXZYNttss7z0pS8ds6aRdrPFK17ximy//fZZc801c/rpp4/ZZrnllsu22247of423HDDCbcd7SMf+UiuvPLKfOtb31oQdj7taU/L4x//+Lz+9a/PpZdeOuk+WTY4PRMAAAD6XHzxxdlxxx0XBGZJstpqq2X77bfPt771rfzv//7vgnZJsvvuu99v+2c961lJkjPOOCNJdwpnay3z5s1b0GbVVVfNHXfckST51re+lY9//OM56aSTxq1prNMzx/LnP/85hx566ILTRTfYYIMccsghue222ybwyKfHJz7xiVx44YU58cQTF9s+x/P5z38+m2222f1GB86dOzcvetGLctlll+Xaa68dYnUsyYRmAAAA0Oeuu+7Kiiuu+IDlI8t++MMfLmg3enl/uyuuuCJJssYaa+TRj350jjvuuPzpT3/KF77whfzgBz/Ik5/85Nx99915+ctfniOOOCJ/8zd/M1Ddt99+e3bYYYd87GMfy6tf/eqcddZZOeyww3LKKafk2c9+dlprU+q3qrLjjjtOqO3111+fQw45JPPnz8/DHvawhbb9y1/+kvXWWy9z5szJwx72sBx44IG56aabxmw7f/78rLDCCllllVXy1Kc+9X6nvi7MlVdemcc97nEPWD6y7KqrrppQPyx7nJ4JAAAAff72b/82l1xySe67774st1w33uSee+5ZcCrfjTfeuKBd0o04e8QjHrFg+29+85v3a5d0pwk+97nPzZprrpnlllsub3zjG7P11lvnrW99a1prOeywwwau+73vfW+uuOKKXHrppdlyyy2TJDvttFM22GCD7LXXXjn77LOz2267TbrfOXPmZM6cORNqe8ABB2SzzTbLK1/5yoW2e/zjH5/HP/7x2WKLLZIkF154Yd797nfnvPPOy3e+850FFw9YccUV87KXvSy77LJLHvrQh+aaa67J+973vuyxxx750Ic+lP3333+h+7nxxhuz5pprPmD5yLLRxwhGE5oBAABAn4MOOij77bdfDjzwwLzhDW/Ifffdl2OPPTa/+c1vkmRBkLbbbrtl0003zWGHHZZ11103W221VS655JIceeSRmTNnzoJ2SfLkJz8511xzTX75y19mvfXWy+qrr56f/exnedvb3pZzzjknc+fOzdFHH52TTz45d911V/baa6+8853vzEorrTThur/85S9niy22yBOe8ITcc889C5bvuuuuqapccMEFUwrNRve1MGeccUa+9KUv5fLLL09VLbTta17zmvv9vMsuu+SJT3xi9tprr3zoQx9asP6hD31oPvjBD96v7d57751tttkmhx9+ePbdd9/MnbvweGNhtSyqTpZdTs8EAACAPv/6r/+a+fPn59RTT83DHvawbLjhhrn66qtz6KGHJkk22GCDJMkKK6yQs846KxtuuGGe8Yxn5MEPfnD22muvHHnkkXnwgx+8oN2I5ZdfPptttllWX331JN1k+f/yL/+Spz71qTn55JNz8skn57zzzsvll1+eiy66KP/xH/8xqbqvu+66XHHFFVl++eXvd1tttdXSWssNN9wwDb+dsd1666151atelYMOOijrr79+br755tx8880LTmG9+eabFzmv2p577pl58+blkksuWWi75ZdfPs9//vNz44035mc/+9lC26611lpjjiYbOQ10rFFokBhpBgAAAGM67LDDcsghh+RnP/tZVltttWy00Ub5t3/7t8ybNy9PetKTFrTbdNNN8+1vfzvXXnttbrrppmyyySa55ZZbcvDBB2f77bcft/9TTjklV1999YKLBZx11lnZe++986hHPSpJst9+++XUU0/NscceO+Ga11577ay88sr56Ec/Ou76mXLDDTfkuuuuy3HHHZfjjjvuAesf/OAHZ4899sgXvvCFhfbTWrvfCL2FtUuyyLaPfexjF8xBN9rIspHTQ6Gf0AwAAADGseKKKy4IVa655pp8+tOfzste9rKsvPLKD2i7wQYbLBhZ9sY3vjHz5s3LfvvtN2a/N9xwQw499NCceOKJWWONNZJ0IdDokVi33nrrpCfuf9aznpW3ve1tWWutte43x9risN566+X8889/wPL58+fnwgsvzFlnnbXI0O7000/P7bffnm233Xah7e6+++58+tOfztprr51NN910oW333HPPHHDAAbn00kuzzTbbJOlON/3EJz6RbbbZJuuvv/4iHhnLKqEZAAAA9LnyyitzxhlnZMstt8yKK66YH/zgB5k/f34e9ahH5S1vecv92r7jHe/Ieuutlw033DDXXXddPvOZz+QLX/hCTj311Aecnjnita99bbbZZps873nPW7Bs1113zete97pst912WXXVVfPe9753kZPc9zvkkENyxhlnZPvtt89rXvOaPO5xj8t9992Xa665Juecc05e97rXLQiOJmPu3LnZYYcdct55543bZqWVVhrzCpunnHJK5syZc791v/nNb7LPPvvkn//5n7PpppumqnLhhRfm+OOPz+abb36/x/3a1742d999d57ylKdkvfXWy29/+9u8733vy/e///2cfPLJ97tAwX777ZePfexj+cUvfpGNNtooSXeq7QknnJC999478+fPzzrrrJMTTzwxP/nJT/L1r3990r8Llh1CMwAAAOizwgor5Bvf+Ebe+9735tZbb82GG26YV7ziFTn88MMzb968+7W944478uY3vzm/+93vsvLKK2fbbbfNBRdckL//+78fs+/zzjsvn/vc53LVVVfdb/l+++2XX/7ylzn88MNz11135bnPfW7e8IY3TKruefPm5aKLLsr8+fPzwQ9+ML/61a+y8sorZ8MNN8zOO++cjTfeeFL9jbj33ntz7733TmnbsTzoQQ/Kuuuum3e961257rrrcu+992ajjTbKq1/96hx55JH3+x1vscUWOemkk/LJT34yf/7zn7Paaqtl6623zte+9rU84xnPGLPO0SP0VlxxxZx33nl5/etfn4MOOii33357nvCEJ+Sss87KDjvsMG2PiaVPTXao57KuqjZPcuWVV16ZzTfffEg1TPx8dmZOa0cPuwQAAABYKlx11VUjp0Jv0Vq7alHtFwdXzwQAAACAPkIzAAAAAOgjNAMAAACAPkIzAAAAAOgz5dCsqtavqs1G/Tynql5fVadV1b9OT3kAAAAAsPjNHWDbk5Jck+RVvZ/flOSoJDcn2buq7mqtfWLA+gAAAABgsRvk9My/S3L+qJ9fluTdrbU1k3wwfw3TAAAAAGBWGSQ0WyvJH5Kkqh6T5KFJTumtOyPJZmNvBgAAAABLtkFCs1uSrNP79/ZJbmqt/bD3c0uywiCFAQAAAMCwDDKn2WVJDququ5McnOScUesemeT3gxQGAAAAAMMyyEizo9KFY2cmWTfJv49a95x0oRoAAAAAzDpTHmnWWru8qjZK8ugkP2+t/XnU6hOT/GzQ4gAAAABgGKY80qyqXpxk5dba9/oCsyT5dpJtB6oMAAAAAIZkkNMzT06yyTjrHtFbDwAAAACzziChWS1k3UpJ7h2gbwAAAAAYmknNaVZVGybZeNSiJ1bVSn3NVk7y8iTXDFYaAAAAAAzHZC8E8NIkRydpvduJY7QZGYF28AB1AQAAAMDQTDY0+0ySK9MFY59JcmQeeJXMO5Nc2Vr79cDVAQAAAMAQTCo0a639KMmPkqSqXprky621G2eiMAAAAAAYlsmONFugtfax6SwEAAAAAJYUUw7NkqSqnppknyQbpbsAwGittbbTIP0DAAAAwDBMOTTrnZ75kSQ3JflpurnM7tdkgLoAAAAAYGgGGWn2+nQXA3hJa60/MAMAAACAWWu5AbbdKMmHBWYAAAAALG0GCc1+lGTd6SoEAAAAAJYUg4RmRyY5vKo2mK5iAAAAAGBJMMicZq9KsnqSn1bV95Pc2Le+tdb2GKB/AAAAABiKQUKzxyW5N8n1Sdbv3UZrA/QNAAAAAEMz5dCstbbxNNYBAAAAAEuMQeY0AwAAAICl0kChWVWtWFX/VlWfqqpzq+pRveV7VNUjp6dEAAAAAFi8pnx6ZlWtneT8JJsn+UOSdZOs1lv9nCS7Jjlg0AIBAAAAYHEbZKTZO5KskWTLJBsmqVHrzk+ywwB9AwAAAMDQDHL1zGclOay19r2qmtO37ndJHjZA3wAAAAAwNIOMNHtQkt+Ms275DBbIAQAAAMDQDBKa/SrJduOs2zrJTwboGwAAAACGZpDQ7P9LclhV7ZG/zmfWqmqrJAcnOXXQ4gAAAABgGAY5hfLtSZ6S5PNJ/tRb9rUkayU5O8l7BisNAAAAAIZjyqFZa+3uqto9yfOT/EOSdZPckOTLSU5rrd03PSUCAAAAwOI10GT9rbWW5LTeDQAAAACWCoPMaQYAAAAAS6UpjzSrqjlJDkrywiQbJVmpr0lrra0+QG0AAAAAMBSDnJ45P8nrknw/yblJ7pqWigAAAABgyAYJzV6YZH5r7cjpKgYAAAAAlgSDzGm2cpKvT1chAAAAALCkGCQ0OyfJNtNVCAAAAAAsKQY5PfPVSb5SVbcl+WqSm/obtNYesAwAAAAAlnSDhGZ/TvKTJO/u3cYyZ4D+AQAAAGAoBgnNPpDkeUnOTPKjuHomAAAAAEuJQUKz5yQ5orX2zukqBgAAAACWBINcCODuJJdPVyEAAAAAsKQYJDT7XJJdp6sQAAAAAFhSDHJ65qeSfKiqlk/ylYx99czvDdA/AAAAAAzFIKHZeb37g5O8um9dJWlx9UwAAAAAZqFBQrOXTlsVAAAAALAEmXJo1lr72HQWAgAAAABLikEuBAAAAAAAS6UpjzSrqo8uoklrre031f4BAAAAYFgGmdPs6ekm+x9trSSrJrm5d5txVfXUJEcm2S7JSkl+l+TjrbW3LI79AwAAALD0GWROs43HWl5VT09yYpK9p9r3RFXVPklOTfKZJC9OcmuSTZKsP9P7BgAAAGDpNchIszG11r5RVe9P8p50o9FmRFVtkOSDSU5qrR0watX5M7VPAAAAAJYNM3UhgKuTbD1DfY/YP8m8JG+f4f0AAAAAsIyZqdBshyQ3zFDfI7ZPclOSR1fV96vqnqq6vqo+UFUPmuF9AwAAALAUG+TqmUeNsXjFJI9LsluS/5xq3xO0QZJVknw2yX8kOSTJVkmOTbJFVf19a63/QgWpqnWSPGSA/W4ywLYAAAAAzAKDzGl2zBjL7kzy6yRHZeZDs+XSXS3z2Nba/N6yC6rqriTHJ9kpydfH2O6AJEfPcG0AAAAAzGKDXD1zpk7tnKgbkzwqydf6lp+VLjT7u4wdmp2YbnTaVG2S5MwBtgcAAABgCTftV89cjK5Isu0Yy6t3f99YG7XWrk9y/VR3WlWLbgQAAADArDbl0WJV9ayqOnCcda+qqt2nXtaEnNG7361v+ch+L5nh/QMAAACwlBpkpNkbMv5pivOSHJnkqwP0v1CttXOq6ktJjqqq5dKFZFumm6/sy621b87UvgEAAABYug0yL9mjk3xvnHWXJ/nbAfqeqOenm7/s5enmMntlkncn2Wsx7BsAAACApdQgI81WTLLCQtatPEDfE9Ja+0uSw3s3AAAAAJgWg4w0+0mSZ42z7llJfjpA3wAAAAAwNIOEZh9Nsn9VHVtV6yZJVa1bVcck2T/JR6ahPgAAAABY7AY5PfP9SbZK8qYkb6yqe5PMSVJJTm2tvXca6gMAAACAxW7KoVlrrSV5cVV9KMluSdZO8sckZ7lyJQAAAACz2SAjzZIkrbWLklw0DbUAAAAAwBJh4NCsqnZKslOStZLckOTrrbXzB+0XAAAAAIZlyqFZVa2Q5Iwku6ebx+yeXn+HV9VXkjy3tXb3tFQJAAAAAIvRIFfPPCrJrkkOT7Jua22FJOsmOay3/KjBywMAAACAxW+Q0zNfkORtrbX/HFnQWvtjkndW1apJXpzuypoAAAAAMKsMMtLsYRn/AgAXJdlggL4BAAAAYGgGCc3+mOSx46x7bG89AAAAAMw6g4RmX0zy5qr6p9ELq2qPJMckOXOAvgEAAABgaAaZ0+wNSZ6S5LNVdVuSP6S7EMCqSX7YWw8AAAAAs86UQ7PW2p+qausk+yZ5WpK1knwvyXlJPt5au3NaKgQAAACAxWyQkWbpBWMn9W4AAAAAsFSYcmhWVSsk2TLJ+r1Fv0/yP621u6ajMAAAAAAYlkmHZlU1J8lbkxyYZJW+1bdV1fFJjmmt3TcN9QEAAADAYjeVkWafSrJXkquSfCnJb5JUko2SPDvdBQA2TbLPNNUIAAAAAIvVpEKzqtolXWB2TGvtzWM0OaKqjknypqr6SGvtvGmoEQAAAAAWq+Um2f5FSS4aJzBLkrTWjknyzST/MkBdAAAAADA0kw3Ntkpy2gTanZZk68mXAwAAAADDN9nQbP0kP5lAu58k2WDy5QAAAADA8E02NFstya0TaHdbknmTLwcAAAAAhm+yoVklaZNoCwAAAACzzqSuntlzXFXdvIg2a0ylGAAAAABYEkw2NLsmycN7t4m0BQAAAIBZZ1KhWWtt4xmqAwAAAACWGJOd0wwAAAAAlnpCMwAAAADoIzQDAAAAgD5CMwAAAADoIzQDAAAAgD6TCs2q6l1V9fDevzesquVnpiwAAAAAGJ7JjjQ7JMlDe//+VZInTm85AAAAADB8kw3N/pRk3d6/K0mb3nIAAAAAYPjmTrL9JUk+UlWX9X4+rqpuHqdta63tMfXSAAAAAGA4JhuaHZDk+CSbpxtltmmSO8dpaxQaS7WqY4ddwjKvtaOHXQIAAABLqUmFZq213yTZM0mq6r4kz2mtXbbwrQAAAABgdpnsnGajPS3J1dNVCAAAAAAsKSZ7euYCrbULk6SqNk3y9CRrJbkhyfmttZ9PT3kAAAAAsPhNOTSrqkryviSvyP1HrN1XVSe21l49aHEAAAAAMAyDnJ75mnQXBjgpyTZJHt67/0CSA6rqNYOXBwAAAACL35RHmiXZP8n7WmsHj1p2bZLvVNW9SV6W5N2DFAcAAAAAwzDISLNHJvnyOOu+3FsPAAAAALPOIKHZLUk2GmfdRkn+PEDfAAAAADA0g4Rm5yZ5a1U9afTCqnpCkmOTfG2QwgAAAABgWAYJzY5Ick+Sy6rqh1V1TlX9MMl3k9zXWw8AAAAAs86UQ7PW2m+TPCHJO5LcluQRvfv5SZ7YWvvdtFQIAAAAAIvZIFfPTGvthhhRBgAAAMBSZpDTMwEAAABgqSQ0AwAAAIA+QjMAAAAA6CM0AwAAAIA+Uw7NqmqFqqrpLAYAAAAAlgRTCs2qaqUkf0nynOktBwAAAACGb0qhWWvtjiQ3JrltessBAAAAgOEbZE6zLyXZc7oKAQAAAIAlxdwBtj0tyUeq6qNJPpfkf5O00Q1aa98boH8AAAAAGIpBQrOv9e73TfKSvnWVLkCbM0D/AAAAADAUg4RmL522KgAAAABgCTLl0Ky19rHpLAQAAAAAlhSDXAhggararKqeUlXzpqM/AAAAABimgUKzqnpxVf0uydVJ/jvJZr3ln6mql01DfQAAAACw2E05NKuqvZOckuR7SQ5MN/n/iO8led5AlQEAAADAkAwy0uyIJCe31p6d5IN9636U5G8H6BsAAAAAhmaQ0OwxSU4bZ91NSdYaoG8AAAAAGJpBQrPbk6w+zroNkvxpgL4BAAAAYGgGCc0uTnJgVdUY6/ZNcsEAfQMAAADA0MwdYNs3J/lmksuSfDJJS/JPVXVsku2TbD14eQAAAACw+E15pFlr7X+S7JZk1STHpbt65pFJ/ibJ7q21K6elQgAAAABYzAYZaZbW2vlJHlNVmyRZN8kNrbWfTktlAAAAADAkA4VmI1prv0jyi+noCwAAAACGbZALAaSqNq6qk6rqp1V1Y+/+pKp6xHQVCAAAAACL25RDs6p6QpLL010p89ok5/Tu901yeW/9YlNV+1dVq6pbF+d+AQAAAFj6DHJ65vFJ/phk59baNSMLq2qjJOcmeXeSpw1W3sRU1QZJ3pnk90lWXxz7BAAAAGDpNcjpmVsnOXp0YJYkrbXfJDkmyTYD9D1ZH0jy3+nCOgAAAAAYyCCh2S2921huTvLnAfqesKp6UZIdkhywOPYHAAAAwNJvkNDsk0n2H2fdy5J8aoC+J6Sq1kl3mujhrbXfzfT+AAAAAFg2TGpOs6r6p1E/fjfJXlV1WbqA7A9J1kvygiTrJPnsdBW5ECcm+UmS/5roBr2g7SED7HOTAbYFAAAAYBaY7IUATk/SktSo+4cn2XKMtqemG402I6rquUn+MckTW2ttEpsekOTomakKAAAAgKXBZEOzxXI1zEWpqlWTnJDkfUl+X1Vr9Fat0Fu/RpK7W2u3jbH5iRlsFNwmSc4cYHsAAAAAlnCTCs1aaxfOVCGTtHaSdZO8rnfr96d0wdZz+le01q5Pcv1Ud1xVU90UAAAAgFlisiPNlhR/yNij3g5PdyXN3ZLcsFgrAgAAAGCpMVBoVlXPSfLCJBslWalvdWutPX6Q/sfTWrsjyQVj1LNvkntbaw9YBwAAAAATNeXQrKr+X5K3J/ljkp8nGWv+MAAAAACYdQYZaXZAko8m+bfW2r3TVM9AWmv7Jtl3yGUAAAAAMMstN8C2ayX55JISmAEAAADAdBkkNLs4yWOmqxAAAAAAWFIMcnrmIUk+X1W/TXJ2a+2uaaoJAAAAAIZqkNDs50m+nuTzSVpV3d63vrXWVh+gfwAAAAAYikFCs3ckOTDJ95P8KImRZgAAAAAsFQYJzfZN8vbW2hHTVAsAAAAALBEGuRDAnCTnTlchAAAAALCkGCQ0OyfJttNVCAAAAAAsKQY5PfMtST5dVbcl+UqSm/obtNYesAwAAAAAlnSDhGY/6N2/q3cby5wB+gcAAACAoRgkNHtzkjZdhQAAAADAkmLKoVlr7ZhprAMAAAAAlhiDXAgAAAAAAJZKUx5pVlVHLaJJa629Zar9AwAAAMCwDDKn2TGLWN/SXWETAAAAAGaVKZ+e2Vpbrv+WZO0k+ye5MsnG01QjAAAAACxW0zqnWWvtptbaR5N8Msl7p7NvAAAAAFhcZupCAJcl2WmG+gYAAACAGTVTodnjk9w6Q30DAAAAwIwa5OqZLx5j8YpJHpfkX5N8Yqp9AwAAAMAwDXL1zFPGWX5HusDs0AH6BgAAAIChGSQ0e8QYy+5orV03QJ8AAAAAMHRTDs1aa7+ZzkIAAAAAYEkxUxcCAAAAAIBZa1Ijzarqikk0b621x0+yHgAAAAAYusmennlTkraINqsmedIE2gEAAADAEmlSoVlrbcfx1lXV3CQvT3JUusDskwNVBgAAAABDMi1zmlXV3kmuTvK+JD9I8qTW2r9MR98AAAAAsLgNFJpV1Y5VdWmSTyf5c5JntNZ2ba19f1qqAwAAAIAhmFJoVlWPraqvJjkvyVpJ9mmtbdlaO29aqwMAAACAIZhUaFZVD6+qjyX5XrrJ/g9J8pjW2mkzURwAAAAADMNkr546CnLbAAAgAElEQVT50yQrJDk7yTuS/F+Sx1bVmI1ba98bqDoAAAAAGILJhmYr9u53S/LMhbSrdFfQnDOVogAAAABgmCYbmr10RqoAAAAAgCXIpEKz1trHZqoQAAAAAFhSTOnqmQAAAACwNJvs6ZkAS4yqY4ddAklaO3rYJRDPBxjhNQkAmC5GmgEAAABAH6EZAAAAAPQRmgEAAABAH6EZAAAAAPQRmgEAAABAH6EZAAAAAPQRmgEAAABAH6EZAAAAAPQRmgEAAABAH6EZAAAAAPQRmgEAAABAH6EZAAAAAPQRmgEAAABAH6EZAAAAAPQRmgEAAABAH6EZAAAAAPQRmgEAAABAH6EZAAAAAPQRmgEAAABAH6EZAAAAAPQRmgEAAABAH6EZAAAAAPQRmgEAAABAH6EZAAAAAPQRmgEAAABAH6EZAAAAAPQRmgEAAABAH6EZAAAAAPQRmgEAAABAH6EZAAAAAPQRmgEAAABAH6EZAAAAAPQRmgEAAABAH6EZAAAAAPQRmgEAAABAH6EZAAAAAPQRmgEAAABAn1kbmlXV06vqo1X146q6raquraozq+pJw64NAAAAgNlt1oZmSV6ZZOMk70mye5KDk6yT5JKqevoQ6wIAAABglps77AIG8KrW2vWjF1TV2Ul+nuTIJN8YSlUAAAAAzHqzdqRZf2DWW3ZrkquTPHzxVwQAAADA0mLWhmZjqarVk/xdkquGXQsAAAAAs9dsPj1zLCckmZfk38drUFXrJHnIAPvYZIBtAQAAAJgFlprQrKrekuSFSQ5qrX13IU0PSHL04qkKAACWPVXHDrsEkrTmaw/AIJaK0Kyqjk7yxiRvaK29fxHNT0zy2QF2t0mSMwfYHgAAAIAl3KwPzXqB2TFJjmmtvW1R7XsXEHjARQQmsb+pbgoAAADALDGrLwRQVW9KF5i9tbVmDDgAAAAA02LWjjSrqtcleXOSs5N8paq2Hb2+tXbJUAoDAAAAYNabtaFZkn/s3T+zd+vnPEoAAAAApmTWhmattR2HXQMAAAAAS6dZPacZAAAAAMwEoRkAAAAA9BGaAQAAAEAfoRkAAAAA9BGaAQAAAEAfoRkAAAAA9BGaAQAAAEAfoRkAAAAA9BGaAQAAAEAfoRkAAAAA9BGaAQAAAEAfoRkAAAAA9BGaAQAAAEAfoRkAAAAA9BGaAQAAAEAfoRkAAAAA9BGaAQAAAEAfoRkAAAAA9BGaAQAAAEAfoRkAAAAA9BGaAQAAAEAfoRkAAAAA9BGaAQAAAEAfoRkAAAAA9BGaAQAAAEAfoRkAAAAA9BGaAQAAAEAfoRkAAAAA9BGaAQAAAEAfoRkAAAAA9BGaAQAAAEAfoRkAAAAA9BGaAQAAAEAfoRkAAAAA9BGaAQAAAEAfoRkAAAAA9Jk77AIAmN2qjh12CQDAGLxHw1+1dvSwS2AWMtIMAAAAAPoIzQAAAACgj9AMAAAAAPoIzQAAAACgj9AMAAAAAPoIzQAAAACgj9AMAAAAAPoIzQAAAACgj9AMAAAAAPoIzQAAAACgj9AMAAAAAPoIzQAAAACgj9AMAAAAAPoIzQAAAACgj9AMAAAAAPoIzQAAAACgj9AMAAAAAPoIzQAAAACgj9AMAAAAAPoIzQAAAACgj9AMAAAAAPoIzQAAAACgj9AMAAAAAPoIzQAAAACgj9AMAAAAAPoIzQAAAACgj9AMAAAAAPoIzQAAAACgj9AMAAAAAPoIzQAAAACgj9AMAAAAAPoIzQAAAACgj9AMAAAAAPoIzQAAAACgj9AMAAAAAPoIzQAAAACgz6wNzapq1ao6vqp+X1V3VNX3q+qfh10XAAAAALPf3GEXMIDPJdkqyeFJfppknySfqqrlWmufHGplAAAAAMxqszI0q6rdk+ySZJ/W2qd6i8+vqo2S/GdVfbq1du/wKgQAAABgNputp2fumeTWJJ/tW35ykvWTbLPYKwIAAABgqTFbQ7MtkvyotXZP3/IrRq0HAAAAgCmZladnJlkryS/HWH7TqPVjqqp1kjxkgH0/Okl+/vOfD9DFoK4f4r4BAJZcV1111bBLIInPq8CSxvvDkm9UzrLCMOsYrVprw65h0qrqp0l+0VrbrW/5Q5P8PskRrbX542x7TJKjZ7xIAAAAACbrxa21U4ddRDJ7R5rdmLFHk63Zu79pjHUjTswD50KbjMcm+VSSvZL8eIB+mB02SXJmkj2S/GLItTDzHO9li+O9bHG8ly2O97LF8V62ON7LFsd72fLoJKcn+emwCxkxW0OzHyZ5QVXN7ZvX7LG9+yvH27C1dn0GGC9eVSP//HFrzfjOpdyo4/0Lx3vp53gvWxzvZYvjvWxxvJctjveyxfFetjjey5ZRx/vWYdYx2my9EMDnk6ya5Ll9y1+S7vTMSxd7RQAAAAAsNWblSLPW2llVdW6S/6qqByX5eZIXJHlmkhe11u4daoEAAAAAzGqzMjTr+ack/57kzenmMvtxkhe01k4balUAAAAAzHqzNjRrrd2a5ODeDQAAAACmzWyd0wwAAAAAZozQDAAAAAD6CM0AAAAAoI/QDAAAAAD6CM0AAAAAoI/QDAAAAAD6CM0AAAAAoI/QDAAAAAD6CM0AAAAAoI/QDAAAAAD6CM0m749Jju3ds/RzvJctjveyxfFetjjeyxbHe9nieC9bHO9li+O9bFnijne11oZdAwAAAAAsUYw0AwAAAIA+QjMAAAAA6CM0AwAAAIA+QjMAAAAA6CM066mqVavq+Kr6fVXdUVXfr6p/nuC261TVKVV1Q1XdXlXfrqqdZrpmFq2qdqyqNs5t21HtLhinzdmT2NdGVfXR3v+hO6vq2qr6/Mw8Mqpqtap6R1WdU1V/7B2vY8Zo99Sq+nBVfbd3XFpVbTxOn4dU1eeq6le9dhdMsqa3VtWXe8e+VdUpU3hojGOix7zXdvmqem1V/bCq/lJVN1fVt6rqyWO03aKqPtvr886q+nVVnTiBesZ73Ri5rTcND3uZVFVP772e/riqbus9p86sqieNajOnd4zPrqrf9d5/f1RV86tqjb7+/qaq3tl7Hbi5qm6qqouraq8J1vOkqjqh9//p/6rquqr6elU9fbof+7JoIse7125hz7cfj2q37yLaHj6BmjatqlOr6prea8gvqupdVbXWTPwOliVV9YSq+sqo3+1N1X12flFfu1dX1SXVfb6+s9f+tKravK/dvN7yn/Sen7dV1VVV9caqmjeBeh5eVZ+vql/2tr2lqi6vqgOrau50P/5lzSSOd1XVy3qv03+uqhur6sKq+ocx+lyvqt7fO2Z/qarfVNVHqmrDCdb0N1V1RlX9qffecWlVPXu6HjN/VVX79153b11Im6qq/+61e/8i+vvb+uvn+S2nUM/Oo94L1p7s9txfTfC7dq/tzr3n/u291/VTqmqdMfpcvqqOru7z+J29zwYHTaKmKec64/FG8FefS7JVksOT/DTJPkk+VVXLtdY+Od5GVbVikvOSrJHk4CTXJ3lVkrOraufW2oUzXjkTcWSS8/uWXdn38y+TvLBv2c0T6byqtkhyQa+PQ5P8LslDk+w62UKZsLWSvDzJD5J8Icn+47TbKcnOSS5P8uckOy6kz1ckuS3JN5L84xRqek2SK5J8Mcm/TmF7Fm5Cx7yq5iT5fJKnJnlHkm8lmZfkSb370W2fluQrSS5Kd/xvSLJhkidOoJ4Dkjyob9kqSc5O8t3W2h8m8qAY0yvTHe/3JLk6yUOSvC7JJVW1a2vtG0lWTnJMkk8l+XC6Y/d3Sd6Y5B+rasvW2l96/T0jyT8kOTXJd9J9/nl+ks9W1dGttTcvop4XJNk6yUfT/f+bl+7/y3lV9ZLW2sen5VEvuyZyvJNkuzG23SbJ8eme8yO+Mk7bNyfZpa/tA1TVQ5Jcku49401Jrkn3mnBskqdV1ZNaa/dN7KExhjWS/Dbdc/fadM+nFyY5tao2bq29tddurSRnpXvO/SnJI9N9Tr+0dwx+0mu3fJJK8q4kv0pyX5LtkxyV7j1/50XUMy/dsX5LumO9QpLdk7wvyRMy/ucLJmaix/vYdM+3D6Q7zislOSjJl6vqua21zyULvnv9d5IHJzk63WvGZr3td62qx7TW/m+8Yqr7w+m3k/xvutfxW9O9Bn2hqvZurZ0xfQ992VZVGyR5Z5LfJ1l9IU1flWTTCfQ3J9378A1J1p9CPasm+VCvnklvz0It9Lt2Ve2Q7vX8K0n2SLJOkren+xy1ZWvtzlHbnZjkX9K9Hnwn3ffp91TVaq21t02glinlOgvVWlvmb+neGFuSF/QtPyfdi/uchWx7QG/b7UYtm5vkqiSXDvuxLeu3dB+WWpK9FtHugiRXTnEflS6QuTzJisN+zMvKrfd7r96/1+4d52PGaLfcqH8f2mu38Th9jm57ZZILJlnT6O1vTXLKsH9PS9NtEsf8kCT3Jtl2Ef2tku6D05dH+p2GGl/Sq2u/Yf++ZvMtyTpjLFs1yR+SfL3385wka43Rbq/eMXjRqGVrj3WMe8f+tkW9do9Tz5x0X+Z/Puzf12y/TeR4L2Tbk9OFJJsuot28JP+X5KIJ1LN/7//QTn3Lj+gtf+Kwf2dL4y1dUHnNIto8pncM3jyB/t7ea/vIKdbz6SR3+2y3eI53uj84X9TXZqV0f8A+c9Syncd6n033x42WZM9F7PcDSf6SZINRy+akC9+uGf1Zzm3gY/yldH9IPiXJreO02bj32rxn7/i9fyH9jQxMeHWv7ZaTrOf9Sb6XLiBvSdYe9u9ott8y8e/al6XLR+aOWvbk3ravHLVs8957+hF9238wye1J1lzEfqac6yzs5vTMzp7pvuB+tm/5yelS6G0Wse1PWmvfHlnQWrsnySeSbN1L2Fm6bZ/uL5HHt/un5Myg1jOBdhMeDTCZtjOxPQs30WOebtTvf7fWLllEu73TjQj9zwn2OxH7pXs/+fQ09bdMaq1dP8ayW9N9qXl47+d7W2s3jrH5Zb37h4/a9oZxjvFl6cLTNadQz71Jvjt6P0zNRI73WKpqtXTP4wtbaz9fxG6eny6I+/AESrq7d39L3/KR0ed3TKAPJu+GJPcsos0fe/eLajfZtuNtf1+6P8Iw/fqP993pe8611u5I93y7o69d+ttm4s/PpyT5QWvt2lH7uTfdKJiHpxtVzIB6p9/ukG6AycJ8MMm5rbVFjQB+VLrRwgekGxk62Xr+Pt3ZCvvHc3qx6uUhWyU5tZeTJElaa99KNxJsz1HNn5Puj+Qn93VzcrozDJ65iN0NkuuMS2jW2SLJj0YfxJ4rRq1f2LZXjLF8ZNnmY6xj8Tuhqu7pzZHwtap66hhtNunNs3BPdXOX/HtVrTyBvrfv3f9fVX21d+70rdXNbfXoaXwMwCJU1cPT/dXyh1X1turmnrqnuvltXtLXfOS5O6eqvllVd/XmN/lUVU1l2P+jkvx9ktN6X/iZRlW1errTL69aRNORecYW1S5Jnpbui/EDQpsJ1DM33fGeyH6YpAke739ON4JsIkHYfum+aPV/kB7LF9KNODmuqjbvzY+yfbpTPb7UWvvRBPpgEapquaqaW1UPqaoD0p2C8/Yx2s2pqhV7n6k+nO752v+FamRepLlV9aCqema6U3w/1Vq7ZoL1jGz/4Kp6fpJ9kxw3xvcDpmACx/s9SZ5ZVfv1jsFDq+pd6U7re++odhen+4PFMVW1Ve/5+XdJ3pZuFNHXF1HKCknG+iP3yLLHTf7RMVpvnqrjkxzeWvvdQtrtny6kPHAR/VW65/6XW2tfnEI9Kyf5SLoBDt+b7PZMyMK+a49kKeNlJlv0tf1je+AUJxPJZUbWTzXXGZfQrLNWkpvGWH7TqPUzsS0z75Z0b8L/lu7L0cHp/op0QVWNnm/sm0lem+S5SZ6d5KtJXp9ubrpFPU9GRhOenO5Ur39IN0fCFkkuqqqHTs9DASZg5Pn4knRzJhyYbqj21UlOqaqXjdH2jHQfwndN96V4lyQXVtUqk9z3fr37j0yhbhbthHQByb+P16D318z5Sf4n3amX4+p9WN8xyVt7owwm65h0c7AcO4VtWbRFHu90z7mb0z2Hx9ULW56cLkC5fVE7bq3dkmTbdHNlXZnu1KELk1yabmQb0+PEdKOGrk/y7iSvbq2dNEa729KNHvpRutMzd2yt/XaMds/PX0crndW7vXgS9RzW2/6mdPNvHd9aO3IS27NwCz3erbXj081tdUK6Y/D7dO/l/9hau3hUu3vSfab/ZbrRwv+XLkS7OckurbWRkWjjuTrJ43rzW4028iXfd7fBnZjkJ0n+a7wGo+Y7e31r7feL6O9VSR6bbo67qXhLulNwj57i9oxvIt+1R55T42Umo59zY2YrrbXbktyVRT8/ZySbcSGAv1rYqTmLOm1nkG2ZQa21kbnGRlxU3RUtf5hugvCv9dq9sW/Tr1bVr9O9mO+RhU8aPBKqfbu1tmCy2Kq6srfvV6WbmBqYeSPPx5WS7N5a+02SVNW56YKUo9JNAju67adba4f1/n1+Vf0h3UiTfTKxESwjo45ekuSqCZwWyiRV1VvSTRx9UGvtu+O0WTPdHzwqyfMXdrp0Ve2W7ovZ6ekm+55sPfsneUO6UShnTnZ7Fm6Cx3vzdKdZnNA7hWthRgLtiT6fH5zkzHSn7r4w3STmW6SblPiLVfUPRh9Ni7elOybrpLv4zvural5r7Z197Z6cbnTQJukuuHN+Ve3UWusfhfi1dKcArZbuQhCHJVmrqvac4PQJp6QbpbRmuhGr/6+qVm+tTfWLOve30ONdVS9N9+X7/ekCzxXShZ5nVtU/tda+1mu3fLopELZI8rJ04cwj0n3WPreqnt4Lvsfz/nSf7T9eVYemC2UPTPf/LOlOyWWKquq56Y7vExcx9cUH0s0L+qGFtElVbZTkP5Ic0lq7bgr1bJ1urttntr9eHIhpMtHv2iPNx+tmET9PdN10bf8AQrPOjRk7dRyZ42SstHI6tmUIWms3V9WXk7yiqlZeyAvoJ9KFZttm4aHZyJw6o18U0lr7flX9b7rTS4DFY+T5+OORwCzp5kOrqq8lOaKq1unNoTTmc7f3c8vknru7J1kvY5xaxGCq6uh0X4be0Fob81L0vZDj3HSjB5/eWvvlQvrbNd2Vlc5N8sLJzmfX+2J3Urp5WP7fZLb9/9u793Cr6jqP4+9PopiMokZmPpnYTS3LxrQHG4uDqROJqGEXxQzHa/ZMTxfLS+rYpJlFt5lspsYasLS01CSVNBUU71GgOJJTlDqJlCCKcVHE7/zx/W1YLPY+ex/OgQP0eT3PevY5a/3Wb629fmvvtdZ3/y7WXiflXXQUCCsP2MeSfRhN73A3Tif7Kt0lIp4o86ZJ+i05uvJYYGKHeVkLpdlko+nkDdkCiwslTYyIJyvpGs2p7pE0Cfg9GYA5rJbfQvLHEcjA2hzgx7T/8bOx/jxy8AmAmyQtBL4k6fvlwdB6obvyJvs2uxi4JCJOq6w2WdJUMsCya5l3PDAS2LfymZ4m6Q5gDhkgaVkDOCJuKd/jXy3pIWufnUOeV4+3Wte6V2rvXUz+GDVX0rZl0RZl+bZkbcORZN9U+wODy7nQsEVJt7jUGryYrPF7VSW/RkuAvyuB7e6CpN8nr/nTK+tvWV63kfRcdDPaqvVc/VmbVffbrWIm1XjJAvL6uxpJg8jzqF1sZZ3EZtw8M80C9ig1BareXF4fpLVZlXQ9Xdf6T+PbuZOHpXa/ODVrn13djn+xMlt/5pCj6zTT+Nw3PpPdfXar6TpxPFlt/Ac9WMfaKAGU88hRUpsOM14CZjeTD1QHRUTLci0Bs5+RTe3GRMTzPdyf48ggzUTglD4cQMLorLxLui3I4eh/HREz22Q7iqzZ0lEts+KtwOOVgFnDr8rrWvWJYm3dR/6g/5pWCcrD7W+BN3SYHx2mXRfrW/eq5b0b2cn3r5qkmw4MrTSnfCvZkftqfVOVH0sW0MHnMyImkj90vRF4fUQ0+qAOYFqP34k1DAFeQfYnuLAyHUU2t18IXEaW0QByBNVqOsjagwvJ7m4oaYfV0l1clk0BVv5A2sKbyGb11fUbrQvm4PJeV6rP2o14SKuYSTVeMgt4uaQdm6SD9rGV3sR1WnLQLF1Djqg0pjb/I2R7+nvbrLu7pJUjMZRCOga4t4M22raelQesUcDMNk06Gp2Gt2tqNZl8SB9Z287e5AXZTbXM1pPSZOpa8oI5tDG/dCL7HmBORMwvs68hL+Yja9mMJC/2HX12y4X9vcDPWozmaGtB0jlkAOX8iGhaa6ASMHsNcHB3tUEkHUwGzO4ADo8ejnYsaRwZePkhcIIDZn2rk/KuGE0+nHXSf+DxZH9Yl/Vgd+YCr9KaI6DvV15bdmxtvTKC/LGiu5qiQ8iHn3ajpTbyo8O062J96161vBvPS8OqCcq1uxEwWVxmzyX7p9q3lvYNZA2Tjj6fEfFCRMyOiN8rBx45Cbi2WkvdemweWa716Ubye3gEWZN4Qot0kNfpEeS1GnLAl3q6Rq3+U8hnuu40206jpvDh5Gia1ofqz9plpNr7gGMkbVZJN4wMmF9dWf1a8t68PnjXOGAp8Is2m+9NXKe1iPCU9703kdX1TiQ/TN8tBTa2kuZ7ZPXhXSrzBpIRy8fI/m8OJAt+OTC8v9/X3/oEXE52Cn0k2eHzieQvlMuBA0uad5IfwJPJDsAPJTuwfAG4BXhJJb/hZf65te18upwvE8jOxD9SzolHge37+zhsqhMZ3DgSOK4c/yvL/0cCW5U0L6/Mm1jSfbT8P7yW3z6VtI+Ro7Y1/t+lku7Ych4cW1t/eCX9UvIXsMb/L+/v47UpTB2W+WvJG+zfkjdb7y3fyy8CR9by+3fyF+uvlu/vU8u14DfAFpV0a3z/V5adXvbloP4+PpvKVPlOnUw+MK02lTQvJW/CXgQ+3iTdayv57U/+uPFH8hpfT7tNJe0an2/yV+oVZGfT72iy/sD+PmYb89RJedfSN36sGtwm351KWV7WTZpm5f02ciS9h8ryEWQH1H8mHwqH9Pcx25gn8h57PPCBct0cQzajDODLJc3g8vn+BFnj5ADyAXk2GTzZp5LfyWQwu1FWo8iH6iXkIC8D2pT358nmf0eX/TmM7MD8BeDK/j5eG/vUSXmXdFeV79lvAAeT9+M/LenOrqTbmbzG/6mcEyPI4Pgc4K/Abm3Ke4dyfowu636UvDbMAXbq7+O1KU7k89FfO0gXwLc6SDeupN2nNr/p/XmT9c8r6/u7vPdl2/ZZu6TrKvOuJu+3jyaftWZRu4ci+7lbBpxWvjMuIO/1zqqlO7eU9/Da/LZxnR6/z/4+0BvKREYkvwk8Qd4o3Q98qJZmQjngQ2vzX0E+jC8gH5Tvrp4knvq1XM8gOyd8unyo/lI+rPtW0rwOuL5cfJeVMnwAOKvJh7irnAPnNdnWCeWD/xwwn7yBe1V/H4NNeQIeKeXRbBpaK7Nm09RafhO6STuukm5cfV6ZP7Wb9bv6+3htClMnZV7S7UmOnrio8r08qkl+m5FBr9+RzSvnkkHzbVucG0Ob5PEwecOt/j4+m8rU5rMUJc3Q7tIAEyr5ndcmbVcl7Rqf7zbfDU3PC099W96VtDuTD9YTO8j3rJLHiG7StPo+/3vyfuH/yHuDOeSN/M79fbw29on80eN24EnyIWphOQeOqaQZWI73Q+ToiMtLWfwAeGMtv3cAPyf7onqODKrNJGu0bNWuvMngzC/JgOjysr17yUDpgHV1HP5Wpk7Ku6TbknxIvp+8di8gr91jqV1fyXv3S8lr7zLyR+ofNzk3mpX39mTNp7+Q1/1HgX/DAZR1eQ5MYP0EzZp+nzdZ/zwcNOursm37rF1Je1D5TC8tn++JwA5N0m1eyujR8p3+MDkwUKty7KrNbxvX6emkkrGZmZmZmZmZmZkV7tPMzMzMzMzMzMysxkEzMzMzMzMzMzOzGgfNzMzMzMzMzMzMahw0MzMzMzMzMzMzq3HQzMzMzMzMzMzMrMZBMzMzMzMzMzMzsxoHzczMzMzMzMzMzGocNDMzMzMzMzMzM6tx0MzMzMzWC0njJEVlWiZpnqQpks6UtEN/7+OGTNKpksZ1mPZBSbObzD+iHPu7myz7cFk2ug92t93+nS/phR6kP0zSdZL+LGm5pAWSbpZ0lKTN1+W+dkrS2evj2JmZmdn646CZmZmZrW/HAfsBBwEfA2YCpwOzJR3Ynzu2gTsVGNdh2inA7pJ2rM3vAhYD+0jausmyF4Hb134X+5akl0i6FPgZEMAngXeT59As4DvASf23h6s5G3DQzMzMbBPioJmZmZmtbw9GxD0RMS0iroqITwJvIYM5V0t6RT/v36ZgSnntqs3vAi4hA1D7N1k2IyKe7u3GJb20t3kUZwAfBj4XEYdGxOURcXtETCrnzW7AjD7alpmZmdlqHDQzMzOzfhcRjwGfBrYGTq4ukzRa0t2Slkh6VtIvJe1Xz0PS7pJ+VJrwPSfpMUmXShpYlp8nKZqs12g2OrQy75HSHHCUpBmSlkqaLWlUZZ3ZkhZLuk/SPk3y3UfSJElPlaaoMyR9oMW2R0j6D0nzS9PDqyXtVN0f4E3A8Erz1ke6OaRTycBYVyWPlwFvBq4Hfg2MqCzbGXgNq4JtjfnvknRrOe5LJN0paWQtzQllf94taYKkJ4ElkgaU5YdKeqCUyR8kfaqb/a7mOxD4DPAgcGGzNBHxRETcVX2Pkv5T0lxJz5ftfUHSFpU0ryv7e0xtewPK/LMr884v8/aQdIWkRaVJ8SWStqmuBwwEjq+Uz82dvE8zMzPbcDloZmZmZhuKG4AVwLsaMyQdDVwLLAKOAo4HtgOmStq/km4v4FfAMOBcYCRwJhnIWBkw6aG9yGDNRcD7gGfImnCfB04AzgLGAoOB66q1qySNAO4EtgVOAQ4jm6Feoeb9kl0CLAeOBj5LBrt+WFl+BPAHslbVfmU6otWOR8RTwANUAmPAcB2qJaMAAAanSURBVPL43gXcxuq10BrpVgbNJB0A3AIMAv6p7NtS4HpJRzbZ7ARgCXAM8H5ghaR/JJtWLgQ+SDbDHUvWHmvn7eTxuzYi1gh21knaigwWjgXGA4cAl5PnwU862F53rgYeIs+Dr5DvcTxARLxAlsfzwCRWlc8/93KbZmZm1s8G9PcOmJmZmQFExGJJ84GdIPuzIgMUs4CREfFimX8DMIcMZv1DWf1rwAvA2yPiyUq2l/Vil14GDIuIx8t255KBrxOB10XEkjI/yMDQgcDPy7rfBv4HOKAEVQBulDQE+KKkSxvvp/hFRHy88Y+k7YEvS9oxIuZFxAxJS4FFEXFPh/s/BfiEpFdGxBNkkGx6Oc63AadJ2iYiFpVlK4BplfUvAuYDIyrv9edkeYwHflrb3k0RcWp1hqQLgLnAwRHxXJl3E/BIB/v/6vL6x87eLscBewLvi4hryrxfSloCXCBpRERMab16t74bEV8vf98s6Q1kcO4kgIi4p5wHT/agfMzMzGwD55pmZmZmtiFR5e/dyADaD6oBpoj4K3AVMEzSVqWG0XDgylrArLdmNgJmRWM0yqmNIFJt/i6Qzf+A3SkBu9J8b0BprngD8Mry3qom1f5/oJrnWqr3a9ZF1sQCuKO8vquybHpEPFv2eRvgbeQxXfleI2IFWQNul/I+q66q/lPy2Bv4aSNgVvJ4hmwi2tcOIIOK19TmTyiv7+5F3s3KZ1Bp8mpmZmabKAfNzMzMbIMgaRBZu2tumdUISDzRJPlc8j5muzJtBvypj3fpqeo/EfF8s/lkszyALctrYyCD8WSTy+r07bJsSC2PBbX/G0Gm3nSofxs5GuaIEtzZs8yjBMdmAF2SXg3syur9mW1PBjBbHXtYVT4N9bSNPOY1yaPZvLrHyuuuHaRt7E+z/Z1H9u/WmwDXuigfMzMz28C5eaaZmZltKA4hg19Ty/+NQMUrm6TdiQwILSQDIiuAV7XJfxlkB/PVmk+sGcDqrfnl9UKyL6xmHu7jba4hIp6RNIOsRdZFHq87K0luI/sym1X+rwbNniKPa6tjD6ve58pN1v5v5LFjkzyazau7D3gaOEzSOR30a7YAeGuLbYlV+7usvA6spevr88DMzMw2cq5pZmZmZv2u1HYaT3a2/50y+2HgceBoSaqkHQSMAe6OiCURsZQMAL2/9BnWyiPl9S21+Yf2/h2sEhEPA78D9oqI6S2mZ9ci6+foec2mKcDryU78f13b7m1kkOlwshbcyoBa6edsOjBGUqMGHZI2I/vyejQi5nS34ZLHb0oeKwNUkgaTAdJulcDmV8gacmc2SyNpR0nvKP/eAgyWVC/PYyvLIWvKPc+a58HodvvUxtqUj5mZmW3AXNPMzMzM1rc9S/9eA4AdgHeSnbivAI5o9EsWES9K+izZN9h1kr5D1g76DDmq4hmVPD9F9tN1r6QvAb8nm0mOBk4uwaIbyNpP35N0LjlwwDhg53XwHk8GJku6kexT63GyueIewN4R8f61yHMW8CFJHyRH0lwWEbParDMFOI0caXN8bVmj0//DgLsiYnFt+RnAjcCtkr5KHq+PlffQ6f6fA1wH3CTpa8DmZADsWWDrDtb/Etk/3AWShgE/IpvhDiZrz51IjmJ6F3mcPwr8sJTvQ+S5dSYwKSKmwsrz6nLgREl/JI/rMHJ01t6YBRwgaRTZJHRRRPxvL/M0MzOzfuSgmZmZma1v/11enyeb380mR2q8pN6Rf0RcLmkxGfi4ggys3UOO6HhXJd39kt4OfJ5sFrk1Gbi4tWyHiFgk6T3AN8jO7J8GLgEml9c+ExFTyv58rmxvO7L54EPAlWuZ7b+QzSX/i3x/jwJD26wzjQx2DaD0Z1bZx6clPUDWNpva5D3cKunAst2JZAuFmcAhETG5kx2OiMmSxgBfAH5C1vL6FmsGPVut/yJwrKSryQDZN8ljuajsy2ll34iIJZK6gC+WvIeQAbaLgH+tZf0JsunoGcAgshbaaHJU1rX18fLeriRrnN1CjqhqZmZmGym17x7CzMzMzMzMzMzsb4v7NDMzMzMzMzMzM6tx0MzMzMzMzMzMzKzGQTMzMzMzMzMzM7MaB83MzMzMzMzMzMxqHDQzMzMzMzMzMzOrcdDMzMzMzMzMzMysxkEzMzMzMzMzMzOzGgfNzMzMzMzMzMzMahw0MzMzMzMzMzMzq3HQzMzMzMzMzMzMrMZBMzMzMzMzMzMzsxoHzczMzMzMzMzMzGocNDMzMzMzMzMzM6tx0MzMzMzMzMzMzKzm/wH8f/oBrVU+NwAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<Figure size 1440x600 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "doc_lens = [len(d) for d in df_dominant_topic.text]\n",
    "\n",
    "# Plot\n",
    "plt.figure(figsize=(12,5), dpi=120)\n",
    "plt.hist(doc_lens, bins = 10, color='navy', align='left')\n",
    "plt.text(400, 9.5, \"Mean   : \" + str(round(np.mean(doc_lens))))\n",
    "plt.text(400,  9.0, \"Median : \" + str(round(np.median(doc_lens))))\n",
    "plt.text(400,  8.5, \"Stdev   : \" + str(round(np.std(doc_lens))))\n",
    "plt.text(400,  8.0, \"1%ile    : \" + str(round(np.quantile(doc_lens, q=0.01))))\n",
    "plt.text(400,  7.5, \"99%ile  : \" + str(round(np.quantile(doc_lens, q=0.99))))\n",
    "plt.gca().set(xlim=(0, 500), ylabel='Number of Documents', xlabel='Document Word Count')\n",
    "plt.tick_params(size=10)\n",
    "plt.xticks(np.linspace(0, 500,10))\n",
    "\n",
    "plt.title('Distribution of Document Word Counts', fontdict=dict(size=17))\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1200x840 with 8 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import seaborn as sns\n",
    "import matplotlib.colors as mcolors\n",
    "cols = [color for name, color in mcolors.TABLEAU_COLORS.items()]  # more colors: 'mcolors.XKCD_COLORS'\n",
    "\n",
    "fig, axes = plt.subplots(2,2, figsize=(10,7), dpi=120, sharex=True, sharey=True)\n",
    "\n",
    "for i, ax in enumerate(axes.flatten()):    \n",
    "    df_dominant_topic_sub = df_dominant_topic.loc[df_dominant_topic.dominant_topic == i, :]\n",
    "    doc_lens = [len(d) for d in df_dominant_topic_sub.text]\n",
    "    ax.hist(doc_lens, bins = 10, color=cols[i])\n",
    "    ax.tick_params(axis='y', labelcolor=cols[i], color=cols[i])\n",
    "    sns.kdeplot(doc_lens, color=\"black\", shade=False, ax=ax.twinx())\n",
    "    ax.set(xlim=(0, 500), xlabel='Document Word Count')\n",
    "    ax.set_ylabel('Number of Documents', color=cols[i])\n",
    "    ax.set_title('Topic: '+str(i), fontdict=dict(size=12, color=cols[i]))\n",
    "\n",
    "fig.tight_layout()\n",
    "fig.subplots_adjust(top=0.90)\n",
    "plt.xticks(np.linspace(0,500,9))\n",
    "fig.suptitle('Distribution of Document Word Counts by Dominant Topic', fontsize=16)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Sentence Chart Colored by Topic"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 2400x1938 with 17 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Sentence Coloring of N Sentences\n",
    "from matplotlib.patches import Rectangle\n",
    "\n",
    "def sentences_chart(lda_model=lda_model, corpus=corpus, start=0, end=17):\n",
    "    \n",
    "    corp = corpus[start:end]\n",
    "    mycolors = [color for name, color in mcolors.TABLEAU_COLORS.items()]\n",
    "\n",
    "    fig, axes = plt.subplots(end-start, 1, figsize=(20, (end-start)*0.95), dpi=120)       \n",
    "    axes[0].axis('off')\n",
    "    \n",
    "    for i, ax in enumerate(axes):\n",
    "        if i > 0:\n",
    "            corp_cur = corp[i-1] \n",
    "            topic_percs, wordid_topics, wordid_phivalues = lda_model[corp_cur]\n",
    "            word_dominanttopic = [(lda_model.id2word[wd], topic[0]) for wd, topic in wordid_topics] \n",
    "            \n",
    "            ax.text(0.01, 0.5, \"Doc \" + str(i-1) + \": \", verticalalignment='center',\n",
    "                    fontsize=16, color='black', transform=ax.transAxes, fontweight=700)\n",
    "            \n",
    "            # Draw Rectange\n",
    "            topic_percs_sorted = sorted(topic_percs, key=lambda x: (x[1]), reverse=True)\n",
    "            ax.add_patch(Rectangle((0.0, 0.05), 0.99, 0.90, fill=None, alpha=1, \n",
    "                                   color=mycolors[topic_percs_sorted[0][0]], linewidth=2))\n",
    "            \n",
    "            word_pos = 0.06 \n",
    "            for j, (word, topics) in enumerate(word_dominanttopic):\n",
    "                if j < 13:\n",
    "                    ax.text(word_pos, 0.5, word,\n",
    "                            horizontalalignment='left',\n",
    "                            verticalalignment='center',\n",
    "                            fontsize=16, color=mycolors[topics],\n",
    "                            transform=ax.transAxes, fontweight=700)\n",
    "                    word_pos += .009 * len(word)  # to move the word for the next iter\n",
    "                    ax.axis('off')\n",
    "                    \n",
    "            ax.text(word_pos, 0.5, '. . .',\n",
    "                    horizontalalignment='left',\n",
    "                    verticalalignment='center',\n",
    "                    fontsize=16, color='black',\n",
    "                    transform=ax.transAxes)\n",
    "    plt.subplots_adjust(wspace=0, hspace=0)\n",
    "    plt.suptitle('Sentence Topic Coloring for Documents: '+str(start)+' to '+str(end-2),\n",
    "                 fontsize=22, y=0.95, fontweight=700)\n",
    "    plt.tight_layout()\n",
    "    plt.show()\n",
    "\n",
    "sentences_chart()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Sentence Coloring of N Sentences \n",
    "def topics_per_document(model, corpus, start=0, end=1):\n",
    "    \n",
    "    corpus_sel = corpus[start:end] \n",
    "    dominant_topics = [] \n",
    "    topic_percentages = [] \n",
    "    for i, corp in enumerate(corpus_sel): \n",
    "        topic_percs, wordid_topics, wordid_phivalues = model[corp] \n",
    "        dominant_topic = sorted(topic_percs, key = lambda x: x[1], reverse=True)[0][0] \n",
    "        dominant_topics.append((i, dominant_topic)) \n",
    "        topic_percentages.append(topic_percs) \n",
    "        \n",
    "    return(dominant_topics, topic_percentages) \n",
    "\n",
    "dominant_topics, topic_percentages = topics_per_document(model=lda_model, corpus=corpus, end=len(corpus)) \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[[(1, 0.99811506)],\n",
       " [(3, 0.99685204)],\n",
       " [(3, 0.9869821)],\n",
       " [(2, 0.9978904)],\n",
       " [(0, 0.99041116)],\n",
       " [(3, 0.99119884)],\n",
       " [(1, 0.8549225), (3, 0.14042094)],\n",
       " [(0, 0.99220765)],\n",
       " [(0, 0.99040896)],\n",
       " [(0, 0.9971023)],\n",
       " [(2, 0.9946724)],\n",
       " [(1, 0.8536437), (2, 0.14071114)],\n",
       " [(0, 0.88477516), (2, 0.11349659)],\n",
       " [(0, 0.9849224)],\n",
       " [(2, 0.97896326)],\n",
       " [(1, 0.24211651), (2, 0.75516856)],\n",
       " [(0, 0.1425858), (2, 0.3111577), (3, 0.54452866)],\n",
       " [(0, 0.73856384), (2, 0.25315997)],\n",
       " [(0, 0.99673766)],\n",
       " [(2, 0.98834)],\n",
       " [(2, 0.99001825)],\n",
       " [(1, 0.9965927)],\n",
       " [(0, 0.9919954)],\n",
       " [(3, 0.99789226)],\n",
       " [(1, 0.9862889)],\n",
       " [(1, 0.9983804)],\n",
       " [(2, 0.9970209)],\n",
       " [(2, 0.9789192)],\n",
       " [(0, 0.99424255)]]"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "topic_percentages"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# What are the most discussed topics in the documents?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>doc_id</th>\n",
       "      <th>weigh_topic_1</th>\n",
       "      <th>weigh_topic_3</th>\n",
       "      <th>weigh_topic_2</th>\n",
       "      <th>weigh_topic_0</th>\n",
       "      <th>top_topic</th>\n",
       "      <th>document</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>24</td>\n",
       "      <td>0.986289</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>airbus helicopters logged orders for 43 aircraft at heli expo this week , 21 of which came from ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>25</td>\n",
       "      <td>0.998380</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>hai is coming into this year s heli expo celebrating its 70 year heritage with a continued focus...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>26</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.997021</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "      <td>imt vislink booth c4338 is showcasing its updated airborne video downlink system avds with the a...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>27</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.978919</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "      <td>the second prototype of the five bladed h145 helicopter carried out its maiden flight in august ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>28</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.994243</td>\n",
       "      <td>0</td>\n",
       "      <td>a leader in helicopter customizations will display some of the newest avionics solutions during ...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    doc_id  weigh_topic_1  weigh_topic_3  weigh_topic_2  weigh_topic_0  \\\n",
       "24      24       0.986289            NaN            NaN            NaN   \n",
       "25      25       0.998380            NaN            NaN            NaN   \n",
       "26      26            NaN            NaN       0.997021            NaN   \n",
       "27      27            NaN            NaN       0.978919            NaN   \n",
       "28      28            NaN            NaN            NaN       0.994243   \n",
       "\n",
       "    top_topic  \\\n",
       "24          1   \n",
       "25          1   \n",
       "26          2   \n",
       "27          2   \n",
       "28          0   \n",
       "\n",
       "                                                                                               document  \n",
       "24  airbus helicopters logged orders for 43 aircraft at heli expo this week , 21 of which came from ...  \n",
       "25  hai is coming into this year s heli expo celebrating its 70 year heritage with a continued focus...  \n",
       "26  imt vislink booth c4338 is showcasing its updated airborne video downlink system avds with the a...  \n",
       "27  the second prototype of the five bladed h145 helicopter carried out its maiden flight in august ...  \n",
       "28  a leader in helicopter customizations will display some of the newest avionics solutions during ...  "
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "weigh_topic_doc = pd.DataFrame([dict(t) for t in topic_percentages])\n",
    "weigh_topic_doc.columns = ['weigh_topic_'+str(c) for c in weigh_topic_doc.columns.values]\n",
    "\n",
    "weigh_topic_doc.reset_index(inplace=True)\n",
    "weigh_topic_doc.rename(columns={'index':'doc_id'}, inplace=True)\n",
    "\n",
    "top_topics = pd.DataFrame(dominant_topics, columns=['doc_id', 'top_topic'])\n",
    "\n",
    "weigh_topic_doc = pd.merge(pd.merge(weigh_topic_doc, top_topics, on='doc_id'), df_doc, on='doc_id')\n",
    "\n",
    "weigh_topic_doc.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>topic_id</th>\n",
       "      <th>3top_words</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>test ; aircraft ; pilot</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>system ; aircraft ; operator</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>system ; aircraft ; design</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>production ; aircraft ; cabin</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   topic_id                     3top_words\n",
       "0         0        test ; aircraft ; pilot\n",
       "1         1   system ; aircraft ; operator\n",
       "2         2     system ; aircraft ; design\n",
       "3         3  production ; aircraft ; cabin"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Distribution of Dominant Topics in Each Document\n",
    "top_topics = pd.DataFrame(dominant_topics, columns=['document_id', 'dominant_topic'])\n",
    "dominant_topic_in_each_doc = top_topics.groupby('dominant_topic').size()\n",
    "\n",
    "df_dominant_topic_in_each_doc = dominant_topic_in_each_doc.to_frame(name='count').reset_index()\n",
    "df_dominant_topic_in_each_doc.columns = ['topic_id','#_documents']\n",
    "\n",
    "# Top 3 Keywords for each Topic\n",
    "topic_top3words = [(i, topic) for i, topics in lda_model.show_topics(formatted=False) \n",
    "                                 for j, (topic, wt) in enumerate(topics) if j<3]\n",
    "\n",
    "df_top3words_stacked = pd.DataFrame(topic_top3words, columns=['topic_id', '3top_words'])\n",
    "df_top3words = df_top3words_stacked.groupby('topic_id').agg(' ; '.join)\n",
    "df_top3words.reset_index(level=0,inplace=True)\n",
    "df_top3words"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_top3 = pd.merge(df_dominant_topic_in_each_doc, \n",
    "                   (pd.DataFrame(topic_top3words, columns=['topic_id', '3top_words'])\n",
    "                    .groupby('topic_id').agg(' \\n'.join).reset_index(level=0)),\n",
    "                   on='topic_id')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>doc_id</th>\n",
       "      <th>weigh_topic_1</th>\n",
       "      <th>weigh_topic_3</th>\n",
       "      <th>weigh_topic_2</th>\n",
       "      <th>weigh_topic_0</th>\n",
       "      <th>top_topic</th>\n",
       "      <th>document</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0.998115</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>continued weakness in the oil and gas market has left airbus helicopters uncertain of how quickl...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.996852</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3</td>\n",
       "      <td>airbus helicopters flew the first production model of its new h160 medium twin in december. it i...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.986982</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3</td>\n",
       "      <td>the first h160 to roll off the brand new airbus helicopters assembly line in marignane made its ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.997890</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "      <td>there is as much innovation in the way the h160 is made as there is in the helicopter itself. ia...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.990411</td>\n",
       "      <td>0</td>\n",
       "      <td>airbus helicopters has successfully completed the cold weather testing for certification of the ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>5</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.991199</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3</td>\n",
       "      <td>the first serial production airbus helicopters h160 medium twin made its first flight on decembe...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>6</td>\n",
       "      <td>0.854922</td>\n",
       "      <td>0.140421</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>the first serial production h160 performed a flight demonstration at the airbus helicopters base...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>7</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.992208</td>\n",
       "      <td>0</td>\n",
       "      <td>airbus helicopters has successfully completed its certification program of cold weather testing ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>8</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.990409</td>\n",
       "      <td>0</td>\n",
       "      <td>airbus helicopters has successfully completed the cold weather testing for certification of the ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>9</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.997102</td>\n",
       "      <td>0</td>\n",
       "      <td>airbus helicopters is hoping to make significant inroads into the niche market for medium twin e...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.994672</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "      <td>airbus helicopters recently started autonomous flight trials of a vsr700 optionally piloted vehi...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>11</td>\n",
       "      <td>0.853644</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.140711</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>the direction g n rale de l armement dga is exploring rotary wing unmanned aircraft systems. to ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>12</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.113497</td>\n",
       "      <td>0.884775</td>\n",
       "      <td>0</td>\n",
       "      <td>aircraft vsr700 landing the vsr700 is airbus tactical unmanned aerial system uas designed to ful...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>13</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.984922</td>\n",
       "      <td>0</td>\n",
       "      <td>airbus helicopters vsr700 demonstrator has completed a fully unmanned autonomous flight at istre...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>14</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.978963</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "      <td>the airbus helicopters vsr700 in an unmanned reconnaissance helicopter currently being developed...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>15</td>\n",
       "      <td>0.242117</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.755169</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "      <td>airbus is developing a rotary wing unmanned aerial system for naval application , under a newly ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>16</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.544529</td>\n",
       "      <td>0.311158</td>\n",
       "      <td>0.142586</td>\n",
       "      <td>3</td>\n",
       "      <td>the airbus helicopters vsr700 demonstrator a light military tactical unmanned aerial system uav ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>17</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.253160</td>\n",
       "      <td>0.738564</td>\n",
       "      <td>0</td>\n",
       "      <td>airbus helicopters recently started autonomous flight trials of the optionally piloted vsr700 de...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>18</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.996738</td>\n",
       "      <td>0</td>\n",
       "      <td>what is going on beyond the horizon it s a crucial question for any ship captain. in the past , ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>19</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.988340</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "      <td>airbus helicopters has completed the first unmanned , autonomous flight of its vsr700 demonstrat...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>20</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.990018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "      <td>airbus helicopters has unveiled a new version of its h 145 twin engine light utility helicopter ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>21</td>\n",
       "      <td>0.996593</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>blr aerospace booth hashtaghere announced the continued success of its airbus h125 fastfin tail ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>22</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.991995</td>\n",
       "      <td>0</td>\n",
       "      <td>the us army intends to buy 15 more airbus uh 72a lakota utility helicopters and is considering a...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>23</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.997892</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3</td>\n",
       "      <td>as the industry gathers for this year s heli expo , three of the big four western helicopter oem...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>24</td>\n",
       "      <td>0.986289</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>airbus helicopters logged orders for 43 aircraft at heli expo this week , 21 of which came from ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>25</td>\n",
       "      <td>0.998380</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>hai is coming into this year s heli expo celebrating its 70 year heritage with a continued focus...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>26</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.997021</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "      <td>imt vislink booth c4338 is showcasing its updated airborne video downlink system avds with the a...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>27</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.978919</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "      <td>the second prototype of the five bladed h145 helicopter carried out its maiden flight in august ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>28</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.994243</td>\n",
       "      <td>0</td>\n",
       "      <td>a leader in helicopter customizations will display some of the newest avionics solutions during ...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    doc_id  weigh_topic_1  weigh_topic_3  weigh_topic_2  weigh_topic_0  \\\n",
       "0        0       0.998115            NaN            NaN            NaN   \n",
       "1        1            NaN       0.996852            NaN            NaN   \n",
       "2        2            NaN       0.986982            NaN            NaN   \n",
       "3        3            NaN            NaN       0.997890            NaN   \n",
       "4        4            NaN            NaN            NaN       0.990411   \n",
       "5        5            NaN       0.991199            NaN            NaN   \n",
       "6        6       0.854922       0.140421            NaN            NaN   \n",
       "7        7            NaN            NaN            NaN       0.992208   \n",
       "8        8            NaN            NaN            NaN       0.990409   \n",
       "9        9            NaN            NaN            NaN       0.997102   \n",
       "10      10            NaN            NaN       0.994672            NaN   \n",
       "11      11       0.853644            NaN       0.140711            NaN   \n",
       "12      12            NaN            NaN       0.113497       0.884775   \n",
       "13      13            NaN            NaN            NaN       0.984922   \n",
       "14      14            NaN            NaN       0.978963            NaN   \n",
       "15      15       0.242117            NaN       0.755169            NaN   \n",
       "16      16            NaN       0.544529       0.311158       0.142586   \n",
       "17      17            NaN            NaN       0.253160       0.738564   \n",
       "18      18            NaN            NaN            NaN       0.996738   \n",
       "19      19            NaN            NaN       0.988340            NaN   \n",
       "20      20            NaN            NaN       0.990018            NaN   \n",
       "21      21       0.996593            NaN            NaN            NaN   \n",
       "22      22            NaN            NaN            NaN       0.991995   \n",
       "23      23            NaN       0.997892            NaN            NaN   \n",
       "24      24       0.986289            NaN            NaN            NaN   \n",
       "25      25       0.998380            NaN            NaN            NaN   \n",
       "26      26            NaN            NaN       0.997021            NaN   \n",
       "27      27            NaN            NaN       0.978919            NaN   \n",
       "28      28            NaN            NaN            NaN       0.994243   \n",
       "\n",
       "    top_topic  \\\n",
       "0           1   \n",
       "1           3   \n",
       "2           3   \n",
       "3           2   \n",
       "4           0   \n",
       "5           3   \n",
       "6           1   \n",
       "7           0   \n",
       "8           0   \n",
       "9           0   \n",
       "10          2   \n",
       "11          1   \n",
       "12          0   \n",
       "13          0   \n",
       "14          2   \n",
       "15          2   \n",
       "16          3   \n",
       "17          0   \n",
       "18          0   \n",
       "19          2   \n",
       "20          2   \n",
       "21          1   \n",
       "22          0   \n",
       "23          3   \n",
       "24          1   \n",
       "25          1   \n",
       "26          2   \n",
       "27          2   \n",
       "28          0   \n",
       "\n",
       "                                                                                               document  \n",
       "0   continued weakness in the oil and gas market has left airbus helicopters uncertain of how quickl...  \n",
       "1   airbus helicopters flew the first production model of its new h160 medium twin in december. it i...  \n",
       "2   the first h160 to roll off the brand new airbus helicopters assembly line in marignane made its ...  \n",
       "3   there is as much innovation in the way the h160 is made as there is in the helicopter itself. ia...  \n",
       "4   airbus helicopters has successfully completed the cold weather testing for certification of the ...  \n",
       "5   the first serial production airbus helicopters h160 medium twin made its first flight on decembe...  \n",
       "6   the first serial production h160 performed a flight demonstration at the airbus helicopters base...  \n",
       "7   airbus helicopters has successfully completed its certification program of cold weather testing ...  \n",
       "8   airbus helicopters has successfully completed the cold weather testing for certification of the ...  \n",
       "9   airbus helicopters is hoping to make significant inroads into the niche market for medium twin e...  \n",
       "10  airbus helicopters recently started autonomous flight trials of a vsr700 optionally piloted vehi...  \n",
       "11  the direction g n rale de l armement dga is exploring rotary wing unmanned aircraft systems. to ...  \n",
       "12  aircraft vsr700 landing the vsr700 is airbus tactical unmanned aerial system uas designed to ful...  \n",
       "13  airbus helicopters vsr700 demonstrator has completed a fully unmanned autonomous flight at istre...  \n",
       "14  the airbus helicopters vsr700 in an unmanned reconnaissance helicopter currently being developed...  \n",
       "15  airbus is developing a rotary wing unmanned aerial system for naval application , under a newly ...  \n",
       "16  the airbus helicopters vsr700 demonstrator a light military tactical unmanned aerial system uav ...  \n",
       "17  airbus helicopters recently started autonomous flight trials of the optionally piloted vsr700 de...  \n",
       "18  what is going on beyond the horizon it s a crucial question for any ship captain. in the past , ...  \n",
       "19  airbus helicopters has completed the first unmanned , autonomous flight of its vsr700 demonstrat...  \n",
       "20  airbus helicopters has unveiled a new version of its h 145 twin engine light utility helicopter ...  \n",
       "21  blr aerospace booth hashtaghere announced the continued success of its airbus h125 fastfin tail ...  \n",
       "22  the us army intends to buy 15 more airbus uh 72a lakota utility helicopters and is considering a...  \n",
       "23  as the industry gathers for this year s heli expo , three of the big four western helicopter oem...  \n",
       "24  airbus helicopters logged orders for 43 aircraft at heli expo this week , 21 of which came from ...  \n",
       "25  hai is coming into this year s heli expo celebrating its 70 year heritage with a continued focus...  \n",
       "26  imt vislink booth c4338 is showcasing its updated airborne video downlink system avds with the a...  \n",
       "27  the second prototype of the five bladed h145 helicopter carried out its maiden flight in august ...  \n",
       "28  a leader in helicopter customizations will display some of the newest avionics solutions during ...  "
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "top_topics = pd.DataFrame(dominant_topics, columns=['document_id', 'dominant_topic'])\n",
    "dominant_topic_in_each_doc = top_topics.groupby('dominant_topic').size()\n",
    "df_dominant_topic_in_each_doc = dominant_topic_in_each_doc.to_frame(name='count').reset_index()\n",
    "\n",
    "weigh_topic_by_doc = weigh_topic_doc[['weigh_topic_0','weigh_topic_1','weigh_topic_2','weigh_topic_3']\n",
    "                                    ].sum().to_frame(name='count').reset_index()\n",
    "\n",
    "weigh_topic_doc"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x480 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from matplotlib.ticker import FuncFormatter\n",
    "\n",
    "# Plot\n",
    "fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(12, 4), dpi=120, sharey=True)\n",
    "tick_formatter = FuncFormatter(lambda x, pos: 'Topic_'+str(x)+':\\n'+df_top3.loc[df_top3.topic_id==x, '3top_words'].values[0])\n",
    "\n",
    "# Topic Distribution by Dominant Topics\n",
    "ax1.bar(x='dominant_topic', height='count', data=df_dominant_topic_in_each_doc, width=.5, color='firebrick')\n",
    "ax1.set_xticks(range(df_dominant_topic_in_each_doc.dominant_topic.unique().__len__()))\n",
    "ax1.xaxis.set_major_formatter(tick_formatter)\n",
    "ax1.set_title('Number of Documents by Dominant Topic', fontdict=dict(size=12))\n",
    "ax1.set_ylabel('Number of Documents')\n",
    "ax1.set_ylim(0, 17) \n",
    "\n",
    "# Topic Distribution by Topic Weights\n",
    "ax2.bar(x='index', height='count', data=weigh_topic_by_doc, width=.5, color='steelblue')\n",
    "ax2.set_xticks(range(weigh_topic_by_doc.index.unique().__len__()))\n",
    "ax2.xaxis.set_major_formatter(tick_formatter)\n",
    "ax2.set_title('Number of Documents by Topic Weightage', fontdict=dict(size=12))\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#  pyLDAVis "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.rawgit.com/bmabey/pyLDAvis/files/ldavis.v1.0.0.css\">\n",
       "\n",
       "\n",
       "<div id=\"ldavis_el222101123221456168575545903\"></div>\n",
       "<script type=\"text/javascript\">\n",
       "\n",
       "var ldavis_el222101123221456168575545903_data = {\"mdsDat\": {\"x\": [-0.13113544744197808, 0.07786540284062148, 0.01201831612693506, 0.0412517284744214], \"y\": [0.021933499651768856, 0.01658758266459762, -0.10856487347432961, 0.07004379115796316], \"topics\": [1, 2, 3, 4], \"cluster\": [1, 1, 1, 1], \"Freq\": [28.536739349365234, 28.353044509887695, 25.526445388793945, 17.58376693725586]}, \"tinfo\": {\"Term\": [\"cabin\", \"production\", \"video\", \"increase\", \"operator\", \"oil\", \"design\", \"executive\", \"gas\", \"test\", \"fastfin\", \"end\", \"feature\", \"assembly\", \"drone\", \"expect\", \"assemble\", \"system\", \"speed\", \"plan\", \"blade\", \"cold\", \"cruise\", \"surveillance\", \"session\", \"carry\", \"manufacturer\", \"ship\", \"temperature\", \"utility\", \"fastfin\", \"session\", \"term\", \"return\", \"issue\", \"study\", \"stability\", \"reveal\", \"however\", \"output\", \"ramp\", \"contract\", \"shortage\", \"really\", \"annual\", \"challenge\", \"member\", \"investment\", \"identify\", \"increase\", \"enhancement\", \"fact\", \"become\", \"situation\", \"address\", \"legislative\", \"initiative\", \"venue\", \"reauthorization\", \"committee\", \"oil\", \"gas\", \"operator\", \"order\", \"segment\", \"sell\", \"look\", \"number\", \"sector\", \"push\", \"sale\", \"system\", \"performance\", \"safety\", \"continue\", \"manufacturer\", \"market\", \"drone\", \"customer\", \"aircraft\", \"available\", \"focus\", \"mission\", \"engine\", \"pilot\", \"include\", \"service\", \"work\", \"military\", \"target\", \"cold\", \"setz\", \"stretcher\", \"behaviour\", \"lapland\", \"exceptionally\", \"region\", \"global\", \"intend\", \"eurotec\", \"client\", \"ensure\", \"team\", \"lengthy\", \"scandinavian\", \"series\", \"finland\", \"extremely\", \"slide\", \"airambulance\", \"northern\", \"successfully\", \"warfare\", \"buy\", \"inch\", \"rely\", \"access\", \"multifunctional\", \"device\", \"inroad\", \"temperature\", \"patient\", \"avionic\", \"anti\", \"test\", \"display\", \"complete\", \"carry\", \"equipment\", \"campaign\", \"condition\", \"fly\", \"pilot\", \"serial\", \"aircraft\", \"base\", \"cabin\", \"operation\", \"operate\", \"customer\", \"sensor\", \"autonomous\", \"utility\", \"target\", \"include\", \"degree\", \"ship\", \"production\", \"light\", \"prototype\", \"develop\", \"mission\", \"feature\", \"already\", \"system\", \"video\", \"distribute\", \"receiver\", \"digital\", \"assembly\", \"stream\", \"communication\", \"situational\", \"agency\", \"tsm\", \"local\", \"armed\", \"mcas\", \"force\", \"methodology\", \"jointly\", \"intelligence\", \"transmission\", \"helicoptere\", \"donauw\", \"mainly\", \"axis\", \"enforcement\", \"cellular\", \"connect\", \"reconstruct\", \"channel\", \"downlink\", \"collect\", \"ready\", \"remote\", \"surveillance\", \"allow\", \"much\", \"platform\", \"view\", \"capacity\", \"autopilot\", \"problem\", \"keep\", \"airborne\", \"design\", \"french\", \"tactical\", \"ship\", \"military\", \"trial\", \"system\", \"way\", \"site\", \"vehicle\", \"aircraft\", \"autonomous\", \"multiple\", \"drone\", \"mission\", \"develop\", \"give\", \"base\", \"company\", \"early\", \"carry\", \"operation\", \"include\", \"civil\", \"reduce\", \"light\", \"blade\", \"prototype\", \"manufacturer\", \"executive\", \"racer\", \"window\", \"active\", \"coming\", \"nautical\", \"mile\", \"ride\", \"baggage\", \"oversize\", \"tracking\", \"compartment\", \"double\", \"smooth\", \"refine\", \"sweep\", \"shaft\", \"speed\", \"end\", \"slate\", \"propel\", \"centrifugal\", \"wing\", \"embed\", \"estimate\", \"ceiling\", \"horsepower\", \"guide\", \"vane\", \"compressor\", \"foot\", \"pre\", \"join\", \"cabin\", \"production\", \"cruise\", \"pound\", \"passenger\", \"expect\", \"assemble\", \"plan\", \"feature\", \"power\", \"aircraft\", \"blade\", \"variety\", \"seat\", \"ach\", \"model\", \"composite\", \"engine\", \"flat\", \"deliver\", \"design\", \"configure\", \"fly\", \"operation\", \"percent\", \"test\", \"utility\", \"system\", \"well\", \"program\", \"already\", \"company\"], \"Freq\": [18.0, 27.0, 11.0, 14.0, 20.0, 16.0, 21.0, 5.0, 15.0, 31.0, 7.0, 6.0, 15.0, 8.0, 14.0, 14.0, 7.0, 47.0, 5.0, 13.0, 9.0, 6.0, 7.0, 9.0, 6.0, 12.0, 10.0, 15.0, 7.0, 9.0, 7.246827125549316, 5.5216383934021, 4.783021450042725, 4.060718059539795, 3.994460105895996, 4.006166458129883, 3.329526662826538, 3.3284201622009277, 3.286168098449707, 3.2789487838745117, 3.278078079223633, 4.590099334716797, 3.2400941848754883, 3.2390928268432617, 3.232628107070923, 3.223851442337036, 3.2098865509033203, 2.546062707901001, 2.5277059078216553, 11.870953559875488, 2.5236995220184326, 2.500602960586548, 2.4942760467529297, 2.489178419113159, 2.4716954231262207, 2.468412399291992, 2.4681124687194824, 2.4644672870635986, 2.4597935676574707, 2.447906970977783, 12.460444450378418, 11.829358100891113, 14.79994010925293, 8.02279281616211, 5.615396022796631, 4.075447082519531, 6.421482563018799, 7.827579975128174, 4.530834674835205, 4.048929214477539, 6.37507963180542, 20.267642974853516, 6.869968891143799, 8.672235488891602, 5.628188610076904, 6.380980968475342, 7.915110111236572, 7.4040703773498535, 9.588587760925293, 16.484323501586914, 4.8488264083862305, 4.828404426574707, 8.17075252532959, 7.489353656768799, 7.165486812591553, 7.139962673187256, 5.436636447906494, 5.583620071411133, 5.024991989135742, 4.846035957336426, 5.854485034942627, 3.431950092315674, 3.4318606853485107, 3.4318346977233887, 3.4318270683288574, 3.4318230152130127, 3.400986433029175, 3.3941612243652344, 3.3942208290100098, 3.3571653366088867, 3.3481905460357666, 3.3073861598968506, 5.833414077758789, 2.6243419647216797, 2.624326705932617, 2.6243131160736084, 2.624290704727173, 2.6243062019348145, 2.624285936355591, 2.624282121658325, 2.624277353286743, 5.141116619110107, 4.567215442657471, 2.577146530151367, 2.5687038898468018, 2.5634872913360596, 4.237569332122803, 1.8168386220932007, 1.8168326616287231, 1.8168290853500366, 5.85429048538208, 3.4420552253723145, 3.3678483963012695, 4.496669769287109, 18.780467987060547, 5.74827766418457, 4.2244744300842285, 6.839849948883057, 4.223823070526123, 3.4319212436676025, 5.785470485687256, 7.494719505310059, 8.3174467086792, 5.058444976806641, 14.89568042755127, 8.002140045166016, 7.590504169464111, 8.24578857421875, 5.621344566345215, 7.483939170837402, 4.98769474029541, 5.801135063171387, 5.015341758728027, 5.466443061828613, 6.624799728393555, 4.209561824798584, 5.689700126647949, 6.700716972351074, 5.0405378341674805, 5.059042930603027, 5.086565971374512, 5.598875999450684, 5.042876720428467, 5.032075881958008, 5.131555557250977, 11.103754997253418, 3.330263376235962, 3.3194661140441895, 3.306126594543457, 7.12489652633667, 3.2138097286224365, 2.563993453979492, 2.5473732948303223, 2.5396106243133545, 2.536078453063965, 2.535559892654419, 2.530181407928467, 2.5302181243896484, 2.5276288986206055, 2.488953113555908, 2.430229425430298, 2.3808786869049072, 1.778706669807434, 1.772396206855774, 1.7728519439697266, 1.7724907398223877, 1.7707875967025757, 1.7659780979156494, 1.7636359930038452, 1.7629848718643188, 1.761087417602539, 1.7574282884597778, 1.7564109563827515, 1.7562243938446045, 2.3507673740386963, 2.341223955154419, 6.589510440826416, 6.87410831451416, 3.325124740600586, 6.53361177444458, 3.326223134994507, 3.801344633102417, 3.3212809562683105, 3.3165106773376465, 2.2782723903656006, 4.134291648864746, 11.437992095947266, 4.507240295410156, 5.284209251403809, 8.302155494689941, 8.510171890258789, 5.12222146987915, 17.233631134033203, 3.9769115447998047, 4.870367050170898, 5.112061023712158, 15.336498260498047, 6.155401229858398, 3.583400249481201, 6.338881492614746, 8.270013809204102, 6.066160678863525, 3.9673705101013184, 6.516617774963379, 5.582951545715332, 4.111256122589111, 4.9797539710998535, 6.259708881378174, 5.636009693145752, 4.279879093170166, 4.109077453613281, 4.3260602951049805, 4.093758583068848, 4.174928665161133, 4.1143693923950195, 4.725503921508789, 2.7782413959503174, 2.125746965408325, 2.1228749752044678, 2.121701955795288, 2.1212167739868164, 2.121176242828369, 2.1210997104644775, 2.1204750537872314, 2.1203198432922363, 2.1197967529296875, 2.1192328929901123, 2.1190338134765625, 2.1189515590667725, 2.1176373958587646, 2.1168017387390137, 2.111806869506836, 4.047661781311035, 4.900815486907959, 1.4736303091049194, 1.4674793481826782, 1.4656866788864136, 1.464095950126648, 1.463741421699524, 1.4628353118896484, 1.4621871709823608, 1.4619507789611816, 1.4613730907440186, 1.4610481262207031, 1.459607720375061, 2.7797961235046387, 2.7817721366882324, 2.778355121612549, 10.572500228881836, 14.981027603149414, 4.291159152984619, 3.416821241378784, 3.643582820892334, 6.894311904907227, 4.169604301452637, 6.137904644012451, 6.881141185760498, 4.071194171905518, 11.3897066116333, 4.146475791931152, 3.5211353302001953, 3.651536464691162, 2.8587965965270996, 3.4187090396881104, 2.8304924964904785, 5.4747419357299805, 2.8106331825256348, 2.977573871612549, 5.398755073547363, 3.449183464050293, 4.766696453094482, 4.893208980560303, 3.4174232482910156, 4.921605587005615, 3.4254674911499023, 4.72954797744751, 3.546621799468994, 3.4093286991119385, 3.497413158416748, 3.512838125228882], \"Total\": [18.0, 27.0, 11.0, 14.0, 20.0, 16.0, 21.0, 5.0, 15.0, 31.0, 7.0, 6.0, 15.0, 8.0, 14.0, 14.0, 7.0, 47.0, 5.0, 13.0, 9.0, 6.0, 7.0, 9.0, 6.0, 12.0, 10.0, 15.0, 7.0, 9.0, 7.812974452972412, 6.220748424530029, 5.454216003417969, 4.670727252960205, 4.660154342651367, 4.673839092254639, 3.895617961883545, 3.895433187484741, 3.8886942863464355, 3.887526750564575, 3.8873870372772217, 5.4681477546691895, 3.8813154697418213, 3.881157636642456, 3.880124568939209, 3.8787200450897217, 3.8764870166778564, 3.112147331237793, 3.1092357635498047, 14.620797157287598, 3.108572006225586, 3.1048760414123535, 3.103865146636963, 3.1030354499816895, 3.1002511978149414, 3.099727153778076, 3.0996711254119873, 3.099092960357666, 3.0983426570892334, 3.0964341163635254, 16.167325973510742, 15.413948059082031, 20.1312255859375, 11.658020973205566, 7.850628852844238, 5.464252471923828, 9.278060913085938, 11.746664047241211, 6.2469482421875, 5.475979804992676, 9.946181297302246, 47.36237716674805, 11.825643539428711, 17.268423080444336, 9.025748252868652, 10.993528366088867, 15.386280059814453, 14.188565254211426, 21.927104949951172, 58.10620880126953, 7.7300567626953125, 7.858614921569824, 23.537822723388672, 21.09469223022461, 19.762182235717773, 21.784910202026367, 13.0424222946167, 14.887246131896973, 17.10993766784668, 11.889230728149414, 6.4147138595581055, 3.9920153617858887, 3.991999864578247, 3.9920012950897217, 3.991995334625244, 3.9919967651367188, 3.9895665645599365, 3.988816261291504, 3.9908716678619385, 3.978184461593628, 3.976531982421875, 3.9790265560150146, 7.069852352142334, 3.1844499111175537, 3.184443712234497, 3.1844372749328613, 3.1844124794006348, 3.1844308376312256, 3.1844282150268555, 3.184425115585327, 3.18442440032959, 6.283157825469971, 5.5878005027771, 3.1830050945281982, 3.174154758453369, 3.178656578063965, 5.457546234130859, 2.3768773078918457, 2.3768763542175293, 2.3768725395202637, 7.73459529876709, 4.652182102203369, 4.640071392059326, 6.366138935089111, 31.03081512451172, 8.75090503692627, 6.2548508644104, 12.701902389526367, 6.388915061950684, 4.772073745727539, 10.885815620422363, 16.587501525878906, 19.762182235717773, 8.995506286621094, 58.10620880126953, 20.27748680114746, 18.593257904052734, 23.71880340576172, 11.800668716430664, 21.927104949951172, 9.430562019348145, 13.391229629516602, 9.702507019042969, 11.889230728149414, 21.784910202026367, 6.7764058113098145, 15.871973037719727, 27.983827590942383, 12.511870384216309, 14.205190658569336, 14.81948471069336, 23.537822723388672, 15.315109252929688, 15.216934204101562, 47.36237716674805, 11.88825511932373, 3.943453311920166, 3.941559314727783, 3.941391706466675, 8.565784454345703, 3.943375825881958, 3.150907039642334, 3.1479945182800293, 3.1466240882873535, 3.1460161209106445, 3.145918607711792, 3.146702289581299, 3.1479146480560303, 3.1465182304382324, 3.1419036388397217, 3.149014711380005, 3.1480066776275635, 2.3550331592559814, 2.3539280891418457, 2.3548505306243896, 2.354902982711792, 2.354543924331665, 2.352792263031006, 2.352386951446533, 2.3522756099700928, 2.351937770843506, 2.3513031005859375, 2.3511130809783936, 2.351085662841797, 3.1480712890625, 3.1488661766052246, 9.331026077270508, 10.242650985717773, 4.7251482009887695, 10.040853500366211, 4.7500410079956055, 5.519802093505859, 4.750339508056641, 4.750762462615967, 3.144256353378296, 6.333407402038574, 21.196430206298828, 7.1256022453308105, 8.646401405334473, 15.871973037719727, 17.10993766784668, 8.739367485046387, 47.36237716674805, 6.30144739151001, 8.734367370605469, 9.542264938354492, 58.10620880126953, 13.391229629516602, 5.530846118927002, 14.188565254211426, 23.537822723388672, 14.81948471069336, 6.836435317993164, 20.27748680114746, 15.965856552124023, 7.788473129272461, 12.701902389526367, 23.71880340576172, 21.784910202026367, 8.99489688873291, 8.309097290039062, 12.511870384216309, 9.479389190673828, 14.205190658569336, 10.993528366088867, 5.381399154663086, 3.3998210430145264, 2.740236759185791, 2.740854024887085, 2.7411253452301025, 2.741194248199463, 2.7412219047546387, 2.741260528564453, 2.7413854598999023, 2.741443634033203, 2.741520643234253, 2.7416460514068604, 2.741698741912842, 2.7417232990264893, 2.741976499557495, 2.7421910762786865, 2.7432472705841064, 5.534521102905273, 6.914693355560303, 2.0803258419036865, 2.081754207611084, 2.0821328163146973, 2.0823404788970947, 2.082413673400879, 2.082761764526367, 2.082871675491333, 2.082918643951416, 2.083078384399414, 2.0831246376037598, 2.0834639072418213, 4.18330192565918, 4.206563949584961, 4.207314491271973, 18.593257904052734, 27.983827590942383, 7.068977355957031, 5.65351676940918, 6.407512664794922, 14.496423721313477, 7.893285751342773, 13.023648262023926, 15.315109252929688, 8.67815113067627, 58.10620880126953, 9.479389190673828, 7.215061664581299, 8.020838737487793, 4.951967239379883, 7.282838821411133, 4.984734535217285, 21.09469223022461, 4.9984636306762695, 5.726621627807617, 21.196430206298828, 8.045476913452148, 16.587501525878906, 23.71880340576172, 8.835460662841797, 31.03081512451172, 9.702507019042969, 47.36237716674805, 13.60236930847168, 12.003990173339844, 15.216934204101562, 15.965856552124023], \"Category\": [\"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\"], \"logprob\": [30.0, 29.0, 28.0, 27.0, 26.0, 25.0, 24.0, 23.0, 22.0, 21.0, 20.0, 19.0, 18.0, 17.0, 16.0, 15.0, 14.0, 13.0, 12.0, 11.0, 10.0, 9.0, 8.0, 7.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0, -5.254000186920166, -5.525899887084961, -5.66949987411499, -5.8333001136779785, -5.849699974060059, -5.846799850463867, -6.031799793243408, -6.032100200653076, -6.044899940490723, -6.047100067138672, -6.047399997711182, -5.710700035095215, -6.059000015258789, -6.059299945831299, -6.061299800872803, -6.064000129699707, -6.068399906158447, -6.300099849700928, -6.307300090789795, -4.760499954223633, -6.308899879455566, -6.3180999755859375, -6.3206000328063965, -6.322700023651123, -6.329699993133545, -6.330999851226807, -6.331200122833252, -6.332600116729736, -6.334499835968018, -6.339399814605713, -4.712100028991699, -4.763999938964844, -4.539999961853027, -5.152299880981445, -5.509099960327148, -5.829599857330322, -5.375, -5.177000045776367, -5.723700046539307, -5.83620023727417, -5.382199764251709, -4.225599765777588, -5.307499885559082, -5.07450008392334, -5.506800174713135, -5.38129997253418, -5.165800094604492, -5.232600212097168, -4.973999977111816, -4.432199954986572, -5.655900001525879, -5.660099983215332, -5.133999824523926, -5.221099853515625, -5.2652997970581055, -5.268899917602539, -5.541399955749512, -5.514800071716309, -5.620200157165527, -5.656400203704834, -5.460899829864502, -5.994999885559082, -5.994999885559082, -5.995100021362305, -5.995100021362305, -5.995100021362305, -6.0040998458862305, -6.006100177764893, -6.006100177764893, -6.017099857330322, -6.019700050354004, -6.0320000648498535, -5.4644999504089355, -6.263299942016602, -6.263299942016602, -6.263299942016602, -6.263299942016602, -6.263299942016602, -6.263299942016602, -6.263299942016602, -6.263299942016602, -5.59089994430542, -5.709199905395508, -6.281499862670898, -6.284800052642822, -6.286799907684326, -5.784200191497803, -6.631100177764893, -6.631100177764893, -6.631100177764893, -5.460999965667725, -5.992099761962891, -6.013899803161621, -5.724800109863281, -4.295300006866455, -5.479300022125244, -5.787300109863281, -5.3053998947143555, -5.787399768829346, -5.994999885559082, -5.472799777984619, -5.214000225067139, -5.109799861907959, -5.607100009918213, -4.527100086212158, -5.148399829864502, -5.201300144195557, -5.1184000968933105, -5.5015997886657715, -5.215400218963623, -5.621200084686279, -5.470099925994873, -5.615699768066406, -5.5295000076293945, -5.337299823760986, -5.790800094604492, -5.489500045776367, -5.325900077819824, -5.610599994659424, -5.60699987411499, -5.601500034332275, -5.5055999755859375, -5.610199928283691, -5.612299919128418, -5.592700004577637, -4.715799808502197, -5.920100212097168, -5.923299789428711, -5.9274001121521, -5.1595001220703125, -5.955699920654297, -6.181600093841553, -6.1880998611450195, -6.191100120544434, -6.192500114440918, -6.192699909210205, -6.194799900054932, -6.194799900054932, -6.195899963378906, -6.211299896240234, -6.235099792480469, -6.25570011138916, -6.5472002029418945, -6.55079984664917, -6.55049991607666, -6.5507001876831055, -6.551700115203857, -6.5543999671936035, -6.555799961090088, -6.556099891662598, -6.557199954986572, -6.559299945831299, -6.559899806976318, -6.559999942779541, -6.268400192260742, -6.272500038146973, -5.23769998550415, -5.195400238037109, -5.921599864959717, -5.246200084686279, -5.921299934387207, -5.787799835205078, -5.922800064086914, -5.924200057983398, -6.299699783325195, -5.703800201416016, -4.686200141906738, -5.617400169372559, -5.458399772644043, -5.0065999031066895, -4.981900215148926, -5.489500045776367, -4.276299953460693, -5.742599964141846, -5.539999961853027, -5.491499900817871, -4.392899990081787, -5.305799961090088, -5.846799850463867, -5.276400089263916, -5.010499954223633, -5.320400238037109, -5.744999885559082, -5.248799800872803, -5.40339994430542, -5.709400177001953, -5.5177998542785645, -5.289000034332275, -5.394000053405762, -5.6691999435424805, -5.70989990234375, -5.6585001945495605, -5.713699817657471, -5.693999767303467, -5.708600044250488, -5.197400093078613, -5.728600025177002, -5.996300220489502, -5.997600078582764, -5.998199939727783, -5.9984002113342285, -5.9984002113342285, -5.998499870300293, -5.998799800872803, -5.998799800872803, -5.999100208282471, -5.999300003051758, -5.9994001388549805, -5.999499797821045, -6.000100135803223, -6.000500202178955, -6.002799987792969, -5.35230016708374, -5.160999774932861, -6.36269998550415, -6.366799831390381, -6.368100166320801, -6.369200229644775, -6.3694000244140625, -6.369999885559082, -6.370500087738037, -6.37060022354126, -6.370999813079834, -6.371200084686279, -6.372200012207031, -5.728000164031982, -5.72730016708374, -5.728499889373779, -4.392099857330322, -4.043600082397461, -5.293799877166748, -5.521699905395508, -5.457399845123291, -4.819699764251709, -5.3225998878479, -4.9359002113342285, -4.821599960327148, -5.346499919891357, -4.317699909210205, -5.328100204467773, -5.491600036621094, -5.4552001953125, -5.699999809265137, -5.521100044250488, -5.70989990234375, -5.05019998550415, -5.7170000076293945, -5.659299850463867, -5.064199924468994, -5.51230001449585, -5.188700199127197, -5.162499904632568, -5.521500110626221, -5.156799793243408, -5.519199848175049, -5.196599960327148, -5.484399795532227, -5.523900032043457, -5.4984002113342285, -5.49399995803833], \"loglift\": [30.0, 29.0, 28.0, 27.0, 26.0, 25.0, 24.0, 23.0, 22.0, 21.0, 20.0, 19.0, 18.0, 17.0, 16.0, 15.0, 14.0, 13.0, 12.0, 11.0, 10.0, 9.0, 8.0, 7.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0, 1.1787999868392944, 1.1347999572753906, 1.1226999759674072, 1.1139999628067017, 1.0997999906539917, 1.0997999906539917, 1.097000002861023, 1.0966999530792236, 1.0856000185012817, 1.0836999416351318, 1.0835000276565552, 1.0788999795913696, 1.0734000205993652, 1.073099970817566, 1.0714000463485718, 1.069000005722046, 1.0652999877929688, 1.0532000064849854, 1.0469000339508057, 1.0456000566482544, 1.0455000400543213, 1.037500023841858, 1.0353000164031982, 1.0334999561309814, 1.027400016784668, 1.0262000560760498, 1.0261000394821167, 1.0247999429702759, 1.0232000350952148, 1.0190000534057617, 0.9934999942779541, 0.989300012588501, 0.9463000297546387, 0.880299985408783, 0.9189000129699707, 0.9606999754905701, 0.8859999775886536, 0.8481000065803528, 0.9327999949455261, 0.9520999789237976, 0.8091999888420105, 0.4052000045776367, 0.7109000086784363, 0.5651999711990356, 0.7817000150680542, 0.7099999785423279, 0.5892999768257141, 0.603600025177002, 0.426800012588501, -0.005900000222027302, 0.7875999808311462, 0.7669000029563904, 0.19589999318122864, 0.2184000015258789, 0.2395000010728836, 0.13850000500679016, 0.3788999915122986, 0.2732999920845032, 0.028699999675154686, 0.3564999997615814, 1.1690000295639038, 1.1093000173568726, 1.1092000007629395, 1.1092000007629395, 1.1092000007629395, 1.1092000007629395, 1.1008000373840332, 1.0989999771118164, 1.0985000133514404, 1.0907000303268433, 1.0884000062942505, 1.075600028038025, 1.0681999921798706, 1.0670000314712524, 1.0670000314712524, 1.0670000314712524, 1.0670000314712524, 1.0670000314712524, 1.0670000314712524, 1.0670000314712524, 1.0670000314712524, 1.0598000288009644, 1.0587999820709229, 1.049299955368042, 1.048799991607666, 1.045300006866455, 1.0074000358581543, 0.9916999936103821, 0.9916999936103821, 0.9916999936103821, 0.9818999767303467, 0.9592000246047974, 0.9399999976158142, 0.9128000140190125, 0.7583000063896179, 0.8402000069618225, 0.8679999709129333, 0.6413999795913696, 0.8465999960899353, 0.9308000206947327, 0.6283000111579895, 0.4659999907016754, 0.39500001072883606, 0.6848000288009644, -0.10080000013113022, 0.33059999346733093, 0.3644999861717224, 0.20389999449253082, 0.5188999772071838, 0.18549999594688416, 0.6234999895095825, 0.4239000082015991, 0.600600004196167, 0.48339998722076416, 0.07000000029802322, 0.7843000292778015, 0.2345000058412552, -0.16899999976158142, 0.3513000011444092, 0.2280000001192093, 0.19110000133514404, -0.17560000717639923, 0.14959999918937683, 0.15389999747276306, -0.9620000123977661, 1.2971999645233154, 1.1964000463485718, 1.1936999559402466, 1.1897000074386597, 1.1813000440597534, 1.1608999967575073, 1.1592999696731567, 1.1538000106811523, 1.1511000394821167, 1.149899959564209, 1.1497999429702759, 1.1474000215530396, 1.1469999551773071, 1.146399974822998, 1.1325000524520874, 1.1064000129699707, 1.0861999988555908, 1.0848000049591064, 1.0816999673843384, 1.0815999507904053, 1.0813000202178955, 1.0805000066757202, 1.0786000490188599, 1.0773999691009521, 1.0771000385284424, 1.0760999917984009, 1.0743000507354736, 1.073799967765808, 1.073699951171875, 1.0734000205993652, 1.069100022315979, 1.0176000595092773, 0.96670001745224, 1.0140999555587769, 0.9358000159263611, 1.0090999603271484, 0.9925000071525574, 1.007599949836731, 1.006100058555603, 1.0433000326156616, 0.9388999938964844, 0.7486000061035156, 0.9074000120162964, 0.8730000257492065, 0.7174000144004822, 0.6671000123023987, 0.8312000036239624, 0.3544999957084656, 0.9052000045776367, 0.7814000248908997, 0.7412999868392944, 0.033399999141693115, 0.5881999731063843, 0.9314000010490417, 0.5597000122070312, 0.31949999928474426, 0.4722000062465668, 0.8213000297546387, 0.23029999434947968, 0.31470000743865967, 0.7264999747276306, 0.42910000681877136, 0.0333000011742115, 0.013399999588727951, 0.6226999759674072, 0.661300003528595, 0.3034000098705292, 0.5257999897003174, 0.14090000092983246, 0.38260000944137573, 1.608199954032898, 1.5362999439239502, 1.4843000173568726, 1.482699990272522, 1.4819999933242798, 1.4817999601364136, 1.4817999601364136, 1.4816999435424805, 1.4814000129699707, 1.4812999963760376, 1.4809999465942383, 1.4807000160217285, 1.4805999994277954, 1.4804999828338623, 1.4797999858856201, 1.4793000221252441, 1.4766000509262085, 1.4253000020980835, 1.3939000368118286, 1.393399953842163, 1.3884999752044678, 1.3870999813079834, 1.3859000205993652, 1.385699987411499, 1.3848999738693237, 1.3844000101089478, 1.3841999769210815, 1.3837000131607056, 1.3834999799728394, 1.3823000192642212, 1.3294999599456787, 1.3245999813079834, 1.323199987411499, 1.173699975013733, 1.1133999824523926, 1.2389999628067017, 1.2345999479293823, 1.173699975013733, 0.9950000047683716, 1.100000023841858, 0.9858999848365784, 0.9380999803543091, 0.9812999963760376, 0.10859999805688858, 0.911300003528595, 1.020799994468689, 0.9513000249862671, 1.1887999773025513, 0.9818999767303467, 1.1722999811172485, 0.38929998874664307, 1.162500023841858, 1.0842000246047974, 0.37049999833106995, 0.8912000060081482, 0.4912000000476837, 0.1597999930381775, 0.7882999777793884, -0.10320000350475311, 0.6970000267028809, -0.5658000111579895, 0.3939000070095062, 0.4794999957084656, 0.2678000032901764, 0.22419999539852142]}, \"token.table\": {\"Topic\": [2, 4, 1, 4, 4, 1, 3, 2, 1, 2, 3, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 1, 2, 3, 3, 3, 4, 3, 4, 2, 3, 4, 2, 3, 1, 2, 4, 2, 4, 3, 4, 1, 2, 3, 4, 1, 2, 1, 3, 4, 2, 2, 4, 1, 2, 1, 3, 2, 3, 4, 4, 3, 4, 1, 3, 1, 2, 3, 4, 2, 2, 3, 4, 1, 3, 1, 2, 3, 4, 4, 2, 3, 4, 3, 4, 4, 1, 2, 3, 4, 1, 2, 4, 3, 1, 2, 4, 1, 3, 1, 2, 3, 4, 1, 2, 3, 4, 2, 4, 1, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 2, 3, 1, 2, 3, 3, 3, 4, 3, 1, 3, 1, 2, 3, 4, 4, 1, 4, 3, 1, 2, 3, 4, 1, 2, 2, 3, 4, 2, 2, 4, 1, 2, 3, 4, 2, 1, 1, 1, 2, 3, 4, 2, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 1, 4, 3, 1, 2, 3, 1, 2, 3, 4, 1, 3, 4, 2, 4, 3, 4, 1, 1, 2, 1, 2, 3, 4, 1, 3, 4, 1, 2, 3, 2, 1, 1, 2, 4, 3, 3, 2, 1, 2, 1, 2, 3, 4, 3, 1, 2, 3, 4, 3, 1, 3, 1, 2, 3, 4, 3, 1, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 2, 3, 4, 1, 3, 2, 1, 2, 3, 4, 2, 1, 2, 3, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 4, 1, 2, 3, 4, 2, 4, 1, 2, 4, 1, 2, 3, 1, 2, 3, 4, 1, 2, 3, 4, 1, 3, 4, 1, 2, 4, 1, 2, 3, 4, 2, 4, 2, 3, 1, 2, 3, 4, 1, 2, 3, 4, 4, 1, 2, 3, 4, 1, 2, 4, 1, 3, 1, 1, 3, 3, 1, 2, 3, 4, 4, 2, 2, 3, 1, 1, 4, 1, 2, 3, 4, 1, 2, 4, 2, 1, 2, 3, 4, 1, 3, 1, 2, 1, 3, 2, 3, 4, 1, 2, 4, 2, 1, 2, 3, 4, 1, 2, 4, 1, 2, 3, 4, 1, 1, 2, 3, 1, 3, 4, 2, 4, 2, 4, 1, 3, 2, 1, 2, 4, 2, 3, 4, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 2, 4, 2, 4, 1, 1, 2, 3, 4, 4, 3, 1, 2, 3, 3, 2, 3, 4, 4, 1, 2, 3, 4, 1, 2, 3, 1, 3, 2, 3, 2, 3, 1, 3, 1, 2, 3, 4, 4, 4, 1, 2, 3, 4], \"Freq\": [0.7329301238059998, 0.18323253095149994, 0.40387988090515137, 0.605819821357727, 0.7296995520591736, 0.6451089978218079, 0.9534027576446533, 0.9420852661132812, 0.15789289772510529, 0.15789289772510529, 0.6315715909004211, 0.27535784244537354, 0.2581479847431183, 0.2581479847431183, 0.1893085092306137, 0.09763097763061523, 0.19526195526123047, 0.6834168434143066, 0.09763097763061523, 0.19714878499507904, 0.328581303358078, 0.19714878499507904, 0.19714878499507904, 0.773171067237854, 0.15708108246326447, 0.6283243298530579, 0.15708108246326447, 0.9533790349960327, 0.3800698518753052, 0.5067598223686218, 0.8172047734260559, 0.1167435422539711, 0.4480544626712799, 0.4480544626712799, 0.07467573881149292, 0.21051126718521118, 0.6315338015556335, 0.6468257904052734, 0.25873032212257385, 0.12936516106128693, 0.6465417742729187, 0.2155139297246933, 0.8494213819503784, 0.7295581102371216, 0.14794732630252838, 0.3945262134075165, 0.3452104330062866, 0.09863155335187912, 0.6443579196929932, 0.7515027523040771, 0.10549202561378479, 0.42196810245513916, 0.42196810245513916, 0.9425055384635925, 0.430263489484787, 0.5916122794151306, 0.20955249667167664, 0.6286575198173523, 0.1811659187078476, 0.7246636748313904, 0.5510985255241394, 0.3936418294906616, 0.07872836291790009, 0.480106383562088, 0.8502002358436584, 0.48027676343917847, 0.773451030254364, 0.8505921959877014, 0.11117415130138397, 0.11117415130138397, 0.4446966052055359, 0.3335224390029907, 0.7544262409210205, 0.9353495836257935, 0.8506708145141602, 0.7296273708343506, 0.6459042429924011, 0.952106773853302, 0.25053462386131287, 0.18790097534656525, 0.3758019506931305, 0.25053462386131287, 0.7294887900352478, 0.6395036578178406, 0.15987591445446014, 0.15987591445446014, 0.4012249708175659, 0.6018374562263489, 0.47996991872787476, 0.18372532725334167, 0.5511759519577026, 0.18372532725334167, 0.18372532725334167, 0.24858687818050385, 0.37288030982017517, 0.37288030982017517, 0.8502405285835266, 0.6647648215293884, 0.11079414188861847, 0.22158828377723694, 0.9143863916397095, 0.1828772872686386, 0.14146317541599274, 0.14146317541599274, 0.14146317541599274, 0.565852701663971, 0.4560565650463104, 0.3192395865917206, 0.13681696355342865, 0.09121131151914597, 0.5902833938598633, 0.29514169692993164, 0.3492460548877716, 0.1746230274438858, 0.5238690972328186, 0.094355508685112, 0.1415332704782486, 0.5189552903175354, 0.2358887791633606, 0.1349574625492096, 0.3373936414718628, 0.4048723876476288, 0.1349574625492096, 0.8414404988288879, 0.761152446269989, 0.22854779660701752, 0.6856433749198914, 0.11427389830350876, 0.7607545256614685, 0.8493108153343201, 0.7294747233390808, 0.8506609201431274, 0.49335503578186035, 0.4228757321834564, 0.12839487195014954, 0.2567897439002991, 0.5135794878005981, 0.12839487195014954, 0.4802119731903076, 0.28923913836479187, 0.7230978608131409, 0.8500537872314453, 0.3318370282649994, 0.18962116539478302, 0.18962116539478302, 0.23702645301818848, 0.9650733470916748, 0.7539532780647278, 0.6260843873023987, 0.31304219365119934, 0.48013171553611755, 0.7541128396987915, 0.751503586769104, 0.9291263818740845, 0.13796506822109222, 0.20694759488105774, 0.20694759488105774, 0.4828777313232422, 0.9420835971832275, 0.9662221670150757, 0.8959456086158752, 0.13058999180793762, 0.32647499442100525, 0.06529499590396881, 0.45706498622894287, 0.9420890212059021, 0.20006147027015686, 0.20006147027015686, 0.600184440612793, 0.1808590590953827, 0.42200449109077454, 0.12057270854711533, 0.3014317750930786, 0.6362444162368774, 0.254497766494751, 0.1272488832473755, 0.2390456199645996, 0.7171368598937988, 0.9534348249435425, 0.14033901691436768, 0.14033901691436768, 0.7016950845718384, 0.778515636920929, 0.06487630307674408, 0.06487630307674408, 0.12975260615348816, 0.14627505838871002, 0.5851002335548401, 0.29255011677742004, 0.7521028518676758, 0.4800587594509125, 0.8496436476707458, 0.4800955653190613, 0.7714671492576599, 0.964867353439331, 0.9451335072517395, 0.32132333517074585, 0.32132333517074585, 0.27542001008987427, 0.09180666506290436, 0.8207486867904663, 0.06839572638273239, 0.13679145276546478, 0.6452297568321228, 0.841441810131073, 0.6353226900100708, 0.7517154812812805, 0.9639646410942078, 0.8583406805992126, 0.2376812994480133, 0.7130439281463623, 0.6351193189620972, 0.6360804438591003, 0.7515038847923279, 0.6452180743217468, 0.9420779347419739, 0.1598481982946396, 0.39962050318717957, 0.3196963965892792, 0.0799240991473198, 0.9536165595054626, 0.646686851978302, 0.10778114199638367, 0.10778114199638367, 0.10778114199638367, 0.8492918610572815, 0.5457756519317627, 0.3638504147529602, 0.5199437141418457, 0.25997185707092285, 0.06499296426773071, 0.12998592853546143, 0.9530118703842163, 0.7738965749740601, 0.6365567445755005, 0.7296016216278076, 0.2922278344631195, 0.11689113080501556, 0.5260100960731506, 0.11689113080501556, 0.33987849950790405, 0.25490888953208923, 0.33987849950790405, 0.04248481243848801, 0.4119272828102112, 0.13730908930301666, 0.4119272828102112, 0.2116335779428482, 0.6349007487297058, 0.8414401412010193, 0.18080416321754456, 0.18080416321754456, 0.7232166528701782, 0.7296090126037598, 0.9420855045318604, 0.6810443997383118, 0.08513054996728897, 0.17026109993457794, 0.7422377467155457, 0.06185314804315567, 0.06185314804315567, 0.12370629608631134, 0.2542228698730469, 0.5084457397460938, 0.2542228698730469, 0.08474095910787582, 0.1686425656080246, 0.3372851312160492, 0.2529638707637787, 0.21080321073532104, 0.7451111078262329, 0.14902222156524658, 0.04967407509684563, 0.09934815019369125, 0.6862227916717529, 0.17155569791793823, 0.08577784895896912, 0.08577784895896912, 0.7716988921165466, 0.72954261302948, 0.15606680512428284, 0.15606680512428284, 0.15606680512428284, 0.6242672204971313, 0.6448586583137512, 0.21495288610458374, 0.33954086899757385, 0.33954086899757385, 0.33954086899757385, 0.5919339656829834, 0.25368598103523254, 0.16912399232387543, 0.3542118966579437, 0.40481358766555786, 0.20240679383277893, 0.05060169845819473, 0.23035019636154175, 0.15356680750846863, 0.15356680750846863, 0.4607003927230835, 0.19918625056743622, 0.6971518993377686, 0.09959312528371811, 0.17688106000423431, 0.17688106000423431, 0.5306431651115417, 0.34569576382637024, 0.11523191630840302, 0.11523191630840302, 0.46092766523361206, 0.237723708152771, 0.713171124458313, 0.21049252152442932, 0.6314775943756104, 0.07146985083818436, 0.25014448165893555, 0.1429397016763687, 0.5360239148139954, 0.33322253823280334, 0.2499168962240219, 0.08330563455820084, 0.2499168962240219, 0.4803641140460968, 0.2815872132778168, 0.35198402404785156, 0.2815872132778168, 0.0703968033194542, 0.730462908744812, 0.182615727186203, 0.8823993802070618, 0.7717266082763672, 0.635309636592865, 0.7729652523994446, 0.6455063819885254, 0.761120080947876, 0.8503626585006714, 0.12035001814365387, 0.12035001814365387, 0.4814000725746155, 0.24070003628730774, 0.7294008731842041, 0.7519614100456238, 0.9437949657440186, 0.6351492404937744, 0.8563976883888245, 0.7701326012611389, 0.7295913696289062, 0.5211824774742126, 0.2316366732120514, 0.17372749745845795, 0.05790916830301285, 0.6032465696334839, 0.20108219981193542, 0.20108219981193542, 0.9420797824859619, 0.12467524409294128, 0.37402573227882385, 0.12467524409294128, 0.49870097637176514, 0.8003908395767212, 0.16007816791534424, 0.764270007610321, 0.2547566592693329, 0.7320305705070496, 0.1830076426267624, 0.5301911234855652, 0.31811466813087463, 0.10603822022676468, 0.11116661876440048, 0.555833101272583, 0.33349984884262085, 0.9420816898345947, 0.38336437940597534, 0.3066914975643158, 0.07667287439107895, 0.1533457487821579, 0.9645141959190369, 0.751500129699707, 0.7290629744529724, 0.06300413608551025, 0.3780248463153839, 0.504033088684082, 0.06300413608551025, 0.772933840751648, 0.11449026316404343, 0.3434707820415497, 0.5724512934684753, 0.644530177116394, 0.9529876708984375, 0.4806939363479614, 0.9420843720436096, 0.7294682264328003, 0.18068410456180573, 0.7227364182472229, 0.7700960636138916, 0.7607694864273071, 0.751503050327301, 0.8558275103569031, 0.795778214931488, 0.15915563702583313, 0.10716935247182846, 0.7501854300498962, 0.10716935247182846, 0.7293437719345093, 0.422276109457016, 0.105569027364254, 0.3589347004890442, 0.105569027364254, 0.11565504968166351, 0.23131009936332703, 0.5782752633094788, 0.11565504968166351, 0.4205486476421356, 0.4205486476421356, 0.08410973101854324, 0.8486739993095398, 0.14144566655158997, 0.7757354974746704, 0.12928923964500427, 0.9167220592498779, 0.12890411913394928, 0.6122945547103882, 0.12890411913394928, 0.1611301600933075, 0.7295221090316772, 0.8492449522018433, 0.11442475765943527, 0.22884951531887054, 0.5721237659454346, 0.953586995601654, 0.5153307318687439, 0.10306614637374878, 0.30919843912124634, 0.4800480902194977, 0.2771978974342346, 0.1385989487171173, 0.1385989487171173, 0.5543957948684692, 0.10479692369699478, 0.31439077854156494, 0.5239846110343933, 0.6453500986099243, 0.9252829551696777, 0.21052449941635132, 0.631573498249054, 0.894806444644928, 0.17896129190921783, 0.3173874020576477, 0.6347748041152954, 0.2205498069524765, 0.2940664291381836, 0.2205498069524765, 0.2940664291381836, 0.7298639416694641, 0.48022887110710144, 0.40302953124046326, 0.26868635416030884, 0.26868635416030884, 0.06717158854007721], \"Term\": [\"access\", \"access\", \"ach\", \"ach\", \"active\", \"address\", \"agency\", \"airambulance\", \"airborne\", \"airborne\", \"airborne\", \"aircraft\", \"aircraft\", \"aircraft\", \"aircraft\", \"allow\", \"allow\", \"allow\", \"allow\", \"already\", \"already\", \"already\", \"already\", \"annual\", \"anti\", \"anti\", \"anti\", \"armed\", \"assemble\", \"assemble\", \"assembly\", \"assembly\", \"autonomous\", \"autonomous\", \"autonomous\", \"autopilot\", \"autopilot\", \"available\", \"available\", \"available\", \"avionic\", \"avionic\", \"axis\", \"baggage\", \"base\", \"base\", \"base\", \"base\", \"become\", \"behaviour\", \"blade\", \"blade\", \"blade\", \"buy\", \"cabin\", \"cabin\", \"campaign\", \"campaign\", \"capacity\", \"capacity\", \"carry\", \"carry\", \"carry\", \"ceiling\", \"cellular\", \"centrifugal\", \"challenge\", \"channel\", \"civil\", \"civil\", \"civil\", \"civil\", \"client\", \"cold\", \"collect\", \"coming\", \"committee\", \"communication\", \"company\", \"company\", \"company\", \"company\", \"compartment\", \"complete\", \"complete\", \"complete\", \"composite\", \"composite\", \"compressor\", \"condition\", \"condition\", \"condition\", \"condition\", \"configure\", \"configure\", \"configure\", \"connect\", \"continue\", \"continue\", \"continue\", \"contract\", \"contract\", \"cruise\", \"cruise\", \"cruise\", \"cruise\", \"customer\", \"customer\", \"customer\", \"customer\", \"degree\", \"degree\", \"deliver\", \"deliver\", \"deliver\", \"design\", \"design\", \"design\", \"design\", \"develop\", \"develop\", \"develop\", \"develop\", \"device\", \"digital\", \"display\", \"display\", \"display\", \"distribute\", \"donauw\", \"double\", \"downlink\", \"drone\", \"drone\", \"early\", \"early\", \"early\", \"early\", \"embed\", \"end\", \"end\", \"enforcement\", \"engine\", \"engine\", \"engine\", \"engine\", \"enhancement\", \"ensure\", \"equipment\", \"equipment\", \"estimate\", \"eurotec\", \"exceptionally\", \"executive\", \"expect\", \"expect\", \"expect\", \"expect\", \"extremely\", \"fact\", \"fastfin\", \"feature\", \"feature\", \"feature\", \"feature\", \"finland\", \"flat\", \"flat\", \"flat\", \"fly\", \"fly\", \"fly\", \"fly\", \"focus\", \"focus\", \"focus\", \"foot\", \"foot\", \"force\", \"french\", \"french\", \"french\", \"gas\", \"gas\", \"gas\", \"gas\", \"give\", \"give\", \"give\", \"global\", \"guide\", \"helicoptere\", \"horsepower\", \"however\", \"identify\", \"inch\", \"include\", \"include\", \"include\", \"include\", \"increase\", \"increase\", \"increase\", \"initiative\", \"inroad\", \"intelligence\", \"intend\", \"investment\", \"issue\", \"join\", \"join\", \"jointly\", \"keep\", \"lapland\", \"legislative\", \"lengthy\", \"light\", \"light\", \"light\", \"light\", \"local\", \"look\", \"look\", \"look\", \"look\", \"mainly\", \"manufacturer\", \"manufacturer\", \"market\", \"market\", \"market\", \"market\", \"mcas\", \"member\", \"methodology\", \"mile\", \"military\", \"military\", \"military\", \"military\", \"mission\", \"mission\", \"mission\", \"mission\", \"model\", \"model\", \"model\", \"much\", \"much\", \"multifunctional\", \"multiple\", \"multiple\", \"multiple\", \"nautical\", \"northern\", \"number\", \"number\", \"number\", \"oil\", \"oil\", \"oil\", \"oil\", \"operate\", \"operate\", \"operate\", \"operate\", \"operation\", \"operation\", \"operation\", \"operation\", \"operator\", \"operator\", \"operator\", \"operator\", \"order\", \"order\", \"order\", \"order\", \"output\", \"oversize\", \"passenger\", \"passenger\", \"passenger\", \"passenger\", \"patient\", \"patient\", \"percent\", \"percent\", \"percent\", \"performance\", \"performance\", \"performance\", \"pilot\", \"pilot\", \"pilot\", \"pilot\", \"plan\", \"plan\", \"plan\", \"plan\", \"platform\", \"platform\", \"platform\", \"pound\", \"pound\", \"pound\", \"power\", \"power\", \"power\", \"power\", \"pre\", \"pre\", \"problem\", \"problem\", \"production\", \"production\", \"production\", \"production\", \"program\", \"program\", \"program\", \"program\", \"propel\", \"prototype\", \"prototype\", \"prototype\", \"prototype\", \"push\", \"push\", \"racer\", \"ramp\", \"ready\", \"really\", \"reauthorization\", \"receiver\", \"reconstruct\", \"reduce\", \"reduce\", \"reduce\", \"reduce\", \"refine\", \"region\", \"rely\", \"remote\", \"return\", \"reveal\", \"ride\", \"safety\", \"safety\", \"safety\", \"safety\", \"sale\", \"sale\", \"sale\", \"scandinavian\", \"seat\", \"seat\", \"seat\", \"seat\", \"sector\", \"sector\", \"segment\", \"segment\", \"sell\", \"sell\", \"sensor\", \"sensor\", \"sensor\", \"serial\", \"serial\", \"serial\", \"series\", \"service\", \"service\", \"service\", \"service\", \"session\", \"setz\", \"shaft\", \"ship\", \"ship\", \"ship\", \"ship\", \"shortage\", \"site\", \"site\", \"site\", \"situation\", \"situational\", \"slate\", \"slide\", \"smooth\", \"speed\", \"speed\", \"stability\", \"stream\", \"stretcher\", \"study\", \"successfully\", \"successfully\", \"surveillance\", \"surveillance\", \"surveillance\", \"sweep\", \"system\", \"system\", \"system\", \"system\", \"tactical\", \"tactical\", \"tactical\", \"tactical\", \"target\", \"target\", \"target\", \"team\", \"team\", \"temperature\", \"temperature\", \"term\", \"test\", \"test\", \"test\", \"test\", \"tracking\", \"transmission\", \"trial\", \"trial\", \"trial\", \"tsm\", \"utility\", \"utility\", \"utility\", \"vane\", \"variety\", \"variety\", \"variety\", \"variety\", \"vehicle\", \"vehicle\", \"vehicle\", \"venue\", \"video\", \"view\", \"view\", \"warfare\", \"warfare\", \"way\", \"way\", \"well\", \"well\", \"well\", \"well\", \"window\", \"wing\", \"work\", \"work\", \"work\", \"work\"]}, \"R\": 30, \"lambda.step\": 0.01, \"plot.opts\": {\"xlab\": \"PC1\", \"ylab\": \"PC2\"}, \"topic.order\": [2, 1, 3, 4]};\n",
       "\n",
       "function LDAvis_load_lib(url, callback){\n",
       "  var s = document.createElement('script');\n",
       "  s.src = url;\n",
       "  s.async = true;\n",
       "  s.onreadystatechange = s.onload = callback;\n",
       "  s.onerror = function(){console.warn(\"failed to load library \" + url);};\n",
       "  document.getElementsByTagName(\"head\")[0].appendChild(s);\n",
       "}\n",
       "\n",
       "if(typeof(LDAvis) !== \"undefined\"){\n",
       "   // already loaded: just create the visualization\n",
       "   !function(LDAvis){\n",
       "       new LDAvis(\"#\" + \"ldavis_el222101123221456168575545903\", ldavis_el222101123221456168575545903_data);\n",
       "   }(LDAvis);\n",
       "}else if(typeof define === \"function\" && define.amd){\n",
       "   // require.js is available: use it to load d3/LDAvis\n",
       "   require.config({paths: {d3: \"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min\"}});\n",
       "   require([\"d3\"], function(d3){\n",
       "      window.d3 = d3;\n",
       "      LDAvis_load_lib(\"https://cdn.rawgit.com/bmabey/pyLDAvis/files/ldavis.v1.0.0.js\", function(){\n",
       "        new LDAvis(\"#\" + \"ldavis_el222101123221456168575545903\", ldavis_el222101123221456168575545903_data);\n",
       "      });\n",
       "    });\n",
       "}else{\n",
       "    // require.js not available: dynamically load d3 & LDAvis\n",
       "    LDAvis_load_lib(\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\", function(){\n",
       "         LDAvis_load_lib(\"https://cdn.rawgit.com/bmabey/pyLDAvis/files/ldavis.v1.0.0.js\", function(){\n",
       "                 new LDAvis(\"#\" + \"ldavis_el222101123221456168575545903\", ldavis_el222101123221456168575545903_data);\n",
       "            })\n",
       "         });\n",
       "}\n",
       "</script>"
      ],
      "text/plain": [
       "PreparedData(topic_coordinates=              x         y  topics  cluster       Freq\n",
       "topic                                                \n",
       "1     -0.131135  0.021933       1        1  28.536739\n",
       "0      0.077865  0.016588       2        1  28.353045\n",
       "2      0.012018 -0.108565       3        1  25.526445\n",
       "3      0.041252  0.070044       4        1  17.583767, topic_info=            Term       Freq      Total Category  logprob  loglift\n",
       "168        cabin  18.000000  18.000000  Default  30.0000  30.0000\n",
       "105   production  27.000000  27.000000  Default  29.0000  29.0000\n",
       "1436       video  11.000000  11.000000  Default  28.0000  28.0000\n",
       "66      increase  14.000000  14.000000  Default  27.0000  27.0000\n",
       "93      operator  20.000000  20.000000  Default  26.0000  26.0000\n",
       "...          ...        ...        ...      ...      ...      ...\n",
       "290       system   4.729548  47.362377   Topic4  -5.1966  -0.5658\n",
       "301         well   3.546622  13.602369   Topic4  -5.4844   0.3939\n",
       "263      program   3.409329  12.003990   Topic4  -5.5239   0.4795\n",
       "9        already   3.497413  15.216934   Topic4  -5.4984   0.2678\n",
       "173      company   3.512838  15.965857   Topic4  -5.4940   0.2242\n",
       "\n",
       "[290 rows x 6 columns], token_table=      Topic      Freq    Term\n",
       "term                         \n",
       "147       2  0.732930  access\n",
       "147       4  0.183233  access\n",
       "148       1  0.403880     ach\n",
       "148       4  0.605820     ach\n",
       "149       4  0.729700  active\n",
       "...     ...       ...     ...\n",
       "1186      4  0.480229    wing\n",
       "143       1  0.403030    work\n",
       "143       2  0.268686    work\n",
       "143       3  0.268686    work\n",
       "143       4  0.067172    work\n",
       "\n",
       "[459 rows x 3 columns], R=30, lambda_step=0.01, plot_opts={'xlab': 'PC1', 'ylab': 'PC2'}, topic_order=[2, 1, 3, 4])"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pyLDAvis.gensim\n",
    "pyLDAvis.enable_notebook(local=False)\n",
    "vis = pyLDAvis.gensim.prepare(lda_model, corpus, dictionary=lda_model.id2word)\n",
    "vis "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Modelling with the Optimal number of topic"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create Dictionary\n",
    "id2word = corpora.Dictionary(data_ready)\n",
    "\n",
    "# Create Corpus: Term Document Frequency\n",
    "corpus = [id2word.doc2bow(text) for text in data_ready]\n",
    "\n",
    "# Build LDA model\n",
    "lda_model = gensim.models.ldamodel.LdaModel(corpus=corpus, id2word=id2word, \n",
    "                                            alpha='symmetric', num_topics=9, \n",
    "                                            random_state=42, chunksize=100, \n",
    "                                            passes=5, iterations=1000, \n",
    "                                            per_word_topics=True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.rawgit.com/bmabey/pyLDAvis/files/ldavis.v1.0.0.css\">\n",
       "\n",
       "\n",
       "<div id=\"ldavis_el222101123231324964536311571\"></div>\n",
       "<script type=\"text/javascript\">\n",
       "\n",
       "var ldavis_el222101123231324964536311571_data = {\"mdsDat\": {\"x\": [-0.05675631755253976, -0.1272267437740147, 0.10741889243278359, -0.16699241994273636, 0.04489595094905378, 0.07335530216101487, 0.08343889641742772, 0.04449851495183178, -0.002632075642821259], \"y\": [0.12971170206336427, -0.09244103026953852, -0.08952282193314813, -0.0006401057625915835, 0.07824485483529281, -0.035957019577898625, 0.07748504180536488, -0.051049721209691305, -0.015830899951153984], \"topics\": [1, 2, 3, 4, 5, 6, 7, 8, 9], \"cluster\": [1, 1, 1, 1, 1, 1, 1, 1, 1], \"Freq\": [19.54868507385254, 19.22663688659668, 15.521889686584473, 14.480228424072266, 13.300121307373047, 7.619548797607422, 5.520299434661865, 4.716926574707031, 0.06566402316093445]}, \"tinfo\": {\"Term\": [\"system\", \"cabin\", \"video\", \"increase\", \"production\", \"customer\", \"drone\", \"military\", \"fastfin\", \"base\", \"performance\", \"test\", \"demonstrator\", \"gas\", \"autonomous\", \"safety\", \"prototype\", \"ship\", \"percent\", \"assembly\", \"operator\", \"pilot\", \"oil\", \"surveillance\", \"sensor\", \"develop\", \"carry\", \"plan\", \"executive\", \"requirement\", \"cold\", \"behaviour\", \"lapland\", \"eurotec\", \"client\", \"stretcher\", \"setz\", \"exceptionally\", \"inch\", \"lengthy\", \"extremely\", \"scandinavian\", \"northern\", \"airambulance\", \"series\", \"slide\", \"team\", \"finland\", \"overall\", \"captain\", \"opening\", \"difference\", \"productive\", \"rovaniemi\", \"procedure\", \"stay\", \"suitable\", \"happy\", \"freezing\", \"access\", \"temperature\", \"successfully\", \"display\", \"avionic\", \"test\", \"campaign\", \"equipment\", \"patient\", \"solution\", \"maiden\", \"dispatch\", \"serial\", \"pilot\", \"operation\", \"fly\", \"cabin\", \"customer\", \"condition\", \"aircraft\", \"include\", \"place\", \"feature\", \"perform\", \"production\", \"carry\", \"autonomous\", \"develop\", \"work\", \"well\", \"prototype\", \"market\", \"base\", \"operate\", \"assembly\", \"impact\", \"final\", \"ramp\", \"output\", \"however\", \"buy\", \"deal\", \"close\", \"catch\", \"short\", \"manufacture\", \"difficult\", \"methodology\", \"mcas\", \"gas\", \"fms\", \"sole\", \"indicate\", \"previously\", \"notice\", \"sell\", \"weakness\", \"calm\", \"boom\", \"growth\", \"airframer\", \"probably\", \"believe\", \"caution\", \"oil\", \"sale\", \"look\", \"produce\", \"regard\", \"manufacturer\", \"big\", \"problem\", \"way\", \"sector\", \"segment\", \"aircraft\", \"safran\", \"market\", \"specific\", \"already\", \"military\", \"operator\", \"production\", \"order\", \"work\", \"target\", \"include\", \"engine\", \"plan\", \"certification\", \"begin\", \"able\", \"next\", \"design\", \"test\", \"session\", \"study\", \"project\", \"issue\", \"risk\", \"principal\", \"drone\", \"shortage\", \"challenge\", \"annual\", \"member\", \"legislative\", \"initiative\", \"address\", \"venue\", \"reauthorization\", \"committee\", \"contract\", \"subcontractor\", \"responsible\", \"thale\", \"award\", \"consortium\", \"input\", \"propose\", \"opportunity\", \"note\", \"exhibitor\", \"heritage\", \"crowd\", \"industry\", \"vessel\", \"integration\", \"system\", \"category\", \"measure\", \"number\", \"safety\", \"operator\", \"french\", \"naval\", \"technology\", \"program\", \"size\", \"noise\", \"single\", \"pilot\", \"mission\", \"design\", \"operation\", \"work\", \"aircraft\", \"company\", \"executive\", \"racer\", \"window\", \"double\", \"active\", \"oversize\", \"baggage\", \"tracking\", \"compartment\", \"coming\", \"ride\", \"sweep\", \"refine\", \"smooth\", \"shaft\", \"speed\", \"propel\", \"slate\", \"centrifugal\", \"ceiling\", \"estimate\", \"arranos\", \"compressor\", \"guide\", \"horsepower\", \"anticipate\", \"vane\", \"embed\", \"wing\", \"hoist\", \"foot\", \"cabin\", \"pound\", \"cruise\", \"production\", \"expect\", \"family\", \"assemble\", \"passenger\", \"incorporate\", \"ach\", \"particularly\", \"composite\", \"flat\", \"feature\", \"plan\", \"blade\", \"end\", \"model\", \"seat\", \"fly\", \"configure\", \"aircraft\", \"percent\", \"power\", \"design\", \"engine\", \"utility\", \"test\", \"operation\", \"well\", \"floor\", \"company\", \"delivery\", \"warfare\", \"reveal\", \"maritime\", \"often\", \"activity\", \"submarine\", \"anti\", \"sensor\", \"extra\", \"acquisition\", \"amgh\", \"advantage\", \"identification\", \"hostile\", \"contact\", \"threat\", \"integral\", \"survivor\", \"shore\", \"less\", \"ability\", \"original\", \"paving\", \"timeline\", \"debut\", \"yesterday\", \"previous\", \"multi\", \"demo\", \"redundancy\", \"pleased\", \"babcock\", \"land\", \"navy\", \"prototype\", \"ship\", \"intelligence\", \"sea\", \"search\", \"security\", \"asset\", \"carry\", \"extend\", \"order\", \"target\", \"mission\", \"performance\", \"aircraft\", \"tactical\", \"base\", \"quality\", \"provide\", \"long\", \"range\", \"capability\", \"operate\", \"system\", \"company\", \"start\", \"operation\", \"service\", \"customer\", \"engine\", \"video\", \"distribute\", \"receiver\", \"communication\", \"situational\", \"agency\", \"tsm\", \"local\", \"transmission\", \"enforcement\", \"cellular\", \"connect\", \"reconstruct\", \"downlink\", \"collect\", \"reliable\", \"law\", \"command\", \"view\", \"network\", \"stream\", \"capture\", \"statement\", \"amphibious\", \"bearingless\", \"diameter\", \"equivalent\", \"mistral\", \"acoustic\", \"confine\", \"airborne\", \"remote\", \"manage\", \"surveillance\", \"awareness\", \"receive\", \"transport\", \"management\", \"platform\", \"system\", \"critical\", \"allow\", \"single\", \"develop\", \"design\", \"aircraft\", \"company\", \"base\", \"operation\", \"include\", \"ship\", \"secure\", \"engine\", \"pattern\", \"locate\", \"regulatory\", \"fine\", \"corvette\", \"tune\", \"monitored\", \"compliance\", \"execute\", \"exercise\", \"istre\", \"french_navy\", \"airbase\", \"earth\", \"stand\", \"certified\", \"intended\", \"consist\", \"accelerate\", \"purpose\", \"initially\", \"preserve\", \"operational\", \"mode\", \"demonstrator\", \"meet\", \"autonomously\", \"necessary\", \"fully\", \"modify\", \"land\", \"military\", \"base\", \"station\", \"autonomous\", \"critical\", \"standard\", \"man\", \"automatic\", \"requirement\", \"system\", \"develop\", \"variety\", \"tactical\", \"ground\", \"surveillance\", \"capability\", \"pilot\", \"design\", \"aircraft\", \"mission\", \"already\", \"roll\", \"fastfin\", \"stability\", \"investment\", \"margin\", \"factory\", \"world\", \"experience\", \"setting\", \"positive\", \"satisfied\", \"challenging\", \"recognition\", \"pedal\", \"brainerd\", \"satisfy\", \"generator\", \"country\", \"payback\", \"torque\", \"innovate\", \"tailboom\", \"promote\", \"enhance\", \"fin\", \"continually\", \"precision\", \"aerospace\", \"job\", \"crosswind\", \"effectiveness\", \"increase\", \"return\", \"hot\", \"performance\", \"system\", \"instal\", \"customer\", \"useful\", \"workload\", \"advanced\", \"improve\", \"operating\", \"benefit\", \"installation\", \"continue\", \"percent\", \"hover\", \"improvement\", \"safety\", \"demand\", \"datum\", \"load\", \"pilot\", \"operator\", \"mission\", \"additional\", \"condition\", \"aircraft\", \"ownership\", \"collective\", \"european\", \"availability\", \"please\", \"win\", \"hcare\", \"premium\", \"setting\", \"positive\", \"satisfied\", \"challenging\", \"recognition\", \"pedal\", \"brainerd\", \"satisfy\", \"generator\", \"country\", \"payback\", \"torque\", \"innovate\", \"tailboom\", \"promote\", \"enhance\", \"fin\", \"continually\", \"precision\", \"aerospace\", \"job\", \"crosswind\", \"director\", \"helipad\", \"vane\", \"ample\", \"horsepower\", \"robust\", \"ach\", \"role\", \"ceiling\", \"particular\", \"eventual\", \"appeal\", \"particularly\", \"marketing\", \"cabin\", \"dual\", \"guide\", \"arranos\", \"artificial\", \"estimate\", \"angle\", \"generous\", \"cruise\", \"dispatch\", \"speed\", \"hem\", \"model\", \"pound\", \"feature\", \"engine\", \"quick\", \"production\", \"maximum\", \"plan\", \"executive\", \"flat\", \"design\", \"power\", \"assemble\", \"range\", \"well\", \"full\", \"blade\", \"configure\", \"passenger\", \"end\", \"aircraft\", \"percent\", \"utility\", \"fly\"], \"Freq\": [43.0, 21.0, 10.0, 13.0, 32.0, 21.0, 14.0, 16.0, 6.0, 19.0, 10.0, 33.0, 8.0, 16.0, 12.0, 16.0, 13.0, 15.0, 9.0, 9.0, 21.0, 19.0, 17.0, 8.0, 9.0, 14.0, 12.0, 14.0, 6.0, 11.0, 6.020488739013672, 3.5015673637390137, 3.5015623569488525, 3.46588134765625, 3.460228443145752, 3.44368314743042, 3.437779664993286, 3.4061129093170166, 2.6232810020446777, 2.612025022506714, 2.609168291091919, 2.6081459522247314, 2.606776714324951, 2.606710195541382, 2.604825973510742, 2.6024539470672607, 6.00956916809082, 2.466470241546631, 1.798040509223938, 1.7980362176895142, 1.7980350255966187, 1.7980328798294067, 1.798034429550171, 1.7980341911315918, 1.7980321645736694, 1.7980254888534546, 1.7980284690856934, 1.798027515411377, 1.798025369644165, 4.286087989807129, 6.0184550285339355, 4.310512065887451, 5.990406036376953, 3.4721362590789795, 19.519691467285156, 3.3834872245788574, 4.2978034019470215, 3.322211265563965, 3.4631876945495605, 3.5015692710876465, 3.448190450668335, 5.0982584953308105, 7.744382381439209, 8.481934547424316, 6.850578308105469, 7.613846302032471, 7.617791652679443, 5.157534122467041, 10.802714347839355, 6.727481842041016, 4.295792579650879, 5.097545146942139, 4.291375160217285, 5.978251934051514, 4.381594181060791, 4.353320121765137, 4.343865871429443, 4.3533244132995605, 4.268945217132568, 4.215193271636963, 4.266681671142578, 4.296832084655762, 3.523568630218506, 8.490370750427246, 4.319240093231201, 3.4891390800476074, 3.474777936935425, 3.4564929008483887, 3.451784133911133, 2.6701712608337402, 2.649049758911133, 2.642949342727661, 2.626248598098755, 2.620817184448242, 2.6195228099823, 2.6010589599609375, 2.603548765182495, 2.594592332839966, 12.668885231018066, 1.8118616342544556, 1.8118582963943481, 1.8118574619293213, 1.811854600906372, 1.8118493556976318, 4.312633514404297, 1.7905889749526978, 1.789830207824707, 1.7883752584457397, 1.7852959632873535, 1.782636046409607, 1.7825005054473877, 1.7822818756103516, 1.7818626165390015, 12.689208030700684, 7.690577983856201, 6.82567834854126, 3.437994956970215, 3.5030276775360107, 7.664120197296143, 3.47776198387146, 3.4424946308135986, 4.277105808258057, 4.291843414306641, 5.1513991355896, 22.152257919311523, 4.3299970626831055, 7.673757553100586, 4.313147068023682, 6.90526819229126, 6.839371681213379, 7.679005146026611, 9.506705284118652, 5.185062885284424, 5.98030424118042, 5.156864166259766, 6.8669610023498535, 6.1054368019104, 5.1943511962890625, 4.350043296813965, 4.3235764503479, 4.29475736618042, 4.295881748199463, 4.314225196838379, 4.395787715911865, 5.7754597663879395, 4.239116191864014, 4.2107930183410645, 4.149885654449463, 3.4185402393341064, 3.403169631958008, 12.408583641052246, 3.3310177326202393, 3.327558755874634, 3.3267714977264404, 3.3040411472320557, 2.5263707637786865, 2.5258471965789795, 2.5234787464141846, 2.514000415802002, 2.5048422813415527, 2.4931461811065674, 4.2642035484313965, 1.754838228225708, 1.7545499801635742, 1.753925085067749, 1.7493551969528198, 1.7493432760238647, 1.7481673955917358, 1.7198610305786133, 1.727320671081543, 1.7225743532180786, 1.7221590280532837, 1.718309998512268, 1.720712423324585, 5.00475549697876, 2.5509579181671143, 4.991795539855957, 14.411703109741211, 2.532010555267334, 2.533139944076538, 4.884542942047119, 5.921100616455078, 6.67196798324585, 3.3725905418395996, 3.3610808849334717, 4.174402236938477, 4.223187446594238, 3.3184072971343994, 3.328596353530884, 3.3263494968414307, 4.2734761238098145, 4.276724815368652, 4.033236503601074, 4.089244842529297, 3.3941595554351807, 3.3502633571624756, 3.323265790939331, 5.688925743103027, 3.2911252975463867, 2.508025884628296, 2.508437395095825, 2.5065956115722656, 2.5042386054992676, 2.5078718662261963, 2.507936477661133, 2.502403974533081, 2.5057458877563477, 2.499990701675415, 2.496478319168091, 2.4964640140533447, 2.497253894805908, 2.487889051437378, 4.845957279205322, 1.6926145553588867, 1.7063051462173462, 1.6914889812469482, 1.683090329170227, 1.6853374242782593, 1.6841351985931396, 1.6847022771835327, 1.6827301979064941, 1.6787627935409546, 1.6821268796920776, 1.6778225898742676, 1.6893444061279297, 1.6864113807678223, 1.6850506067276, 3.2999956607818604, 12.909478187561035, 4.090048789978027, 4.853115081787109, 15.450366973876953, 8.136157989501953, 2.516327142715454, 4.924496173858643, 4.108678817749023, 3.301926612854004, 3.282238245010376, 3.264976739883423, 3.326551675796509, 3.3035202026367188, 7.310665607452393, 6.539612770080566, 4.931306838989258, 4.119921684265137, 4.049481391906738, 4.109639644622803, 5.6982574462890625, 4.107224464416504, 9.85500431060791, 4.1066389083862305, 4.065133571624756, 5.74284029006958, 5.683674335479736, 4.110091209411621, 5.702237129211426, 5.024643898010254, 4.152644634246826, 3.326258659362793, 3.361729621887207, 3.32625675201416, 4.628905296325684, 3.185551643371582, 2.3852367401123047, 2.3849294185638428, 2.3681070804595947, 2.3575522899627686, 4.644031524658203, 6.929263114929199, 1.6357718706130981, 1.6357650756835938, 1.6357638835906982, 1.6206437349319458, 1.6099616289138794, 1.6094920635223389, 1.6065337657928467, 1.604225516319275, 1.5915215015411377, 2.4332242012023926, 2.4186649322509766, 2.3960659503936768, 2.411968231201172, 0.8608703017234802, 0.8608689904212952, 0.860867440700531, 0.8608675599098206, 0.860867440700531, 0.860867977142334, 0.8608671426773071, 0.8608672022819519, 0.8608667850494385, 0.8608666658401489, 2.728227376937866, 3.154371976852417, 2.3831539154052734, 7.1856608390808105, 7.7104387283325195, 1.6207256317138672, 2.379110813140869, 2.368271589279175, 1.6037611961364746, 3.129868984222412, 5.484442234039307, 3.109980344772339, 4.735321998596191, 4.63306188583374, 6.475000381469727, 3.8867900371551514, 9.769031524658203, 3.1452040672302246, 4.81746768951416, 2.367093801498413, 2.509403705596924, 3.409215211868286, 3.241859197616577, 3.216717004776001, 3.190941095352173, 3.1686015129089355, 2.619563102722168, 2.5091755390167236, 2.5952956676483154, 2.5273725986480713, 2.5403454303741455, 2.5105140209198, 9.313630104064941, 2.7265851497650146, 2.718128204345703, 2.075937032699585, 2.063528060913086, 2.0574512481689453, 2.0546481609344482, 2.05423903465271, 1.4110077619552612, 1.4016329050064087, 1.3998119831085205, 1.3993042707443237, 1.3978157043457031, 1.3941168785095215, 1.393965482711792, 1.3886572122573853, 1.388439655303955, 1.3778449296951294, 2.723253011703491, 2.067260980606079, 2.057732343673706, 2.067643165588379, 0.7492116093635559, 0.7492115497589111, 0.7492109537124634, 0.7492105960845947, 0.7492104172706604, 0.7492106556892395, 0.7492101788520813, 0.7492097020149231, 2.801417589187622, 1.3938806056976318, 1.3953205347061157, 3.3658297061920166, 1.3990702629089355, 3.366364002227783, 2.063565969467163, 1.4715403318405151, 2.881863594055176, 5.852143287658691, 2.0601322650909424, 2.2150442600250244, 2.056363821029663, 2.3467869758605957, 2.386901617050171, 2.9931912422180176, 2.186363458633423, 2.1406807899475098, 2.1971042156219482, 2.1216838359832764, 1.6843922138214111, 1.4790494441986084, 1.483643651008606, 1.9003777503967285, 1.9003779888153076, 3.1220901012420654, 1.2895293235778809, 1.2895281314849854, 1.2895276546478271, 1.2895262241363525, 1.2895256280899048, 1.2895257472991943, 1.2895228862762451, 1.2895206212997437, 0.6786735653877258, 0.6786732077598572, 0.6786727905273438, 0.6786709427833557, 0.6786706447601318, 0.6786705255508423, 0.6786696314811707, 0.6786686778068542, 0.6786676645278931, 1.2895280122756958, 1.2895270586013794, 1.2895346879959106, 1.2895253896713257, 3.7329440116882324, 2.5112128257751465, 2.511235237121582, 1.9003782272338867, 1.2895267009735107, 0.678666353225708, 1.9003808498382568, 4.381679058074951, 4.343804359436035, 1.900380253791809, 3.122076988220215, 1.9003970623016357, 1.9003822803497314, 1.9003702402114868, 1.900386929512024, 2.537529468536377, 5.5654616355896, 2.536015748977661, 1.900376796722412, 1.9003829956054688, 1.9003872871398926, 1.9003669023513794, 1.9003820419311523, 1.9003857374191284, 1.9003849029541016, 1.3684693574905396, 1.3135582208633423, 1.3087977170944214, 1.2895400524139404, 5.285054683685303, 2.3839128017425537, 1.8007129430770874, 1.226898431777954, 1.2216224670410156, 1.2171822786331177, 1.8159326314926147, 0.6511801481246948, 0.6507861614227295, 0.6493004560470581, 0.6492821574211121, 0.6490408182144165, 0.6481714844703674, 0.6480109691619873, 0.647982656955719, 0.6478899717330933, 0.6478410363197327, 0.6478057503700256, 0.6473483443260193, 0.6472200751304626, 0.6462477445602417, 0.6462042927742004, 0.6461619734764099, 0.64609295129776, 0.6460751891136169, 0.6459841728210449, 0.6459596157073975, 0.6459357738494873, 0.645622193813324, 0.6454530954360962, 5.899448871612549, 1.813284993171692, 1.2214454412460327, 3.5353617668151855, 9.309696197509766, 1.225709319114685, 4.145648956298828, 1.227306842803955, 1.2200736999511719, 1.2211899757385254, 1.215811014175415, 1.2201124429702759, 1.808194637298584, 1.2254152297973633, 1.7987537384033203, 1.7903841733932495, 1.2218364477157593, 1.224655270576477, 2.3649652004241943, 1.2234783172607422, 1.2152082920074463, 1.224441409111023, 1.7929326295852661, 1.7928948402404785, 1.7910774946212769, 1.2339820861816406, 1.22677481174469, 1.226155400276184, 0.002854230348020792, 0.0027752805035561323, 0.002640965860337019, 0.0026367392856627703, 0.002582862041890621, 0.0025805740151554346, 0.002578259678557515, 0.0025527148973196745, 0.0020775552839040756, 0.0020775555167347193, 0.0020775552839040756, 0.002077555051073432, 0.0020775552839040756, 0.0020775555167347193, 0.0020775555167347193, 0.002077555051073432, 0.0020775552839040756, 0.0020775552839040756, 0.0020775555167347193, 0.0020775555167347193, 0.0020775555167347193, 0.002077555051073432, 0.0020775552839040756, 0.0020775552839040756, 0.0020775552839040756, 0.0020775552839040756, 0.0020775552839040756, 0.0020775552839040756, 0.0020775555167347193, 0.0020775555167347193, 0.003468498820438981, 0.0028129725251346827, 0.002748132450506091, 0.0027635926380753517, 0.0027320957742631435, 0.0027319490909576416, 0.004008759744465351, 0.002726658945903182, 0.0027104539331048727, 0.002710268832743168, 0.0026980864349752665, 0.0026968910824507475, 0.003922475967556238, 0.0026964424178004265, 0.006658841855823994, 0.002663293154910207, 0.0026408303529024124, 0.0026400014758110046, 0.0026438564527779818, 0.002629370428621769, 0.0026390135753899813, 0.002627428388223052, 0.003925703000277281, 0.003468351671472192, 0.0034993502777069807, 0.0031493226997554302, 0.0034756800159811974, 0.003280922304838896, 0.004007877316325903, 0.004139964003115892, 0.003265934996306896, 0.004328278824687004, 0.0033362715039402246, 0.0036695334129035473, 0.0032070784363895655, 0.003134540980681777, 0.0038119563832879066, 0.0033480720594525337, 0.003270066576078534, 0.0032676118426024914, 0.0033486250322312117, 0.0031848435755819082, 0.0032140312250703573, 0.0031488961540162563, 0.003081943141296506, 0.0031118690967559814, 0.0035510805901139975, 0.0031246317084878683, 0.003137350082397461, 0.003155893413349986], \"Total\": [43.0, 21.0, 10.0, 13.0, 32.0, 21.0, 14.0, 16.0, 6.0, 19.0, 10.0, 33.0, 8.0, 16.0, 12.0, 16.0, 13.0, 15.0, 9.0, 9.0, 21.0, 19.0, 17.0, 8.0, 9.0, 14.0, 12.0, 14.0, 6.0, 11.0, 6.631718635559082, 4.079702377319336, 4.079697608947754, 4.078312397003174, 4.078105449676514, 4.074460506439209, 4.073936939239502, 4.0710649490356445, 3.226924419403076, 3.224527359008789, 3.224252223968506, 3.224172592163086, 3.224034070968628, 3.2240278720855713, 3.2238688468933105, 3.223649501800537, 7.489293098449707, 3.2113261222839355, 2.3761749267578125, 2.3761703968048096, 2.3761696815490723, 2.376167058944702, 2.376169204711914, 2.376168966293335, 2.376166582107544, 2.376159906387329, 2.3761637210845947, 2.3761630058288574, 2.3761608600616455, 5.71690034866333, 8.271065711975098, 6.149247169494629, 8.926599502563477, 4.898402214050293, 33.448177337646484, 4.912195205688477, 6.554215908050537, 4.85997200012207, 5.432676792144775, 5.702122688293457, 5.653187274932861, 9.801613807678223, 19.3023738861084, 24.696701049804688, 17.548686981201172, 21.236804962158203, 21.447795867919922, 11.087822914123535, 61.520633697509766, 22.94365882873535, 9.464685440063477, 16.994752883911133, 10.789094924926758, 32.28089141845703, 12.433653831481934, 12.808326721191406, 14.284889221191406, 15.680375099182129, 14.726235389709473, 13.94908618927002, 16.634727478027344, 19.260894775390625, 12.035626411437988, 9.222167015075684, 4.944708347320557, 4.099064350128174, 4.09039831161499, 4.085118293762207, 4.083751201629639, 3.2475790977478027, 3.24149227142334, 3.2397358417510986, 3.2370285987854004, 3.2357888221740723, 3.238245964050293, 3.2308692932128906, 3.2363622188568115, 3.2331035137176514, 16.68537712097168, 2.3892688751220703, 2.389265775680542, 2.3892648220062256, 2.3892621994018555, 2.3892571926116943, 5.7196807861328125, 2.3831255435943604, 2.3829076290130615, 2.3849263191223145, 2.381592035293579, 2.3808274269104004, 2.3807895183563232, 2.380725622177124, 2.3806042671203613, 17.55350112915039, 10.807441711425781, 9.750195503234863, 4.75936222076416, 4.910833835601807, 11.501550674438477, 4.904957294464111, 4.940959930419922, 6.531414031982422, 6.62257194519043, 8.339289665222168, 61.520633697509766, 7.408018112182617, 16.634727478027344, 7.38916540145874, 16.188161849975586, 16.544147491455078, 21.10552978515625, 32.28089141845703, 11.852617263793945, 15.680375099182129, 12.159825325012207, 22.94365882873535, 22.51280975341797, 14.657974243164062, 9.121902465820312, 9.120710372924805, 9.715739250183105, 12.391060829162598, 21.894542694091797, 33.448177337646484, 6.590720176696777, 4.901565074920654, 4.886589527130127, 4.89988899230957, 4.050175666809082, 4.047029495239258, 14.76213550567627, 4.053314208984375, 4.05380916595459, 4.053236961364746, 4.051969051361084, 3.209228754043579, 3.209177255630493, 3.208711862564087, 3.208070755004883, 3.207310199737549, 3.206700563430786, 5.672292232513428, 2.361112594604492, 2.361051321029663, 2.3609273433685303, 2.3599863052368164, 2.3599915504455566, 2.3597445487976074, 2.3539435863494873, 2.3642640113830566, 2.363719940185547, 2.363582134246826, 2.3584814071655273, 2.3637475967407227, 7.239846706390381, 3.9744014739990234, 9.91004467010498, 43.69715881347656, 4.023884296417236, 4.028812408447266, 12.235891342163086, 16.713638305664062, 21.10552978515625, 7.276266574859619, 7.588698387145996, 11.32767105102539, 12.727218627929688, 7.980762958526611, 8.120353698730469, 8.367072105407715, 19.3023738861084, 23.103511810302734, 21.894542694091797, 24.696701049804688, 15.680375099182129, 61.520633697509766, 16.75712013244629, 6.361276626586914, 3.952223062515259, 3.1077358722686768, 3.10843825340271, 3.1067872047424316, 3.1045541763305664, 3.109349489212036, 3.1100900173187256, 3.105185031890869, 3.1099853515625, 3.1046292781829834, 3.1045122146606445, 3.1047773361206055, 3.1065220832824707, 3.1082241535186768, 6.380258083343506, 2.2910075187683105, 2.3117144107818604, 2.292083263397217, 2.284393072128296, 2.287928819656372, 2.287504196166992, 2.288834810256958, 2.287532091140747, 2.2836203575134277, 2.2887918949127197, 2.2829461097717285, 2.3125150203704834, 2.312657594680786, 2.312718629837036, 4.772302150726318, 21.236804962158203, 6.415439128875732, 7.990179538726807, 32.28089141845703, 16.34161949157715, 3.781806707382202, 8.954602241516113, 7.203365802764893, 5.4506449699401855, 5.415610313415527, 5.496836185455322, 5.637177467346191, 5.608830451965332, 16.994752883911133, 14.657974243164062, 10.502473831176758, 8.060050964355469, 8.116827964782715, 8.686882972717285, 17.548686981201172, 8.981432914733887, 61.520633697509766, 9.103463172912598, 9.166712760925293, 21.894542694091797, 22.51280975341797, 10.53294563293457, 33.448177337646484, 24.696701049804688, 14.726235389709473, 6.472043991088867, 16.75712013244629, 8.78177261352539, 5.332537651062012, 3.772228717803955, 2.9998505115509033, 2.9998910427093506, 3.001547336578369, 3.002589225769043, 5.938089847564697, 9.314460754394531, 2.22244930267334, 2.222442150115967, 2.2224414348602295, 2.2239315509796143, 2.2249937057495117, 2.2250401973724365, 2.225332021713257, 2.2255680561065674, 2.2268030643463135, 3.842427968978882, 3.8438167572021484, 3.8184995651245117, 3.8445894718170166, 1.4475467205047607, 1.4475455284118652, 1.447543978691101, 1.4475442171096802, 1.447543978691101, 1.4475446939468384, 1.4475436210632324, 1.447543740272522, 1.4475432634353638, 1.4475431442260742, 4.669087886810303, 5.6077961921691895, 4.221688747406006, 13.94908618927002, 15.179696083068848, 2.900845766067505, 4.462881565093994, 4.498664855957031, 2.9032857418060303, 6.161406517028809, 12.433653831481934, 6.536226749420166, 11.852617263793945, 12.159825325012207, 23.103511810302734, 10.748820304870605, 61.520633697509766, 8.147115707397461, 19.260894775390625, 4.711110591888428, 5.307272911071777, 10.469156265258789, 10.00731086730957, 10.471797943115234, 12.035626411437988, 43.69715881347656, 16.75712013244629, 8.856419563293457, 24.696701049804688, 13.66979694366455, 21.447795867919922, 22.51280975341797, 10.156923294067383, 3.3799192905426025, 3.3817288875579834, 2.7004752159118652, 2.7031409740448, 2.7044284343719482, 2.705044984817505, 2.705122709274292, 2.024106502532959, 2.0261075496673584, 2.0265047550201416, 2.0266168117523193, 2.026930332183838, 2.0277152061462402, 2.0277559757232666, 2.0288915634155273, 2.0289413928985596, 2.0311882495880127, 4.232237339019775, 3.3110063076019287, 3.4808084964752197, 3.5476057529449463, 1.3470591306686401, 1.3470592498779297, 1.3470585346221924, 1.3470581769943237, 1.3470580577850342, 1.3470585346221924, 1.347057819366455, 1.3470572233200073, 5.907931327819824, 2.8039321899414062, 2.830331325531006, 8.296841621398926, 2.8779714107513428, 8.852106094360352, 5.259884357452393, 3.4613614082336426, 9.689250946044922, 43.69715881347656, 6.145355224609375, 9.536227226257324, 8.367072105407715, 14.284889221191406, 21.894542694091797, 61.520633697509766, 16.75712013244629, 19.260894775390625, 24.696701049804688, 22.94365882873535, 15.179696083068848, 3.700002431869507, 22.51280975341797, 2.505281686782837, 2.505282163619995, 4.571976184844971, 1.8944329023361206, 1.894431710243225, 1.8944313526153564, 1.894430160522461, 1.894429326057434, 1.8944294452667236, 1.894426703453064, 1.894424319267273, 1.2835767269134521, 1.2835766077041626, 1.2835757732391357, 1.2835742235183716, 1.283573865890503, 1.2835737466812134, 1.283573031425476, 1.2835718393325806, 1.2835713624954224, 2.6691949367523193, 2.6707587242126465, 2.725755453109741, 2.7482213973999023, 8.490160942077637, 6.420260906219482, 6.441952705383301, 4.984800815582275, 3.444089651107788, 1.8902820348739624, 5.6077961921691895, 16.544147491455078, 19.260894775390625, 5.840333461761475, 12.808326721191406, 6.145355224609375, 6.5322136878967285, 6.533696174621582, 6.66649055480957, 11.394510269165039, 43.69715881347656, 14.284889221191406, 7.139610767364502, 8.147115707397461, 8.203039169311523, 8.296841621398926, 10.471797943115234, 19.3023738861084, 21.894542694091797, 61.520633697509766, 23.103511810302734, 16.188161849975586, 5.3044843673706055, 6.138598442077637, 3.1028196811676025, 2.496896505355835, 1.8870794773101807, 1.8892688751220703, 1.8911089897155762, 3.282567024230957, 1.2780574560165405, 1.2782187461853027, 1.2788331508636475, 1.2788410186767578, 1.2789435386657715, 1.2792987823486328, 1.2793612480163574, 1.27937912940979, 1.279416561126709, 1.2794387340545654, 1.2794487476348877, 1.2796398401260376, 1.279688835144043, 1.2800923585891724, 1.2801145315170288, 1.2801330089569092, 1.280160665512085, 1.2801694869995117, 1.2802035808563232, 1.2802132368087769, 1.2802221775054932, 1.2803477048873901, 1.280421257019043, 13.300527572631836, 4.182596206665039, 2.7090983390808105, 10.748820304870605, 43.69715881347656, 3.3495426177978516, 21.447795867919922, 3.413667917251587, 3.4178318977355957, 3.5187416076660156, 4.097204208374023, 4.125471115112305, 9.056894302368164, 4.3338727951049805, 9.186140060424805, 9.103463172912598, 4.367337226867676, 4.446780204772949, 16.713638305664062, 5.459949970245361, 5.805456638336182, 6.696207046508789, 19.3023738861084, 21.10552978515625, 23.103511810302734, 7.58714485168457, 11.087822914123535, 61.520633697509766, 1.45832097530365, 1.4617209434509277, 1.467488169670105, 1.4676690101623535, 1.4699804782867432, 1.470078945159912, 1.4701802730560303, 1.4712721109390259, 1.2780574560165405, 1.2782187461853027, 1.2788331508636475, 1.2788410186767578, 1.2789435386657715, 1.2792987823486328, 1.2793612480163574, 1.27937912940979, 1.279416561126709, 1.2794387340545654, 1.2794487476348877, 1.2796398401260376, 1.279688835144043, 1.2800923585891724, 1.2801145315170288, 1.2801330089569092, 1.280160665512085, 1.2801694869995117, 1.2802035808563232, 1.2802132368087769, 1.2802221775054932, 1.2803477048873901, 3.1010208129882812, 2.3105547428131104, 2.2829461097717285, 2.3124637603759766, 2.2836203575134277, 2.3136377334594727, 5.415610313415527, 2.3138372898101807, 2.284393072128296, 2.314380168914795, 2.314849853515625, 2.3139758110046387, 5.496836185455322, 2.315180778503418, 21.236804962158203, 2.316436290740967, 2.287532091140747, 2.287504196166992, 2.3169736862182617, 2.287928819656372, 2.317605972290039, 2.318145751953125, 7.990179538726807, 5.653187274932861, 6.380258083343506, 4.815803050994873, 8.116827964782715, 6.415439128875732, 16.994752883911133, 22.51280975341797, 6.47739315032959, 32.28089141845703, 7.6766533851623535, 14.657974243164062, 6.361276626586914, 5.608830451965332, 21.894542694091797, 9.166712760925293, 8.954602241516113, 10.00731086730957, 14.726235389709473, 9.347827911376953, 10.502473831176758, 8.981432914733887, 7.203365802764893, 8.060050964355469, 61.520633697509766, 9.103463172912598, 10.53294563293457, 17.548686981201172], \"Category\": [\"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\"], \"logprob\": [30.0, 29.0, 28.0, 27.0, 26.0, 25.0, 24.0, 23.0, 22.0, 21.0, 20.0, 19.0, 18.0, 17.0, 16.0, 15.0, 14.0, 13.0, 12.0, 11.0, 10.0, 9.0, 8.0, 7.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0, -5.061200141906738, -5.603099822998047, -5.603099822998047, -5.613399982452393, -5.614999771118164, -5.619800090789795, -5.621500015258789, -5.630799770355225, -5.891900062561035, -5.896200180053711, -5.897299766540527, -5.89769983291626, -5.898200035095215, -5.898200035095215, -5.89900016784668, -5.899899959564209, -5.063000202178955, -5.953499794006348, -6.269599914550781, -6.269599914550781, -6.269599914550781, -6.269599914550781, -6.269599914550781, -6.269599914550781, -6.269599914550781, -6.269599914550781, -6.269599914550781, -6.269599914550781, -6.269599914550781, -5.401000022888184, -5.061500072479248, -5.395299911499023, -5.066199779510498, -5.611599922180176, -3.8849000930786133, -5.637400150299072, -5.398200035095215, -5.655700206756592, -5.614099979400635, -5.603099822998047, -5.618500232696533, -5.227399826049805, -4.8094000816345215, -4.718400001525879, -4.932000160217285, -4.826399803161621, -4.825799942016602, -5.21589994430542, -4.476500034332275, -4.950099945068359, -5.39870023727417, -5.22760009765625, -5.399700164794922, -5.06820011138916, -5.378900051116943, -5.38539981842041, -5.387599945068359, -5.38539981842041, -5.40500020980835, -5.417600154876709, -5.4054999351501465, -5.398399829864502, -5.59689998626709, -4.700799942016602, -5.3765997886657715, -5.590099811553955, -5.594200134277344, -5.5995001792907715, -5.600800037384033, -5.857600212097168, -5.865499973297119, -5.867800235748291, -5.874199867248535, -5.876200199127197, -5.876699924468994, -5.883800029754639, -5.882800102233887, -5.886300086975098, -4.300600051879883, -6.2453999519348145, -6.2453999519348145, -6.2453999519348145, -6.2453999519348145, -6.2453999519348145, -5.378200054168701, -6.257199764251709, -6.257599830627441, -6.258399963378906, -6.2600998878479, -6.261600017547607, -6.26170015335083, -6.2617998123168945, -6.2621002197265625, -4.298999786376953, -4.799699783325195, -4.919000148773193, -5.604800224304199, -5.586100101470947, -4.803199768066406, -5.593299865722656, -5.603499889373779, -5.38640022277832, -5.382999897003174, -5.200399875640869, -3.74180006980896, -5.374100208282471, -4.8018999099731445, -5.377999782562256, -4.907400131225586, -4.916999816894531, -4.801199913024902, -4.587699890136719, -5.193900108337402, -5.051199913024902, -5.199399948120117, -4.913000106811523, -5.0304999351501465, -5.1921000480651855, -5.369500160217285, -5.3755998611450195, -5.382299900054932, -5.3821001052856445, -5.377799987792969, -5.359099864959717, -4.872099876403809, -5.181300163269043, -5.188000202178955, -5.202600002288818, -5.396500110626221, -5.401000022888184, -4.1072998046875, -5.422399997711182, -5.423399925231934, -5.423699855804443, -5.430500030517578, -5.69890022277832, -5.699100017547607, -5.699999809265137, -5.703800201416016, -5.707399845123291, -5.712100028991699, -5.1753997802734375, -6.063300132751465, -6.063499927520752, -6.063799858093262, -6.066400051116943, -6.066400051116943, -6.0671000480651855, -6.083399772644043, -6.079100131988525, -6.0817999839782715, -6.082099914550781, -6.0843000411987305, -6.082900047302246, -5.0152997970581055, -5.689199924468994, -5.017899990081787, -3.9576001167297363, -5.696700096130371, -5.696199893951416, -5.039599895477295, -4.847099781036377, -4.727799892425537, -5.409999847412109, -5.413400173187256, -5.196700096130371, -5.185100078582764, -5.426199913024902, -5.423099994659424, -5.423799991607666, -5.1732001304626465, -5.172500133514404, -5.231100082397461, -5.217299938201904, -5.403600215911865, -5.416600227355957, -5.424699783325195, -4.817699909210205, -5.364999771118164, -5.63670015335083, -5.636499881744385, -5.63730001449585, -5.638199806213379, -5.6367998123168945, -5.63670015335083, -5.638999938964844, -5.637599945068359, -5.639900207519531, -5.641300201416016, -5.641300201416016, -5.640999794006348, -5.644800186157227, -4.978099822998047, -6.029900074005127, -6.021900177001953, -6.030600070953369, -6.035600185394287, -6.034200191497803, -6.034900188446045, -6.034599781036377, -6.035799980163574, -6.038099765777588, -6.036099910736084, -6.038700103759766, -6.031899929046631, -6.033599853515625, -6.03439998626709, -5.362299919128418, -3.998199939727783, -5.147600173950195, -4.976600170135498, -3.8185999393463135, -4.45989990234375, -5.633399963378906, -4.961999893188477, -5.143099784851074, -5.361700057983398, -5.367700099945068, -5.372900009155273, -5.354300022125244, -5.361199855804443, -4.56689977645874, -4.678299903869629, -4.960599899291992, -5.140399932861328, -5.157599925994873, -5.142899990081787, -4.815999984741211, -5.143499851226807, -4.268199920654297, -5.143599987030029, -5.153800010681152, -4.808199882507324, -4.818600177764893, -5.1427998542785645, -4.815299987792969, -4.941800117492676, -5.132500171661377, -5.354400157928467, -5.343699932098389, -5.354400157928467, -4.938899993896484, -5.312600135803223, -5.601900100708008, -5.6020002365112305, -5.609099864959717, -5.61359977722168, -4.9355998039245605, -4.535399913787842, -5.979100227355957, -5.979100227355957, -5.979100227355957, -5.988399982452393, -5.994999885559082, -5.995299816131592, -5.997099876403809, -5.998600006103516, -6.006499767303467, -5.581999778747559, -5.5879998207092285, -5.597400188446045, -5.590700149536133, -6.620999813079834, -6.620999813079834, -6.620999813079834, -6.620999813079834, -6.620999813079834, -6.620999813079834, -6.620999813079834, -6.620999813079834, -6.620999813079834, -6.620999813079834, -5.46750020980835, -5.322400093078613, -5.602799892425537, -4.499100208282471, -4.428599834442139, -5.98829984664917, -5.604499816894531, -5.609000205993652, -5.998799800872803, -5.3302001953125, -4.7692999839782715, -5.336599826812744, -4.916100025177002, -4.938000202178955, -4.6031999588012695, -5.11359977722168, -4.191999912261963, -5.325300216674805, -4.898900032043457, -5.609499931335449, -5.55109977722168, -5.244699954986572, -5.295000076293945, -5.302800178527832, -5.3109002113342285, -5.31790018081665, -5.508200168609619, -5.551199913024902, -5.517499923706055, -5.544000148773193, -5.538899898529053, -5.5507001876831055, -3.6826999187469482, -4.911099910736084, -4.9141998291015625, -5.183700084686279, -5.189700126647949, -5.192699909210205, -5.193999767303467, -5.194200038909912, -5.569799900054932, -5.576499938964844, -5.5777997970581055, -5.578199863433838, -5.57919979095459, -5.581900119781494, -5.581999778747559, -5.5858001708984375, -5.585999965667725, -5.593599796295166, -4.912300109863281, -5.187900066375732, -5.192500114440918, -5.187699794769287, -6.202899932861328, -6.202899932861328, -6.202899932861328, -6.202899932861328, -6.202899932861328, -6.202899932861328, -6.202899932861328, -6.202899932861328, -4.883999824523926, -5.581999778747559, -5.580999851226807, -4.700500011444092, -5.5782999992370605, -4.700300216674805, -5.189700126647949, -5.5278000831604, -4.8557000160217285, -4.147299766540527, -5.191400051116943, -5.118899822235107, -5.19320011138916, -5.061100006103516, -5.044099807739258, -4.817800045013428, -5.131899833679199, -5.1529998779296875, -5.126999855041504, -5.161900043487549, -5.3927001953125, -5.52269983291626, -5.519599914550781, -4.94980001449585, -4.94980001449585, -4.4532999992370605, -5.337600231170654, -5.337600231170654, -5.337600231170654, -5.337600231170654, -5.337600231170654, -5.337600231170654, -5.337600231170654, -5.337600231170654, -5.979499816894531, -5.979499816894531, -5.979499816894531, -5.979499816894531, -5.979499816894531, -5.979499816894531, -5.979499816894531, -5.979499816894531, -5.979499816894531, -5.337600231170654, -5.337600231170654, -5.337600231170654, -5.337600231170654, -4.274700164794922, -4.67110013961792, -4.67110013961792, -4.94980001449585, -5.337600231170654, -5.979499816894531, -4.94980001449585, -4.1143999099731445, -4.1230998039245605, -4.94980001449585, -4.453400135040283, -4.94980001449585, -4.94980001449585, -4.94980001449585, -4.94980001449585, -4.660699844360352, -3.8752999305725098, -4.661300182342529, -4.94980001449585, -4.94980001449585, -4.94980001449585, -4.94980001449585, -4.94980001449585, -4.94980001449585, -4.94980001449585, -5.278200149536133, -5.3190999031066895, -5.322700023651123, -5.337600231170654, -3.769700050354004, -4.565800189971924, -4.846399784088135, -5.230100154876709, -5.234399795532227, -5.23799991607666, -4.8379998207092285, -5.863500118255615, -5.864099979400635, -5.866399765014648, -5.866499900817871, -5.866799831390381, -5.868199825286865, -5.8684000968933105, -5.868500232696533, -5.868599891662598, -5.86870002746582, -5.86870002746582, -5.8694000244140625, -5.86959981918335, -5.871099948883057, -5.871200084686279, -5.871300220489502, -5.871399879455566, -5.871399879455566, -5.871600151062012, -5.871600151062012, -5.871600151062012, -5.872099876403809, -5.872399806976318, -3.6596999168395996, -4.839399814605713, -5.234499931335449, -4.171800136566162, -3.2035000324249268, -5.231100082397461, -4.012499809265137, -5.229800224304199, -5.2357001304626465, -5.2347002029418945, -5.239200115203857, -5.235599994659424, -4.842199802398682, -5.231299877166748, -4.847499847412109, -4.852099895477295, -5.2342000007629395, -5.231900215148926, -4.573800086975098, -5.232900142669678, -5.239699840545654, -5.232100009918213, -4.8506999015808105, -4.8506999015808105, -4.851799964904785, -5.224299907684326, -5.230199813842773, -5.2307000160217285, -7.019199848175049, -7.0472002029418945, -7.096799850463867, -7.098400115966797, -7.119100093841553, -7.119999885559082, -7.1209001541137695, -7.130799770355225, -7.3368000984191895, -7.3368000984191895, -7.3368000984191895, -7.3368000984191895, -7.3368000984191895, -7.3368000984191895, -7.3368000984191895, -7.3368000984191895, -7.3368000984191895, -7.3368000984191895, -7.3368000984191895, -7.3368000984191895, -7.3368000984191895, -7.3368000984191895, -7.3368000984191895, -7.3368000984191895, -7.3368000984191895, -7.3368000984191895, -7.3368000984191895, -7.3368000984191895, -7.3368000984191895, -7.3368000984191895, -6.82420015335083, -7.033699989318848, -7.057000160217285, -7.051400184631348, -7.062900066375732, -7.063000202178955, -6.679500102996826, -7.064899921417236, -7.070899963378906, -7.070899963378906, -7.075399875640869, -7.075900077819824, -6.701200008392334, -7.076000213623047, -6.171999931335449, -7.088399887084961, -7.09689998626709, -7.0971999168396, -7.095699787139893, -7.101200103759766, -7.097599983215332, -7.1020002365112305, -6.700399875640869, -6.8242998123168945, -6.815400123596191, -6.92080020904541, -6.822199821472168, -6.879799842834473, -6.679699897766113, -6.647299766540527, -6.884399890899658, -6.602799892425537, -6.863100051879883, -6.767899990081787, -6.902599811553955, -6.92549991607666, -6.729800224304199, -6.859600067138672, -6.883200168609619, -6.883900165557861, -6.859399795532227, -6.909599781036377, -6.900400161743164, -6.920899868011475, -6.942399978637695, -6.932700157165527, -6.8007001876831055, -6.928699970245361, -6.924600124359131, -6.918700218200684], \"loglift\": [30.0, 29.0, 28.0, 27.0, 26.0, 25.0, 24.0, 23.0, 22.0, 21.0, 20.0, 19.0, 18.0, 17.0, 16.0, 15.0, 14.0, 13.0, 12.0, 11.0, 10.0, 9.0, 8.0, 7.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0, 1.535599946975708, 1.4794000387191772, 1.4794000387191772, 1.469499945640564, 1.468000054359436, 1.4641000032424927, 1.462499976158142, 1.4538999795913696, 1.4251999855041504, 1.4215999841690063, 1.4206000566482544, 1.420199990272522, 1.419700026512146, 1.419700026512146, 1.4190000295639038, 1.4182000160217285, 1.4120999574661255, 1.368399977684021, 1.3535000085830688, 1.3535000085830688, 1.3535000085830688, 1.3535000085830688, 1.3535000085830688, 1.3535000085830688, 1.3535000085830688, 1.3535000085830688, 1.3535000085830688, 1.3535000085830688, 1.3535000085830688, 1.3442000150680542, 1.3142999410629272, 1.2769999504089355, 1.2333999872207642, 1.288100004196167, 1.0937000513076782, 1.2594000101089478, 1.2102999687194824, 1.2518999576568604, 1.1820000410079956, 1.1446000337600708, 1.1378999948501587, 0.978600025177002, 0.718999981880188, 0.5634999871253967, 0.6916000247001648, 0.6065000295639038, 0.597100019454956, 0.8669000267982483, -0.10729999840259552, 0.40540000796318054, 0.8422999978065491, 0.42809998989105225, 0.7103000283241272, -0.054099999368190765, 0.5892999768257141, 0.5530999898910522, 0.44179999828338623, 0.3508000075817108, 0.39399999380111694, 0.43549999594688416, 0.27160000801086426, 0.13210000097751617, 0.40389999747276306, 1.5662000179290771, 1.5135999917984009, 1.4878000020980835, 1.48580002784729, 1.4817999601364136, 1.4807000160217285, 1.4530999660491943, 1.4470000267028809, 1.4452999830245972, 1.4398000240325928, 1.438099980354309, 1.4368000030517578, 1.4320000410079956, 1.4313000440597534, 1.4289000034332275, 1.3734999895095825, 1.3722000122070312, 1.3722000122070312, 1.3722000122070312, 1.3722000122070312, 1.3722000122070312, 1.3665000200271606, 1.3630000352859497, 1.3626999855041504, 1.3609999418258667, 1.360700011253357, 1.3595000505447388, 1.3595000505447388, 1.3594000339508057, 1.3592000007629395, 1.3243999481201172, 1.3085999488830566, 1.2922999858856201, 1.3236000537872314, 1.3111000061035156, 1.242900013923645, 1.3049999475479126, 1.287500023841858, 1.2254999876022339, 1.2151000499725342, 1.167199969291687, 0.6273999810218811, 1.111899971961975, 0.8751999735832214, 1.1104999780654907, 0.7968999743461609, 0.765500009059906, 0.6377999782562256, 0.42640000581741333, 0.8220999836921692, 0.6848999857902527, 0.791100025177002, 0.4426000118255615, 0.3440000116825104, 0.6115000247955322, 0.9083999991416931, 0.902400016784668, 0.8324999809265137, 0.5896000266075134, 0.02459999918937683, -0.3804999887943268, 1.7309000492095947, 1.7177000045776367, 1.7141000032424927, 1.6967999935150146, 1.6934000253677368, 1.6895999908447266, 1.6892000436782837, 1.666700005531311, 1.6655000448226929, 1.6654000282287598, 1.6589000225067139, 1.6237000226974487, 1.6234999895095825, 1.6226999759674072, 1.6190999746322632, 1.6157000064849854, 1.611199975013733, 1.5776000022888184, 1.5662000179290771, 1.565999984741211, 1.5657000541687012, 1.5635000467300415, 1.5635000467300415, 1.5628999471664429, 1.5491000413894653, 1.5490000247955322, 1.5464999675750732, 1.5463000535964966, 1.5462000370025635, 1.5454000234603882, 1.4937000274658203, 1.4194999933242798, 1.1771999597549438, 0.7537000179290771, 1.3997000455856323, 1.398900032043457, 0.944599986076355, 0.8252000212669373, 0.7113000154495239, 1.093999981880188, 1.0484999418258667, 0.8646000027656555, 0.7598000168800354, 0.9854000210762024, 0.9710999727249146, 0.940500020980835, 0.35510000586509705, 0.1761000007390976, 0.1712999939918518, 0.06459999829530716, 0.3325999975204468, -1.0473999977111816, 0.24500000476837158, 1.8207000494003296, 1.7493000030517578, 1.718000054359436, 1.717900037765503, 1.7177000045776367, 1.7174999713897705, 1.7173999547958374, 1.7172000408172607, 1.716599941253662, 1.7164000272750854, 1.7158000469207764, 1.714400053024292, 1.7143000364303589, 1.7141000032424927, 1.7098000049591064, 1.6572999954223633, 1.629699945449829, 1.6287000179290771, 1.628499984741211, 1.6268999576568604, 1.6267000436782837, 1.6261999607086182, 1.6259000301361084, 1.6253000497817993, 1.6246999502182007, 1.624400019645691, 1.624400019645691, 1.618399977684021, 1.6166000366210938, 1.6158000230789185, 1.5635000467300415, 1.4345999956130981, 1.482200026512146, 1.4337999820709229, 1.1955000162124634, 1.2350000143051147, 1.524999976158142, 1.3344000577926636, 1.37090003490448, 1.4312000274658203, 1.4315999746322632, 1.4114999771118164, 1.4048999547958374, 1.402999997138977, 1.0887999534606934, 1.1253000497817993, 1.1763999462127686, 1.261299967765808, 1.2369999885559082, 1.183899998664856, 0.8076000213623047, 1.149999976158142, 0.10100000351667404, 1.136299967765808, 1.1193000078201294, 0.5940999984741211, 0.555899977684021, 0.9912999868392944, 0.1632000058889389, 0.3400999903678894, 0.6664999723434448, 1.266700029373169, 0.32600000500679016, 0.9616000056266785, 1.8759000301361084, 1.8483999967575073, 1.788100004196167, 1.7879999876022339, 1.780400037765503, 1.7755000591278076, 1.7716000080108643, 1.72160005569458, 1.7108999490737915, 1.7108999490737915, 1.7108999490737915, 1.7008999586105347, 1.6938999891281128, 1.69350004196167, 1.69159996509552, 1.690000057220459, 1.68149995803833, 1.5605000257492065, 1.5541000366210938, 1.5513999462127686, 1.551200032234192, 1.4976999759674072, 1.4976999759674072, 1.4976999759674072, 1.4976999759674072, 1.4976999759674072, 1.4976999759674072, 1.4976999759674072, 1.4976999759674072, 1.4976999759674072, 1.4976999759674072, 1.4801000356674194, 1.4420000314712524, 1.4456000328063965, 1.354099988937378, 1.340000033378601, 1.4352999925613403, 1.3882999420166016, 1.3758000135421753, 1.4239000082015991, 1.3401000499725342, 1.1988999843597412, 1.2747000455856323, 1.0999000072479248, 1.0525000095367432, 0.7454000115394592, 1.0002000331878662, 0.17720000445842743, 1.065600037574768, 0.631600022315979, 1.3291000127792358, 1.268399953842163, 0.8953999876976013, 0.8902000188827515, 0.8371000289916992, 0.6898000240325928, -0.6065999865531921, 0.1615999937057495, 0.7562000155448914, -0.23559999465942383, 0.3294000029563904, -0.11590000241994858, -0.1762000024318695, 2.487799882888794, 2.3596999645233154, 2.3559999465942383, 2.3113999366760254, 2.304500102996826, 2.3010001182556152, 2.2994000911712646, 2.2992000579833984, 2.213599920272827, 2.2060000896453857, 2.2044999599456787, 2.2040998935699463, 2.2028000354766846, 2.1998000144958496, 2.199700117111206, 2.1953001022338867, 2.1951000690460205, 2.1863999366760254, 2.133500099182129, 2.1033999919891357, 2.048799991607666, 2.034600019454956, 1.9878000020980835, 1.9878000020980835, 1.9878000020980835, 1.9878000020980835, 1.9878000020980835, 1.9878000020980835, 1.9878000020980835, 1.9878000020980835, 1.8282999992370605, 1.875499963760376, 1.8672000169754028, 1.6722999811172485, 1.8531999588012695, 1.6075999736785889, 1.638800024986267, 1.719099998474121, 1.361899971961975, 0.5640000104904175, 1.4815000295639038, 1.1145999431610107, 1.1711000204086304, 0.7682999968528748, 0.3582000136375427, -0.44859999418258667, 0.5378999710083008, 0.3774999976158142, 0.15489999949932098, 0.19359999895095825, 0.375900000333786, 1.6575000286102295, -0.14509999752044678, 2.6203999519348145, 2.6203999519348145, 2.5153000354766846, 2.5120999813079834, 2.5120999813079834, 2.5120999813079834, 2.5120999813079834, 2.5120999813079834, 2.5120999813079834, 2.5120999813079834, 2.5120999813079834, 2.259500026702881, 2.259500026702881, 2.259500026702881, 2.259500026702881, 2.259500026702881, 2.259500026702881, 2.259500026702881, 2.259500026702881, 2.259500026702881, 2.1691999435424805, 2.1686999797821045, 2.1482999324798584, 2.1401000022888184, 2.075000047683716, 1.9579999446868896, 1.954699993133545, 1.9323999881744385, 1.9143999814987183, 1.8724000453948975, 1.8145999908447266, 1.5680999755859375, 1.4074000120162964, 1.7740000486373901, 1.4851000308990479, 1.723099946975708, 1.6619999408721924, 1.6618000268936157, 1.641700029373169, 1.3947999477386475, 0.8360000252723694, 1.1680999994277954, 1.573099970817566, 1.441100001335144, 1.4342999458312988, 1.4228999614715576, 1.1900999546051025, 0.5785999894142151, 0.45260000228881836, -0.9089000225067139, 0.029500000178813934, 0.3815999925136566, 1.4824999570846558, 2.9042999744415283, 2.7904000282287598, 2.727099895477295, 2.623500108718872, 2.618000030517578, 2.6133999824523926, 2.4619998931884766, 2.379699945449829, 2.378999948501587, 2.376199960708618, 2.376199960708618, 2.375699996948242, 2.3740999698638916, 2.373800039291382, 2.373699903488159, 2.3736000061035156, 2.373500108718872, 2.3733999729156494, 2.3726000785827637, 2.372299909591675, 2.370500087738037, 2.3703999519348145, 2.370300054550171, 2.3701999187469482, 2.3701999187469482, 2.369999885559082, 2.369999885559082, 2.3698999881744385, 2.36929988861084, 2.36899995803833, 2.2411000728607178, 2.2181999683380127, 2.2574000358581543, 1.9420000314712524, 1.5077999830245972, 2.0487000942230225, 1.4105000495910645, 2.0309998989105225, 2.023900032043457, 1.9957000017166138, 1.8391000032424927, 1.835800051689148, 1.4428000450134277, 1.7907999753952026, 1.4234000444412231, 1.4278000593185425, 1.7802000045776367, 1.7645000219345093, 1.0986000299453735, 1.5583000183105469, 1.4901000261306763, 1.3550000190734863, 0.6776000261306763, 0.5882999897003174, 0.4968000054359436, 1.2378000020980835, 0.8525999784469604, -0.8615000247955322, 1.0921000242233276, 1.0618000030517578, 1.0082000494003296, 1.006500005722046, 0.9843000173568726, 0.983299970626831, 0.9822999835014343, 0.9715999960899353, 0.906499981880188, 0.9063000082969666, 0.9059000015258789, 0.9059000015258789, 0.9057999849319458, 0.9054999947547913, 0.9053999781608582, 0.9053999781608582, 0.9053999781608582, 0.9053999781608582, 0.9053999781608582, 0.9052000045776367, 0.9052000045776367, 0.9049000144004822, 0.9049000144004822, 0.9047999978065491, 0.9047999978065491, 0.9047999978065491, 0.9047999978065491, 0.9047999978065491, 0.9047999978065491, 0.904699981212616, 0.5325999855995178, 0.6173999905586243, 0.6061000227928162, 0.598800003528595, 0.5999000072479248, 0.5867999792098999, 0.11980000138282776, 0.5848000049591064, 0.5916000008583069, 0.578499972820282, 0.5738000273704529, 0.5738000273704529, 0.08320000022649765, 0.5730999708175659, -0.7391999959945679, 0.5601999759674072, 0.5641999840736389, 0.5638999938964844, 0.5526000261306763, 0.5597000122070312, 0.5504999756813049, 0.5458999872207642, -0.28999999165534973, -0.06790000200271606, -0.18000000715255737, -0.004100000020116568, -0.42750000953674316, -0.25, -1.0240000486373901, -1.2727999687194824, -0.26420000195503235, -1.5887000560760498, -0.41269999742507935, -0.9642999768257141, -0.26420000195503235, -0.16120000183582306, -1.3274999856948853, -0.5866000056266785, -0.5867000222206116, -0.6985999941825867, -1.0605000257492065, -0.6560999751091003, -0.7634999752044678, -0.6274999976158142, -0.4284000098705292, -0.5310999751091003, -2.43149995803833, -0.6486999988555908, -0.7904999852180481, -1.2950999736785889]}, \"token.table\": {\"Topic\": [3, 5, 1, 2, 3, 5, 7, 7, 1, 4, 4, 5, 6, 5, 4, 5, 1, 2, 4, 6, 8, 3, 2, 5, 8, 5, 8, 6, 1, 7, 1, 3, 6, 1, 2, 3, 4, 5, 6, 7, 8, 2, 1, 2, 3, 5, 6, 7, 8, 1, 2, 3, 4, 5, 7, 5, 6, 1, 4, 1, 4, 3, 5, 8, 4, 1, 4, 4, 1, 4, 2, 4, 2, 2, 5, 6, 1, 2, 3, 5, 7, 1, 3, 5, 7, 1, 3, 5, 7, 4, 1, 4, 3, 1, 6, 1, 5, 4, 1, 2, 3, 5, 6, 7, 6, 1, 2, 3, 4, 1, 2, 1, 2, 3, 7, 8, 2, 4, 2, 4, 5, 2, 8, 2, 1, 4, 2, 1, 3, 1, 2, 5, 7, 8, 1, 3, 6, 1, 2, 5, 7, 2, 3, 4, 2, 4, 6, 4, 1, 2, 3, 4, 7, 3, 8, 1, 2, 1, 6, 4, 4, 6, 3, 6, 1, 2, 3, 4, 5, 6, 4, 7, 2, 4, 4, 1, 2, 4, 5, 8, 1, 2, 4, 6, 6, 7, 3, 5, 8, 1, 2, 3, 4, 8, 3, 5, 7, 8, 1, 5, 6, 7, 8, 3, 1, 2, 4, 5, 1, 2, 4, 5, 6, 8, 1, 3, 5, 6, 8, 2, 5, 2, 4, 5, 6, 4, 5, 7, 8, 5, 1, 3, 5, 7, 1, 2, 3, 4, 5, 6, 7, 1, 2, 3, 5, 6, 7, 6, 1, 2, 1, 4, 1, 4, 1, 3, 5, 6, 6, 4, 6, 3, 5, 6, 1, 4, 7, 8, 4, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 5, 6, 4, 4, 1, 1, 4, 1, 7, 4, 7, 3, 1, 2, 3, 4, 5, 4, 8, 2, 5, 6, 7, 5, 1, 8, 4, 6, 8, 1, 2, 3, 4, 5, 6, 8, 2, 7, 1, 1, 2, 4, 2, 3, 4, 1, 2, 3, 4, 7, 8, 2, 3, 4, 1, 1, 2, 3, 6, 7, 1, 3, 4, 5, 6, 5, 7, 1, 2, 4, 5, 8, 1, 4, 1, 3, 5, 6, 7, 2, 4, 1, 4, 1, 4, 1, 4, 3, 4, 4, 5, 4, 8, 1, 5, 8, 2, 5, 2, 2, 6, 8, 1, 2, 8, 1, 1, 2, 3, 4, 5, 6, 1, 4, 6, 2, 3, 4, 6, 8, 2, 3, 4, 6, 5, 7, 3, 8, 3, 1, 7, 8, 1, 4, 5, 8, 5, 1, 3, 5, 5, 6, 7, 8, 3, 7, 8, 5, 7, 1, 6, 3, 1, 4, 5, 1, 2, 4, 5, 6, 8, 6, 7, 1, 2, 3, 4, 5, 2, 3, 4, 8, 1, 3, 5, 1, 5, 7, 4, 6, 3, 6, 8, 2, 2, 3, 5, 6, 8, 5, 1, 2, 3, 4, 5, 1, 4, 1, 4, 5, 6, 2, 3, 4, 3, 5, 7, 3, 2, 2, 3, 5, 6, 7, 1, 2, 3, 4, 5, 6, 7, 8, 6, 2, 7, 1, 2, 4, 7, 8, 7, 5, 3, 5, 7, 5, 7, 1, 5, 7, 6, 8, 1, 2, 3, 4, 5, 2, 3, 4, 5, 1, 3, 2, 1, 2, 3, 5, 6, 5, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 5, 6, 1, 5, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 3, 7, 1, 2, 3, 4, 8, 3, 2, 4, 5, 8, 5, 2, 1, 4, 4, 1, 4, 1, 4, 5, 1, 2, 4, 5, 1, 4, 7, 5, 8, 8, 1, 4, 8, 1, 2, 5, 7, 8, 2, 3, 5, 8, 1, 2, 3, 5, 6, 7, 8, 1, 2, 3, 5, 7, 8, 1, 2, 4, 6, 2, 3, 5, 6, 7, 4, 5, 8, 1, 3, 4, 1, 2, 4, 6, 7, 8, 8, 4, 5, 7, 5, 2, 3, 2, 1, 2, 1, 2, 6, 1, 2, 4, 5, 1, 1, 3, 4, 5, 7, 3, 8, 4, 3, 1, 3, 5, 7, 1, 4, 5, 6, 7, 1, 2, 5, 1, 4, 4, 2, 1, 3, 4, 5, 6, 7, 3, 1, 2, 5, 6, 8, 6, 8, 6, 5, 4, 2, 4, 3, 7, 6, 5, 6, 1, 2, 3, 5, 7, 3, 3, 8, 5, 4, 3, 1, 4, 1, 4, 1, 2, 7, 1, 1, 2, 3, 6, 7, 8, 2, 3, 4, 1, 2, 4, 8, 8, 1, 1, 5, 7, 4, 5, 6, 1, 2, 4, 5, 7, 2, 3, 3, 6, 5, 6, 1, 2, 3, 2, 5, 3, 4, 5, 1, 4, 5, 1, 1, 2, 3, 4, 5, 8, 3, 8, 1, 4, 1, 3, 5, 6, 7, 3, 5, 2, 3, 1, 3, 4, 6, 7, 6, 1, 2, 3, 5, 7, 4, 1, 4, 2, 1, 6, 1, 2, 4, 5, 1, 4, 8, 7, 1, 4, 6, 7, 1, 2, 4, 5, 6, 1, 2, 5, 7, 1, 5, 6, 1, 3, 3, 5, 1, 7, 1, 1, 5, 6, 7, 3, 5, 4, 1, 3, 4, 5, 6, 7, 8, 1, 3, 5, 7, 8, 1, 2, 5, 1, 2, 1, 3, 4, 5, 6, 1, 4, 1, 2, 3, 4, 5, 3, 5, 5, 8, 4, 6, 1, 2, 6, 6, 7, 2, 6, 8, 1, 2, 4, 6, 4, 4, 5, 7, 8, 3, 3, 5, 6, 1, 6, 5, 2, 3, 5, 2, 1, 2, 3, 4, 6, 4, 4, 4, 1, 2, 3, 5, 8, 2, 6, 8, 8, 5], \"Freq\": [0.26010578870773315, 0.5202115774154663, 0.20585155487060547, 0.41170310974121094, 0.20585155487060547, 0.10292577743530273, 0.10292577743530273, 0.7790759801864624, 0.6996798515319824, 0.1749199628829956, 0.5539541840553284, 0.36930277943611145, 0.7423586249351501, 0.8999109268188477, 0.9656277894973755, 0.6663230061531067, 0.2636037766933441, 0.2636037766933441, 0.2636037766933441, 0.13180188834667206, 0.13180188834667206, 0.9349546432495117, 0.2841925024986267, 0.2841925024986267, 0.2841925024986267, 0.8993082642555237, 0.7811198830604553, 0.7395278215408325, 0.9305130243301392, 0.7790731191635132, 0.16926398873329163, 0.33852797746658325, 0.5077919363975525, 0.17880180478096008, 0.35760360956192017, 0.04876412823796272, 0.16254709661006927, 0.16254709661006927, 0.04876412823796272, 0.016254708170890808, 0.016254708170890808, 0.8400440812110901, 0.20972654223442078, 0.20972654223442078, 0.10486327111721039, 0.10486327111721039, 0.20972654223442078, 0.10486327111721039, 0.10486327111721039, 0.18532060086727142, 0.4324147403240204, 0.06177353486418724, 0.12354706972837448, 0.06177353486418724, 0.06177353486418724, 0.8999112248420715, 0.7423578500747681, 0.4324392080307007, 0.4324392080307007, 0.43147972226142883, 0.43147972226142883, 0.740149199962616, 0.842021644115448, 0.16840432584285736, 0.8738234639167786, 0.43215662240982056, 0.43215662240982056, 0.8743153214454651, 0.4315974712371826, 0.4315974712371826, 0.33502325415611267, 0.5583720803260803, 0.8674750924110413, 0.3246012032032013, 0.48690181970596313, 0.16230060160160065, 0.3000079393386841, 0.15000396966934204, 0.15000396966934204, 0.15000396966934204, 0.3000079393386841, 0.3122968375682831, 0.15614841878414154, 0.15614841878414154, 0.2342226356267929, 0.31046485900878906, 0.15523242950439453, 0.15523242950439453, 0.4656972885131836, 0.6813525557518005, 0.6124445796012878, 0.20414820313453674, 0.84746253490448, 0.34746697545051575, 0.34746697545051575, 0.21417459845542908, 0.6425237655639648, 0.9648320078849792, 0.20767466723918915, 0.05191866680979729, 0.15575599670410156, 0.25959333777427673, 0.10383733361959457, 0.20767466723918915, 0.7423582673072815, 0.2192811667919159, 0.4385623335838318, 0.10964058339595795, 0.2192811667919159, 0.9804636836051941, 0.8400800228118896, 0.33123937249183655, 0.22082625329494476, 0.11041312664747238, 0.11041312664747238, 0.22082625329494476, 0.611626148223877, 0.2038753777742386, 0.2856469750404358, 0.4760783016681671, 0.19043132662773132, 0.8386003375053406, 0.7816400527954102, 0.9237650036811829, 0.37670451402664185, 0.6121448278427124, 0.8393107652664185, 0.610724925994873, 0.20357497036457062, 0.2864837646484375, 0.1909891664981842, 0.2864837646484375, 0.1909891664981842, 0.0954945832490921, 0.8416904807090759, 0.281880259513855, 0.56376051902771, 0.32170751690864563, 0.08042687922716141, 0.40213441848754883, 0.08042687922716141, 0.9267758727073669, 0.7455482482910156, 0.24851609766483307, 0.8401228189468384, 0.8755060434341431, 0.493460476398468, 0.872568666934967, 0.21925251185894012, 0.43850502371788025, 0.10962625592947006, 0.21925251185894012, 0.7790747880935669, 0.7400447130203247, 0.7819580435752869, 0.7356356978416443, 0.9260014295578003, 0.9047428369522095, 0.49315598607063293, 0.6841251254081726, 0.9646347761154175, 0.4923226535320282, 0.6236940026283264, 0.7406103610992432, 0.11935225129127502, 0.23870450258255005, 0.17902837693691254, 0.17902837693691254, 0.17902837693691254, 0.11935225129127502, 0.966126024723053, 0.5278634428977966, 0.3547874689102173, 0.5321812033653259, 0.8738070726394653, 0.4509451389312744, 0.18037806451320648, 0.18037806451320648, 0.09018903225660324, 0.09018903225660324, 0.3340224325656891, 0.22268161177635193, 0.44536322355270386, 0.7423589825630188, 0.4934331774711609, 0.7790752649307251, 0.8474606871604919, 0.8987423181533813, 0.7811465859413147, 0.10885965079069138, 0.21771930158138275, 0.21771930158138275, 0.21771930158138275, 0.21771930158138275, 0.7051823139190674, 0.17629557847976685, 0.5278627872467041, 0.7815927267074585, 0.16272452473640442, 0.16272452473640442, 0.32544904947280884, 0.32544904947280884, 0.7810378074645996, 0.8461140394210815, 0.12515363097190857, 0.12515363097190857, 0.6257681846618652, 0.12515363097190857, 0.3729987144470215, 0.18649935722351074, 0.09324967861175537, 0.13987451791763306, 0.046624839305877686, 0.18649935722351074, 0.17225174605846405, 0.17225174605846405, 0.3445034921169281, 0.17225174605846405, 0.17225174605846405, 0.925499677658081, 0.6908251643180847, 0.341616690158844, 0.341616690158844, 0.113872230052948, 0.113872230052948, 0.18315185606479645, 0.3663037121295929, 0.18315185606479645, 0.18315185606479645, 0.6908254027366638, 0.11778339743614197, 0.3533501923084259, 0.11778339743614197, 0.47113358974456787, 0.09134696424007416, 0.18269392848014832, 0.18269392848014832, 0.2740408778190613, 0.09134696424007416, 0.09134696424007416, 0.09134696424007416, 0.2800161838531494, 0.1400080919265747, 0.07000404596328735, 0.1400080919265747, 0.1400080919265747, 0.21001212298870087, 0.7423584461212158, 0.8416916728019714, 0.9285426735877991, 0.3224744498729706, 0.6449488997459412, 0.5306740999221802, 0.3537827134132385, 0.6721484661102295, 0.11202473938465118, 0.11202473938465118, 0.11202473938465118, 0.8875951766967773, 0.9651148915290833, 0.49316591024398804, 0.8128905296325684, 0.06774087995290756, 0.06774087995290756, 0.4316976070404053, 0.4316976070404053, 0.7790735960006714, 0.7809929847717285, 0.8648592233657837, 0.24813738465309143, 0.12406869232654572, 0.49627476930618286, 0.12406869232654572, 0.4935572147369385, 0.13325746357440948, 0.26651492714881897, 0.13325746357440948, 0.26651492714881897, 0.13325746357440948, 0.04441915452480316, 0.04441915452480316, 0.7811688184738159, 0.6102942228317261, 0.15257355570793152, 0.15257355570793152, 0.7423585057258606, 0.8741530776023865, 0.6814364790916443, 0.7355983853340149, 0.4319934546947479, 0.4319934546947479, 0.7369078993797302, 0.5278634428977966, 0.9432069063186646, 0.5278641581535339, 0.8461732864379883, 0.06119344383478165, 0.2447737753391266, 0.1223868876695633, 0.4895475506782532, 0.1223868876695633, 0.30463963747024536, 0.6092792749404907, 0.15299347043037415, 0.45898041129112244, 0.15299347043037415, 0.15299347043037415, 0.8999080657958984, 0.9304482936859131, 0.5293052792549133, 0.7932716608047485, 0.2644238770008087, 0.81451815366745, 0.29420846700668335, 0.05884169042110443, 0.05884169042110443, 0.4118918478488922, 0.11768338084220886, 0.05884169042110443, 0.7811519503593445, 0.7318743467330933, 0.5278624296188354, 0.6227956414222717, 0.17829029262065887, 0.17829029262065887, 0.5348708629608154, 0.15451069176197052, 0.30902138352394104, 0.46353209018707275, 0.39889025688171387, 0.056984320282936096, 0.11396864056587219, 0.3419059216976166, 0.056984320282936096, 0.056984320282936096, 0.8370761275291443, 0.20954246819019318, 0.6286274194717407, 0.8416938781738281, 0.13743311166763306, 0.2748662233352661, 0.41229936480522156, 0.13743311166763306, 0.7790729999542236, 0.21395345032215118, 0.10697672516107559, 0.3209301829338074, 0.21395345032215118, 0.10697672516107559, 0.5807049870491028, 0.2903524935245514, 0.05993271619081497, 0.7791253328323364, 0.11986543238162994, 0.05993271619081497, 0.7816062569618225, 0.4313792586326599, 0.4313792586326599, 0.36571812629699707, 0.12190603464841843, 0.12190603464841843, 0.12190603464841843, 0.24381206929683685, 0.8397743701934814, 0.8743046522140503, 0.841693103313446, 0.6801887154579163, 0.43279650807380676, 0.43279650807380676, 0.6229490637779236, 0.4152993857860565, 0.8480032682418823, 0.8647831082344055, 0.8758023381233215, 0.8988601565361023, 0.36912649869918823, 0.36912649869918823, 0.45794492959976196, 0.22897246479988098, 0.22897246479988098, 0.7346187233924866, 0.8988789319992065, 0.8089455962181091, 0.24406887590885162, 0.24406887590885162, 0.24406887590885162, 0.22488181293010712, 0.44976362586021423, 0.22488181293010712, 0.9296777844429016, 0.30509519577026367, 0.30509519577026367, 0.13075508177280426, 0.13075508177280426, 0.04358502849936485, 0.0871700569987297, 0.18346452713012695, 0.5503935813903809, 0.18346452713012695, 0.225554957985878, 0.07518498599529266, 0.15036997199058533, 0.07518498599529266, 0.451109915971756, 0.8370775580406189, 0.6906223297119141, 0.1381244659423828, 0.1381244659423828, 0.37464478611946106, 0.37464478611946106, 0.9348190426826477, 0.7814399600028992, 0.8475493788719177, 0.29854822158813477, 0.29854822158813477, 0.29854822158813477, 0.2307405024766922, 0.2307405024766922, 0.2307405024766922, 0.2307405024766922, 0.8981485962867737, 0.3027231693267822, 0.5045385956764221, 0.10090772062540054, 0.6894540786743164, 0.3447270393371582, 0.7790748476982117, 0.800994336605072, 0.8163450360298157, 0.5278648734092712, 0.781114399433136, 0.5349695086479187, 0.356646329164505, 0.9804648160934448, 0.4928678572177887, 0.9348040223121643, 0.9303689002990723, 0.2618829607963562, 0.5237659215927124, 0.1493382751941681, 0.2986765503883362, 0.1493382751941681, 0.1493382751941681, 0.1493382751941681, 0.1493382751941681, 0.7393379807472229, 0.7983132600784302, 0.1910373568534851, 0.1910373568534851, 0.1910373568534851, 0.1910373568534851, 0.28655603528022766, 0.7179343104362488, 0.10256204754114151, 0.10256204754114151, 0.10256204754114151, 0.7014931440353394, 0.17537328600883484, 0.17537328600883484, 0.30610543489456177, 0.30610543489456177, 0.30610543489456177, 0.353315532207489, 0.353315532207489, 0.2889036536216736, 0.2889036536216736, 0.2889036536216736, 0.9264274835586548, 0.6955583691596985, 0.17388959228992462, 0.08694479614496231, 0.08694479614496231, 0.5299193859100342, 0.6666998863220215, 0.2404608130455017, 0.4809216260910034, 0.06011520326137543, 0.12023040652275085, 0.06011520326137543, 0.4319317042827606, 0.4319317042827606, 0.2605302035808563, 0.2605302035808563, 0.2605302035808563, 0.13026510179042816, 0.927901029586792, 0.7446362972259521, 0.24821209907531738, 0.46727073192596436, 0.1557569056749344, 0.46727073192596436, 0.7403807640075684, 0.9269667267799377, 0.42311033606529236, 0.1813330054283142, 0.12088867276906967, 0.060444336384534836, 0.24177734553813934, 0.1298503875732422, 0.1298503875732422, 0.17313385009765625, 0.04328346252441406, 0.2597007751464844, 0.04328346252441406, 0.04328346252441406, 0.08656692504882812, 0.7423582673072815, 0.363871693611145, 0.363871693611145, 0.3696025013923645, 0.12320083379745483, 0.49280333518981934, 0.5290215611457825, 0.5290215611457825, 0.5278632044792175, 0.6908254623413086, 0.39532470703125, 0.2635498046875, 0.13177490234375, 0.47374406456947327, 0.23687203228473663, 0.4012196362018585, 0.20060981810092926, 0.4012196362018585, 0.6040459871292114, 0.3020229935646057, 0.16140668094158173, 0.32281336188316345, 0.16140668094158173, 0.242110013961792, 0.08070334047079086, 0.12314734607934952, 0.36944204568862915, 0.36944204568862915, 0.12314734607934952, 0.9305112361907959, 0.8461239337921143, 0.8370802402496338, 0.08172678202390671, 0.24518033862113953, 0.40863388776779175, 0.16345356404781342, 0.08172678202390671, 0.6666908860206604, 0.05696869269013405, 0.7405930161476135, 0.05696869269013405, 0.1139373853802681, 0.05696869269013405, 0.841690719127655, 0.332346647977829, 0.08308666199445724, 0.24925997853279114, 0.08308666199445724, 0.24925997853279114, 0.08308666199445724, 0.24239656329154968, 0.24239656329154968, 0.24239656329154968, 0.24239656329154968, 0.32392990589141846, 0.04049123823642731, 0.16196495294570923, 0.20245619118213654, 0.12147371470928192, 0.08098247647285461, 0.04049123823642731, 0.04049123823642731, 0.3668707609176636, 0.3668707609176636, 0.14214284718036652, 0.37904757261276245, 0.33166661858558655, 0.09476189315319061, 0.09476189315319061, 0.8459292054176331, 0.42184776067733765, 0.08436954766511917, 0.42184776067733765, 0.08436954766511917, 0.6908239722251892, 0.7343728542327881, 0.841688871383667, 0.9663223028182983, 0.6857200860977173, 0.4320811331272125, 0.4320811331272125, 0.18192283809185028, 0.5457684993743896, 0.18192283809185028, 0.1388239860534668, 0.1388239860534668, 0.5552959442138672, 0.1388239860534668, 0.6172875165939331, 0.20576250553131104, 0.7983134388923645, 0.690824568271637, 0.7815865874290466, 0.7816781997680664, 0.32954490184783936, 0.43939322233200073, 0.21969661116600037, 0.3707447350025177, 0.18537236750125885, 0.18537236750125885, 0.09268618375062943, 0.09268618375062943, 0.18606692552566528, 0.09303346276283264, 0.37213385105133057, 0.37213385105133057, 0.4144567847251892, 0.05180709809064865, 0.2072283923625946, 0.1036141961812973, 0.05180709809064865, 0.1036141961812973, 0.1036141961812973, 0.4226236641407013, 0.10565591603517532, 0.21131183207035065, 0.10565591603517532, 0.10565591603517532, 0.10565591603517532, 0.13644450902938843, 0.3411112427711487, 0.4775557518005371, 0.06822225451469421, 0.3096214532852173, 0.10320715606212616, 0.20641431212425232, 0.3096214532852173, 0.10320715606212616, 0.6802811622619629, 0.6908257007598877, 0.7823386788368225, 0.15587396919727325, 0.15587396919727325, 0.623495876789093, 0.10909035801887512, 0.21818071603775024, 0.4363614320755005, 0.10909035801887512, 0.10909035801887512, 0.10909035801887512, 0.7811257839202881, 0.6796839237213135, 0.3744254410266876, 0.3744254410266876, 0.6908249855041504, 0.8370785117149353, 0.7412844300270081, 0.8400574326515198, 0.20238982141017914, 0.6071694493293762, 0.8416918516159058, 0.630336582660675, 0.21011218428611755, 0.18586847186088562, 0.3097807765007019, 0.46467119455337524, 0.03097807802259922, 0.8416908979415894, 0.23571528494358063, 0.3142870366573334, 0.1571435183286667, 0.07857175916433334, 0.07857175916433334, 0.8185667991638184, 0.7811800837516785, 0.8729783892631531, 0.849638044834137, 0.28675714135169983, 0.07168928533792496, 0.5018249750137329, 0.07168928533792496, 0.18842068314552307, 0.18842068314552307, 0.5652620792388916, 0.18842068314552307, 0.7790762782096863, 0.21226418018341064, 0.21226418018341064, 0.4245283603668213, 0.4631492793560028, 0.3087661862373352, 0.7590664625167847, 0.7334249019622803, 0.09992694109678268, 0.19985388219356537, 0.29978084564208984, 0.29978084564208984, 0.09992694109678268, 0.09992694109678268, 0.935363233089447, 0.33890241384506226, 0.11296746879816055, 0.11296746879816055, 0.33890241384506226, 0.11296746879816055, 0.8871201872825623, 0.7818953394889832, 0.493356853723526, 0.6908256411552429, 0.6441685557365417, 0.8145256042480469, 0.20363140106201172, 0.21872380375862122, 0.6561713814735413, 0.4928799569606781, 0.3566420078277588, 0.3566420078277588, 0.08776155859231949, 0.26328468322753906, 0.17552311718463898, 0.17552311718463898, 0.26328468322753906, 0.8470802903175354, 0.4781719148159027, 0.4781719148159027, 0.7952858209609985, 0.6441993117332458, 0.740708589553833, 0.4322197735309601, 0.4322197735309601, 0.43218252062797546, 0.43218252062797546, 0.5655592083930969, 0.18851973116397858, 0.18851973116397858, 0.8416909575462341, 0.23932550847530365, 0.11966275423765182, 0.3589882552623749, 0.05983137711882591, 0.05983137711882591, 0.11966275423765182, 0.5399554967880249, 0.13498887419700623, 0.26997774839401245, 0.09252883493900299, 0.7402306795120239, 0.18505766987800598, 0.7819628119468689, 0.7816291451454163, 0.9304713010787964, 0.2240704745054245, 0.448140949010849, 0.2240704745054245, 0.22228817641735077, 0.44457635283470154, 0.22228817641735077, 0.23023217916488647, 0.11511608958244324, 0.46046435832977295, 0.11511608958244324, 0.11511608958244324, 0.6039949655532837, 0.30199748277664185, 0.5405401587486267, 0.27027007937431335, 0.6888746619224548, 0.3444373309612274, 0.23982858657836914, 0.5995714664459229, 0.11991429328918457, 0.699339747428894, 0.1748349368572235, 0.10735994577407837, 0.10735994577407837, 0.7515196204185486, 0.5101200938224792, 0.30607205629348755, 0.10202401876449585, 0.9305589199066162, 0.21946193277835846, 0.21946193277835846, 0.21946193277835846, 0.21946193277835846, 0.21946193277835846, 0.07315397262573242, 0.910370945930481, 0.7824374437332153, 0.7363884449005127, 0.6434542536735535, 0.06587747484445572, 0.19763241708278656, 0.5270197987556458, 0.13175494968891144, 0.06587747484445572, 0.26015809178352356, 0.5203161835670471, 0.927130937576294, 0.7401350736618042, 0.11951611936092377, 0.3585483729839325, 0.11951611936092377, 0.23903223872184753, 0.11951611936092377, 0.7398800253868103, 0.1253013014793396, 0.2506026029586792, 0.3759039044380188, 0.1253013014793396, 0.1253013014793396, 0.8651587963104248, 0.9306222796440125, 0.6438068151473999, 0.837077260017395, 0.5522139668464661, 0.18407131731510162, 0.13533328473567963, 0.5413331389427185, 0.13533328473567963, 0.13533328473567963, 0.1567334681749344, 0.7836673855781555, 0.6445749998092651, 0.7790745496749878, 0.4592623710632324, 0.15308746695518494, 0.15308746695518494, 0.3061749339103699, 0.3387373387813568, 0.11291244626045227, 0.22582489252090454, 0.3387373387813568, 0.7423579096794128, 0.17122310400009155, 0.3424462080001831, 0.17122310400009155, 0.3424462080001831, 0.841694176197052, 0.2872895896434784, 0.5745791792869568, 0.7362937927246094, 0.8160658478736877, 0.8470582962036133, 0.666091799736023, 0.6504861116409302, 0.16262152791023254, 0.8416928648948669, 0.12052778899669647, 0.24105557799339294, 0.3615833818912506, 0.24105557799339294, 0.26025211811065674, 0.5205042362213135, 0.6442235708236694, 0.06865435093641281, 0.32038697600364685, 0.06865435093641281, 0.06865435093641281, 0.13730870187282562, 0.13730870187282562, 0.20596304535865784, 0.12274282425642014, 0.24548564851284027, 0.3682284653186798, 0.24548564851284027, 0.7811936140060425, 0.16447605192661285, 0.41119012236595154, 0.41119012236595154, 0.8011437058448792, 0.13352395594120026, 0.26483818888664246, 0.35311758518218994, 0.26483818888664246, 0.08827939629554749, 0.08827939629554749, 0.7254204154014587, 0.24180680513381958, 0.5979399085044861, 0.1195879802107811, 0.05979399010539055, 0.17938196659088135, 0.05979399010539055, 0.8471247553825378, 0.8986469507217407, 0.6908252835273743, 0.7814698815345764, 0.9646022915840149, 0.4940451383590698, 0.19011825323104858, 0.38023650646209717, 0.38023650646209717, 0.7393592596054077, 0.5278629064559937, 0.29294002056121826, 0.29294002056121826, 0.29294002056121826, 0.1898804008960724, 0.3797608017921448, 0.3797608017921448, 0.0949402004480362, 0.876060962677002, 0.4201909601688385, 0.14006365835666656, 0.28012731671333313, 0.14006365835666656, 0.9351414442062378, 0.7548306584358215, 0.2516102194786072, 0.8860951066017151, 0.2362816482782364, 0.7088449597358704, 0.9376398921012878, 0.6124247908592224, 0.1531061977148056, 0.1531061977148056, 0.8392339944839478, 0.27162405848503113, 0.13581202924251556, 0.20371805131435394, 0.27162405848503113, 0.06790601462125778, 0.6802355647087097, 0.9653329849243164, 0.8648059368133545, 0.2550959289073944, 0.3826439082622528, 0.1913219541311264, 0.0637739822268486, 0.0637739822268486, 0.2925831377506256, 0.2925831377506256, 0.2925831377506256, 0.5287902355194092, 0.6908252835273743], \"Term\": [\"ability\", \"ability\", \"able\", \"able\", \"able\", \"able\", \"able\", \"accelerate\", \"access\", \"access\", \"ach\", \"ach\", \"acoustic\", \"acquisition\", \"active\", \"activity\", \"additional\", \"additional\", \"additional\", \"additional\", \"additional\", \"address\", \"advanced\", \"advanced\", \"advanced\", \"advantage\", \"aerospace\", \"agency\", \"airambulance\", \"airbase\", \"airborne\", \"airborne\", \"airborne\", \"aircraft\", \"aircraft\", \"aircraft\", \"aircraft\", \"aircraft\", \"aircraft\", \"aircraft\", \"aircraft\", \"airframer\", \"allow\", \"allow\", \"allow\", \"allow\", \"allow\", \"allow\", \"allow\", \"already\", \"already\", \"already\", \"already\", \"already\", \"already\", \"amgh\", \"amphibious\", \"ample\", \"ample\", \"angle\", \"angle\", \"annual\", \"anti\", \"anti\", \"anticipate\", \"appeal\", \"appeal\", \"arranos\", \"artificial\", \"artificial\", \"assemble\", \"assemble\", \"assembly\", \"asset\", \"asset\", \"asset\", \"automatic\", \"automatic\", \"automatic\", \"automatic\", \"automatic\", \"autonomous\", \"autonomous\", \"autonomous\", \"autonomous\", \"autonomously\", \"autonomously\", \"autonomously\", \"autonomously\", \"availability\", \"avionic\", \"avionic\", \"award\", \"awareness\", \"awareness\", \"babcock\", \"babcock\", \"baggage\", \"base\", \"base\", \"base\", \"base\", \"base\", \"base\", \"bearingless\", \"begin\", \"begin\", \"begin\", \"begin\", \"behaviour\", \"believe\", \"benefit\", \"benefit\", \"benefit\", \"benefit\", \"benefit\", \"big\", \"big\", \"blade\", \"blade\", \"blade\", \"boom\", \"brainerd\", \"buy\", \"cabin\", \"cabin\", \"calm\", \"campaign\", \"campaign\", \"capability\", \"capability\", \"capability\", \"capability\", \"capability\", \"captain\", \"capture\", \"capture\", \"carry\", \"carry\", \"carry\", \"carry\", \"catch\", \"category\", \"category\", \"caution\", \"ceiling\", \"cellular\", \"centrifugal\", \"certification\", \"certification\", \"certification\", \"certification\", \"certified\", \"challenge\", \"challenging\", \"client\", \"close\", \"cold\", \"collect\", \"collective\", \"coming\", \"command\", \"committee\", \"communication\", \"company\", \"company\", \"company\", \"company\", \"company\", \"company\", \"compartment\", \"compliance\", \"composite\", \"composite\", \"compressor\", \"condition\", \"condition\", \"condition\", \"condition\", \"condition\", \"configure\", \"configure\", \"configure\", \"confine\", \"connect\", \"consist\", \"consortium\", \"contact\", \"continually\", \"continue\", \"continue\", \"continue\", \"continue\", \"continue\", \"contract\", \"contract\", \"corvette\", \"country\", \"critical\", \"critical\", \"critical\", \"critical\", \"crosswind\", \"crowd\", \"cruise\", \"cruise\", \"cruise\", \"cruise\", \"customer\", \"customer\", \"customer\", \"customer\", \"customer\", \"customer\", \"datum\", \"datum\", \"datum\", \"datum\", \"datum\", \"deal\", \"debut\", \"delivery\", \"delivery\", \"delivery\", \"delivery\", \"demand\", \"demand\", \"demand\", \"demand\", \"demo\", \"demonstrator\", \"demonstrator\", \"demonstrator\", \"demonstrator\", \"design\", \"design\", \"design\", \"design\", \"design\", \"design\", \"design\", \"develop\", \"develop\", \"develop\", \"develop\", \"develop\", \"develop\", \"diameter\", \"difference\", \"difficult\", \"director\", \"director\", \"dispatch\", \"dispatch\", \"display\", \"display\", \"display\", \"display\", \"distribute\", \"double\", \"downlink\", \"drone\", \"drone\", \"drone\", \"dual\", \"dual\", \"earth\", \"effectiveness\", \"embed\", \"end\", \"end\", \"end\", \"end\", \"enforcement\", \"engine\", \"engine\", \"engine\", \"engine\", \"engine\", \"engine\", \"engine\", \"enhance\", \"equipment\", \"equipment\", \"equipment\", \"equivalent\", \"estimate\", \"european\", \"eurotec\", \"eventual\", \"eventual\", \"exceptionally\", \"execute\", \"executive\", \"exercise\", \"exhibitor\", \"expect\", \"expect\", \"expect\", \"expect\", \"expect\", \"experience\", \"experience\", \"extend\", \"extend\", \"extend\", \"extend\", \"extra\", \"extremely\", \"factory\", \"family\", \"family\", \"fastfin\", \"feature\", \"feature\", \"feature\", \"feature\", \"feature\", \"feature\", \"fin\", \"final\", \"fine\", \"finland\", \"flat\", \"flat\", \"flat\", \"floor\", \"floor\", \"floor\", \"fly\", \"fly\", \"fly\", \"fly\", \"fly\", \"fly\", \"fms\", \"foot\", \"foot\", \"freezing\", \"french\", \"french\", \"french\", \"french\", \"french_navy\", \"full\", \"full\", \"full\", \"full\", \"full\", \"fully\", \"fully\", \"gas\", \"gas\", \"gas\", \"gas\", \"generator\", \"generous\", \"generous\", \"ground\", \"ground\", \"ground\", \"ground\", \"ground\", \"growth\", \"guide\", \"happy\", \"hcare\", \"helipad\", \"helipad\", \"hem\", \"hem\", \"heritage\", \"hoist\", \"horsepower\", \"hostile\", \"hot\", \"hot\", \"hover\", \"hover\", \"hover\", \"however\", \"identification\", \"impact\", \"improve\", \"improve\", \"improve\", \"improvement\", \"improvement\", \"improvement\", \"inch\", \"include\", \"include\", \"include\", \"include\", \"include\", \"include\", \"incorporate\", \"incorporate\", \"incorporate\", \"increase\", \"increase\", \"increase\", \"increase\", \"increase\", \"indicate\", \"industry\", \"industry\", \"industry\", \"initially\", \"initially\", \"initiative\", \"innovate\", \"input\", \"instal\", \"instal\", \"instal\", \"installation\", \"installation\", \"installation\", \"installation\", \"integral\", \"integration\", \"integration\", \"integration\", \"intelligence\", \"intelligence\", \"intended\", \"investment\", \"issue\", \"istre\", \"job\", \"land\", \"land\", \"lapland\", \"law\", \"legislative\", \"lengthy\", \"less\", \"less\", \"load\", \"load\", \"load\", \"load\", \"load\", \"load\", \"local\", \"locate\", \"long\", \"long\", \"long\", \"long\", \"long\", \"look\", \"look\", \"look\", \"look\", \"maiden\", \"maiden\", \"maiden\", \"man\", \"man\", \"man\", \"manage\", \"manage\", \"management\", \"management\", \"management\", \"manufacture\", \"manufacturer\", \"manufacturer\", \"manufacturer\", \"manufacturer\", \"margin\", \"maritime\", \"market\", \"market\", \"market\", \"market\", \"market\", \"marketing\", \"marketing\", \"maximum\", \"maximum\", \"maximum\", \"maximum\", \"mcas\", \"measure\", \"measure\", \"meet\", \"meet\", \"meet\", \"member\", \"methodology\", \"military\", \"military\", \"military\", \"military\", \"military\", \"mission\", \"mission\", \"mission\", \"mission\", \"mission\", \"mission\", \"mission\", \"mission\", \"mistral\", \"mode\", \"mode\", \"model\", \"model\", \"model\", \"modify\", \"modify\", \"monitored\", \"multi\", \"naval\", \"naval\", \"naval\", \"navy\", \"navy\", \"necessary\", \"necessary\", \"necessary\", \"network\", \"network\", \"next\", \"next\", \"next\", \"next\", \"next\", \"noise\", \"noise\", \"noise\", \"noise\", \"northern\", \"note\", \"notice\", \"number\", \"number\", \"number\", \"number\", \"number\", \"often\", \"oil\", \"oil\", \"oil\", \"oil\", \"oil\", \"opening\", \"operate\", \"operate\", \"operate\", \"operate\", \"operate\", \"operate\", \"operating\", \"operating\", \"operating\", \"operating\", \"operation\", \"operation\", \"operation\", \"operation\", \"operation\", \"operation\", \"operation\", \"operation\", \"operational\", \"operational\", \"operator\", \"operator\", \"operator\", \"operator\", \"operator\", \"opportunity\", \"order\", \"order\", \"order\", \"order\", \"original\", \"output\", \"overall\", \"oversize\", \"ownership\", \"particular\", \"particular\", \"particularly\", \"particularly\", \"particularly\", \"passenger\", \"passenger\", \"passenger\", \"passenger\", \"patient\", \"patient\", \"pattern\", \"paving\", \"payback\", \"pedal\", \"percent\", \"percent\", \"percent\", \"perform\", \"perform\", \"perform\", \"perform\", \"perform\", \"performance\", \"performance\", \"performance\", \"performance\", \"pilot\", \"pilot\", \"pilot\", \"pilot\", \"pilot\", \"pilot\", \"pilot\", \"place\", \"place\", \"place\", \"place\", \"place\", \"place\", \"plan\", \"plan\", \"plan\", \"plan\", \"platform\", \"platform\", \"platform\", \"platform\", \"platform\", \"please\", \"pleased\", \"positive\", \"pound\", \"pound\", \"pound\", \"power\", \"power\", \"power\", \"power\", \"power\", \"power\", \"precision\", \"premium\", \"preserve\", \"preserve\", \"previous\", \"previously\", \"principal\", \"probably\", \"problem\", \"problem\", \"procedure\", \"produce\", \"produce\", \"production\", \"production\", \"production\", \"production\", \"productive\", \"program\", \"program\", \"program\", \"program\", \"program\", \"project\", \"promote\", \"propel\", \"propose\", \"prototype\", \"prototype\", \"prototype\", \"prototype\", \"provide\", \"provide\", \"provide\", \"provide\", \"purpose\", \"quality\", \"quality\", \"quality\", \"quick\", \"quick\", \"racer\", \"ramp\", \"range\", \"range\", \"range\", \"range\", \"range\", \"range\", \"reauthorization\", \"receive\", \"receive\", \"receive\", \"receive\", \"receive\", \"receiver\", \"recognition\", \"reconstruct\", \"redundancy\", \"refine\", \"regard\", \"regard\", \"regulatory\", \"regulatory\", \"reliable\", \"remote\", \"remote\", \"requirement\", \"requirement\", \"requirement\", \"requirement\", \"requirement\", \"responsible\", \"return\", \"return\", \"reveal\", \"ride\", \"risk\", \"robust\", \"robust\", \"role\", \"role\", \"roll\", \"roll\", \"roll\", \"rovaniemi\", \"safety\", \"safety\", \"safety\", \"safety\", \"safety\", \"safety\", \"safran\", \"safran\", \"safran\", \"sale\", \"sale\", \"sale\", \"satisfied\", \"satisfy\", \"scandinavian\", \"sea\", \"sea\", \"sea\", \"search\", \"search\", \"search\", \"seat\", \"seat\", \"seat\", \"seat\", \"seat\", \"sector\", \"sector\", \"secure\", \"secure\", \"security\", \"security\", \"segment\", \"segment\", \"segment\", \"sell\", \"sell\", \"sensor\", \"sensor\", \"sensor\", \"serial\", \"serial\", \"serial\", \"series\", \"service\", \"service\", \"service\", \"service\", \"service\", \"service\", \"session\", \"setting\", \"setz\", \"shaft\", \"ship\", \"ship\", \"ship\", \"ship\", \"ship\", \"shore\", \"shore\", \"short\", \"shortage\", \"single\", \"single\", \"single\", \"single\", \"single\", \"situational\", \"size\", \"size\", \"size\", \"size\", \"size\", \"slate\", \"slide\", \"smooth\", \"sole\", \"solution\", \"solution\", \"specific\", \"specific\", \"specific\", \"specific\", \"speed\", \"speed\", \"stability\", \"stand\", \"standard\", \"standard\", \"standard\", \"standard\", \"start\", \"start\", \"start\", \"start\", \"statement\", \"station\", \"station\", \"station\", \"station\", \"stay\", \"stream\", \"stream\", \"stretcher\", \"study\", \"subcontractor\", \"submarine\", \"successfully\", \"successfully\", \"suitable\", \"surveillance\", \"surveillance\", \"surveillance\", \"surveillance\", \"survivor\", \"survivor\", \"sweep\", \"system\", \"system\", \"system\", \"system\", \"system\", \"system\", \"system\", \"tactical\", \"tactical\", \"tactical\", \"tactical\", \"tailboom\", \"target\", \"target\", \"target\", \"team\", \"team\", \"technology\", \"technology\", \"technology\", \"technology\", \"technology\", \"temperature\", \"temperature\", \"test\", \"test\", \"test\", \"test\", \"test\", \"thale\", \"threat\", \"timeline\", \"torque\", \"tracking\", \"transmission\", \"transport\", \"transport\", \"transport\", \"tsm\", \"tune\", \"useful\", \"useful\", \"useful\", \"utility\", \"utility\", \"utility\", \"utility\", \"vane\", \"variety\", \"variety\", \"variety\", \"variety\", \"venue\", \"vessel\", \"vessel\", \"video\", \"view\", \"view\", \"warfare\", \"way\", \"way\", \"way\", \"weakness\", \"well\", \"well\", \"well\", \"well\", \"well\", \"win\", \"window\", \"wing\", \"work\", \"work\", \"work\", \"work\", \"work\", \"workload\", \"workload\", \"workload\", \"world\", \"yesterday\"]}, \"R\": 30, \"lambda.step\": 0.01, \"plot.opts\": {\"xlab\": \"PC1\", \"ylab\": \"PC2\"}, \"topic.order\": [1, 6, 2, 4, 8, 3, 5, 7, 9]};\n",
       "\n",
       "function LDAvis_load_lib(url, callback){\n",
       "  var s = document.createElement('script');\n",
       "  s.src = url;\n",
       "  s.async = true;\n",
       "  s.onreadystatechange = s.onload = callback;\n",
       "  s.onerror = function(){console.warn(\"failed to load library \" + url);};\n",
       "  document.getElementsByTagName(\"head\")[0].appendChild(s);\n",
       "}\n",
       "\n",
       "if(typeof(LDAvis) !== \"undefined\"){\n",
       "   // already loaded: just create the visualization\n",
       "   !function(LDAvis){\n",
       "       new LDAvis(\"#\" + \"ldavis_el222101123231324964536311571\", ldavis_el222101123231324964536311571_data);\n",
       "   }(LDAvis);\n",
       "}else if(typeof define === \"function\" && define.amd){\n",
       "   // require.js is available: use it to load d3/LDAvis\n",
       "   require.config({paths: {d3: \"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min\"}});\n",
       "   require([\"d3\"], function(d3){\n",
       "      window.d3 = d3;\n",
       "      LDAvis_load_lib(\"https://cdn.rawgit.com/bmabey/pyLDAvis/files/ldavis.v1.0.0.js\", function(){\n",
       "        new LDAvis(\"#\" + \"ldavis_el222101123231324964536311571\", ldavis_el222101123231324964536311571_data);\n",
       "      });\n",
       "    });\n",
       "}else{\n",
       "    // require.js not available: dynamically load d3 & LDAvis\n",
       "    LDAvis_load_lib(\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\", function(){\n",
       "         LDAvis_load_lib(\"https://cdn.rawgit.com/bmabey/pyLDAvis/files/ldavis.v1.0.0.js\", function(){\n",
       "                 new LDAvis(\"#\" + \"ldavis_el222101123231324964536311571\", ldavis_el222101123231324964536311571_data);\n",
       "            })\n",
       "         });\n",
       "}\n",
       "</script>"
      ],
      "text/plain": [
       "PreparedData(topic_coordinates=              x         y  topics  cluster       Freq\n",
       "topic                                                \n",
       "0     -0.056756  0.129712       1        1  19.548685\n",
       "5     -0.127227 -0.092441       2        1  19.226637\n",
       "1      0.107419 -0.089523       3        1  15.521890\n",
       "3     -0.166992 -0.000640       4        1  14.480228\n",
       "7      0.044896  0.078245       5        1  13.300121\n",
       "2      0.073355 -0.035957       6        1   7.619549\n",
       "4      0.083439  0.077485       7        1   5.520299\n",
       "6      0.044499 -0.051050       8        1   4.716927\n",
       "8     -0.002632 -0.015831       9        1   0.065664, topic_info=            Term       Freq      Total Category  logprob  loglift\n",
       "290       system  43.000000  43.000000  Default  30.0000  30.0000\n",
       "168        cabin  21.000000  21.000000  Default  29.0000  29.0000\n",
       "1436       video  10.000000  10.000000  Default  28.0000  28.0000\n",
       "66      increase  13.000000  13.000000  Default  27.0000  27.0000\n",
       "105   production  32.000000  32.000000  Default  26.0000  26.0000\n",
       "...          ...        ...        ...      ...      ...      ...\n",
       "197          end   0.003112   8.060051   Topic9  -6.9327  -0.5311\n",
       "6       aircraft   0.003551  61.520634   Topic9  -6.8007  -2.4315\n",
       "255      percent   0.003125   9.103463   Topic9  -6.9287  -0.6487\n",
       "295      utility   0.003137  10.532946   Topic9  -6.9246  -0.7905\n",
       "212          fly   0.003156  17.548687   Topic9  -6.9187  -1.2951\n",
       "\n",
       "[578 rows x 6 columns], token_table=      Topic      Freq       Term\n",
       "term                            \n",
       "749       3  0.260106    ability\n",
       "749       5  0.520212    ability\n",
       "0         1  0.205852       able\n",
       "0         2  0.411703       able\n",
       "0         3  0.205852       able\n",
       "...     ...       ...        ...\n",
       "493       2  0.292583   workload\n",
       "493       6  0.292583   workload\n",
       "493       8  0.292583   workload\n",
       "1082      8  0.528790      world\n",
       "557       5  0.690825  yesterday\n",
       "\n",
       "[931 rows x 3 columns], R=30, lambda_step=0.01, plot_opts={'xlab': 'PC1', 'ylab': 'PC2'}, topic_order=[1, 6, 2, 4, 8, 3, 5, 7, 9])"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pyLDAvis.gensim\n",
    "pyLDAvis.enable_notebook(local=False)\n",
    "vis = pyLDAvis.gensim.prepare(lda_model, corpus, dictionary=lda_model.id2word)\n",
    "vis "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**`NB`:** Si tu voies les mêmes mots se répéter dans plusieurs Topics, c'est parce que le \"k\" est trop grand. De même, D'après les PCAs, certains Topics sont très proches donc portent la même information. !CONCLUSION! la methode utilisée pour le K-topic optimal n'est pas efficace (à revoir ensemble)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Final model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.rawgit.com/bmabey/pyLDAvis/files/ldavis.v1.0.0.css\">\n",
       "\n",
       "\n",
       "<div id=\"ldavis_el22210112308752464187310678\"></div>\n",
       "<script type=\"text/javascript\">\n",
       "\n",
       "var ldavis_el22210112308752464187310678_data = {\"mdsDat\": {\"x\": [-0.04080143437939796, 0.06006182284285776, 0.0018383009134095947, 0.10973468917910949, -0.13083337855597899], \"y\": [0.08233416134397724, -0.11206261952137524, -0.03951673186869845, 0.07990363421880536, -0.010658444172708812], \"topics\": [1, 2, 3, 4, 5], \"cluster\": [1, 1, 1, 1, 1], \"Freq\": [26.537853240966797, 20.521493911743164, 18.30875587463379, 18.186464309692383, 16.445432662963867]}, \"tinfo\": {\"Term\": [\"cabin\", \"production\", \"video\", \"system\", \"drone\", \"gas\", \"oil\", \"military\", \"fastfin\", \"assembly\", \"executive\", \"expect\", \"end\", \"feature\", \"increase\", \"plan\", \"assemble\", \"demonstrator\", \"autonomous\", \"blade\", \"test\", \"target\", \"order\", \"sale\", \"speed\", \"session\", \"develop\", \"manufacturer\", \"operator\", \"platform\", \"cold\", \"lapland\", \"exceptionally\", \"behaviour\", \"stretcher\", \"setz\", \"intend\", \"region\", \"warfare\", \"global\", \"eurotec\", \"client\", \"ensure\", \"team\", \"lengthy\", \"scandinavian\", \"series\", \"extremely\", \"slide\", \"airambulance\", \"northern\", \"finland\", \"buy\", \"inch\", \"rely\", \"activity\", \"submarine\", \"access\", \"captain\", \"difference\", \"temperature\", \"anti\", \"test\", \"patient\", \"display\", \"sensor\", \"carry\", \"equipment\", \"successfully\", \"highly\", \"campaign\", \"condition\", \"avionic\", \"ship\", \"serial\", \"operate\", \"aircraft\", \"target\", \"operation\", \"pilot\", \"cabin\", \"fly\", \"customer\", \"utility\", \"include\", \"base\", \"degree\", \"capability\", \"light\", \"production\", \"mission\", \"already\", \"feature\", \"well\", \"fastfin\", \"session\", \"return\", \"study\", \"issue\", \"stability\", \"reveal\", \"shortage\", \"annual\", \"challenge\", \"member\", \"risk\", \"investment\", \"principal\", \"project\", \"become\", \"address\", \"legislative\", \"initiative\", \"venue\", \"reauthorization\", \"committee\", \"world\", \"factory\", \"margin\", \"recognize\", \"numerous\", \"exhibitor\", \"contract\", \"note\", \"drone\", \"industry\", \"increase\", \"demonstration\", \"system\", \"safety\", \"operator\", \"number\", \"performance\", \"pilot\", \"mission\", \"generation\", \"integration\", \"continue\", \"aircraft\", \"customer\", \"prototype\", \"operation\", \"work\", \"service\", \"program\", \"engine\", \"technology\", \"include\", \"focus\", \"video\", \"distribute\", \"receiver\", \"assembly\", \"digital\", \"communication\", \"situational\", \"mcas\", \"agency\", \"tsm\", \"local\", \"armed\", \"force\", \"methodology\", \"stream\", \"transmission\", \"mainly\", \"donauw\", \"axis\", \"enforcement\", \"cellular\", \"connect\", \"reconstruct\", \"accessibility\", \"automatically\", \"downlink\", \"collect\", \"employee\", \"specialisation\", \"ring\", \"view\", \"problem\", \"much\", \"autopilot\", \"airborne\", \"site\", \"platform\", \"capture\", \"network\", \"design\", \"french\", \"give\", \"allow\", \"way\", \"early\", \"surveillance\", \"aircraft\", \"system\", \"ship\", \"reduce\", \"company\", \"receive\", \"blade\", \"include\", \"capacity\", \"develop\", \"next\", \"operation\", \"mission\", \"military\", \"drone\", \"production\", \"manufacturer\", \"work\", \"test\", \"fully\", \"output\", \"ramp\", \"however\", \"pattern\", \"locate\", \"regulatory\", \"fine\", \"corvette\", \"execute\", \"tune\", \"compliance\", \"exercise\", \"istre\", \"monitored\", \"amgh\", \"button\", \"acquisition\", \"discussion\", \"decide\", \"helicoptere\", \"uncertain\", \"internal\", \"powerplant\", \"ago\", \"consumption\", \"technological\", \"yet\", \"emerge\", \"none\", \"gas\", \"oil\", \"demonstrator\", \"impact\", \"regard\", \"big\", \"military\", \"sale\", \"autonomously\", \"order\", \"land\", \"man\", \"autonomous\", \"segment\", \"able\", \"meet\", \"manufacturer\", \"sell\", \"meanwhile\", \"look\", \"requirement\", \"base\", \"term\", \"tactical\", \"target\", \"develop\", \"market\", \"currently\", \"operator\", \"system\", \"large\", \"aircraft\", \"engine\", \"available\", \"mission\", \"trial\", \"customer\", \"include\", \"executive\", \"racer\", \"window\", \"active\", \"coming\", \"ride\", \"baggage\", \"oversize\", \"tracking\", \"compartment\", \"double\", \"smooth\", \"refine\", \"sweep\", \"shaft\", \"speed\", \"end\", \"slate\", \"propel\", \"centrifugal\", \"wing\", \"embed\", \"estimate\", \"ceiling\", \"horsepower\", \"guide\", \"vane\", \"hoist\", \"compressor\", \"arranos\", \"pre\", \"foot\", \"cabin\", \"cruise\", \"join\", \"production\", \"pound\", \"passenger\", \"ach\", \"expect\", \"assemble\", \"plan\", \"feature\", \"blade\", \"aircraft\", \"seat\", \"flat\", \"composite\", \"model\", \"incorporate\", \"deliver\", \"configure\", \"fly\", \"particularly\", \"percent\", \"design\", \"engine\", \"power\", \"test\", \"utility\", \"operation\", \"well\", \"company\", \"accumulate\", \"next\"], \"Freq\": [19.0, 29.0, 11.0, 46.0, 13.0, 15.0, 16.0, 16.0, 7.0, 8.0, 5.0, 14.0, 7.0, 15.0, 14.0, 13.0, 8.0, 9.0, 13.0, 9.0, 31.0, 11.0, 11.0, 10.0, 5.0, 6.0, 14.0, 10.0, 20.0, 9.0, 5.840999603271484, 3.4071595668792725, 3.4071600437164307, 3.407161235809326, 3.4071433544158936, 3.4070942401885986, 3.391542434692383, 3.3791041374206543, 4.71955680847168, 3.3726437091827393, 3.339125633239746, 3.3305139541625977, 3.3014492988586426, 5.825224876403809, 2.595918655395508, 2.59590744972229, 2.595903158187866, 2.5958917140960693, 2.5958869457244873, 2.595879316329956, 2.5958774089813232, 2.595832586288452, 2.576972723007202, 2.545239210128784, 2.544112205505371, 2.4181318283081055, 2.4158661365509033, 4.213761329650879, 1.784644603729248, 1.7846416234970093, 5.840898036956787, 4.673338413238525, 18.833099365234375, 3.408267021179199, 5.743429183959961, 5.751662254333496, 7.160158634185791, 4.190921306610107, 4.2185139656066895, 4.1181511878967285, 3.407186508178711, 5.792569637298584, 3.349231243133545, 7.018462657928467, 5.040024757385254, 5.715795516967773, 14.289441108703613, 5.645588397979736, 8.171792030334473, 7.3025312423706055, 7.311744689941406, 6.660557270050049, 7.458738327026367, 5.012991428375244, 6.601021766662598, 6.125368595123291, 4.18065881729126, 4.82747220993042, 5.016005992889404, 6.4912614822387695, 5.907628536224365, 5.010346412658691, 4.993702411651611, 4.2197465896606445, 7.096134185791016, 5.397663116455078, 3.959351062774658, 3.937670946121216, 3.8941221237182617, 3.239464282989502, 3.2390406131744385, 3.151428461074829, 3.144080877304077, 3.1354408264160156, 3.1216986179351807, 3.087613344192505, 2.468132972717285, 3.0420196056365967, 3.628303289413452, 2.417613983154297, 2.3949241638183594, 2.3916938304901123, 2.391396999359131, 2.3878097534179688, 2.3832101821899414, 2.371511936187744, 1.6968015432357788, 1.6967966556549072, 1.6967875957489014, 1.6744868755340576, 1.6709948778152466, 1.6608598232269287, 3.880577564239502, 1.6589410305023193, 9.738447189331055, 4.562031269073486, 8.688455581665039, 3.0596437454223633, 22.59511375427246, 8.480886459350586, 8.649197578430176, 5.423007011413574, 5.42435359954834, 7.003525733947754, 6.7867326736450195, 3.1650538444519043, 4.174403667449951, 4.030755043029785, 9.400465965270996, 5.597447395324707, 4.53405237197876, 4.655246257781982, 3.983250617980957, 3.8342223167419434, 3.7955682277679443, 3.6664042472839355, 3.405848264694214, 3.244218349456787, 3.240157127380371, 10.192781448364258, 3.0309908390045166, 3.0212321281433105, 6.5451340675354, 2.9196999073028564, 2.324648141860962, 2.309800863265991, 2.303363800048828, 2.3027865886688232, 2.29958176612854, 2.2991132736206055, 2.298722982406616, 2.2972118854522705, 2.2654175758361816, 2.8210220336914062, 1.6012885570526123, 1.5982121229171753, 1.5981229543685913, 1.5961970090866089, 1.5899591445922852, 1.5878456830978394, 1.587257981300354, 1.5855408906936646, 1.5827854871749878, 1.5825248956680298, 1.5813039541244507, 1.581132411956787, 1.5799376964569092, 1.578920602798462, 1.5772900581359863, 3.027212142944336, 3.0248985290527344, 2.940920829772949, 2.943603277206421, 3.5920028686523438, 4.456598281860352, 4.749942302703857, 2.314617156982422, 2.314195394515991, 8.131227493286133, 3.5770041942596436, 3.5167429447174072, 4.610240936279297, 3.2064197063446045, 3.7574002742767334, 4.149646759033203, 13.015336036682129, 9.4170560836792, 5.250533580780029, 3.7535269260406494, 4.9963765144348145, 3.7258002758026123, 3.747056007385254, 5.166725158691406, 2.8189938068389893, 3.9252047538757324, 3.6008925437927246, 4.383135795593262, 4.141473293304443, 3.583296298980713, 3.3919475078582764, 3.664299726486206, 3.1567065715789795, 3.177330493927002, 3.0777413845062256, 3.1771528720855713, 3.161231756210327, 3.1517505645751953, 3.139216661453247, 2.4777166843414307, 2.4777162075042725, 4.0264458656311035, 1.703397512435913, 1.7033965587615967, 1.7033921480178833, 1.7033934593200684, 1.7033874988555908, 1.7033851146697998, 1.703378438949585, 1.7033816576004028, 1.703384518623352, 1.667456030845642, 1.6648091077804565, 1.6649882793426514, 1.6649298667907715, 1.6634113788604736, 1.6623189449310303, 1.6618205308914185, 1.6616096496582031, 1.6614644527435303, 1.6599156856536865, 1.6611590385437012, 1.6588375568389893, 1.6586881875991821, 1.6580474376678467, 10.719734191894531, 10.711227416992188, 6.173387050628662, 3.167102098464966, 3.159459114074707, 3.1521668434143066, 9.9331636428833, 6.189700126647949, 4.462136745452881, 6.98371696472168, 3.91280460357666, 4.323761940002441, 7.227471351623535, 4.631018161773682, 5.167425632476807, 3.9835784435272217, 5.307604789733887, 3.1538100242614746, 2.1113882064819336, 4.632392406463623, 5.452887535095215, 8.043210983276367, 3.1250674724578857, 4.297109127044678, 5.3538594245910645, 6.03850793838501, 6.165535926818848, 3.9376070499420166, 6.147174835205078, 8.482522964477539, 3.931007146835327, 8.462162971496582, 5.688986778259277, 3.913890838623047, 5.295281410217285, 3.938319444656372, 3.9835317134857178, 3.9328994750976562, 5.214025974273682, 3.050097942352295, 2.3245298862457275, 2.321627378463745, 2.3203585147857666, 2.319702386856079, 2.31913161277771, 2.3188817501068115, 2.318465232849121, 2.317847728729248, 2.3176536560058594, 2.3175244331359863, 2.3162457942962646, 2.315295934677124, 2.3104875087738037, 4.554889678955078, 5.420309543609619, 1.6002304553985596, 1.5937831401824951, 1.592005729675293, 1.5908317565917969, 1.5904731750488281, 1.589044213294983, 1.5884649753570557, 1.5882136821746826, 1.587526798248291, 1.587260365486145, 1.585248351097107, 1.5857125520706177, 1.5849032402038574, 3.1234302520751953, 3.0531928539276123, 11.9489107131958, 4.851204872131348, 3.0493462085723877, 16.90795135498047, 3.840023994445801, 4.120244026184082, 3.242776870727539, 7.637180328369141, 4.601059436798096, 6.79905366897583, 7.702999591827393, 4.577253341674805, 12.831231117248535, 4.137063026428223, 3.157688617706299, 3.1124556064605713, 3.7659549713134766, 3.111670970916748, 3.289400577545166, 3.8323733806610107, 5.281402587890625, 3.058187246322632, 3.8477087020874023, 5.409855365753174, 5.381570339202881, 3.752481460571289, 5.515446662902832, 3.782510757446289, 4.711699962615967, 3.925189733505249, 3.899444818496704, 3.309105634689331, 3.3033084869384766], \"Total\": [19.0, 29.0, 11.0, 46.0, 13.0, 15.0, 16.0, 16.0, 7.0, 8.0, 5.0, 14.0, 7.0, 15.0, 14.0, 13.0, 8.0, 9.0, 13.0, 9.0, 31.0, 11.0, 11.0, 10.0, 5.0, 6.0, 14.0, 10.0, 20.0, 9.0, 6.443353176116943, 4.009487152099609, 4.009488582611084, 4.009491920471191, 4.00948429107666, 4.009485721588135, 4.008702278137207, 4.006779670715332, 5.60237979888916, 4.00614595413208, 4.002721309661865, 4.001877307891846, 3.9991660118103027, 7.172514915466309, 3.198221206665039, 3.198214530944824, 3.198209285736084, 3.198202610015869, 3.198202133178711, 3.198197841644287, 3.1981983184814453, 3.19817852973938, 3.197265148162842, 3.1931824684143066, 3.193164587020874, 3.181148052215576, 3.1809921264648438, 5.551050662994385, 2.3869242668151855, 2.3869211673736572, 7.9050164222717285, 6.369058132171631, 31.32793426513672, 4.740324020385742, 8.70891284942627, 9.375731468200684, 12.587587356567383, 6.307700157165527, 6.369326114654541, 6.319975852966309, 4.779630661010742, 10.912079811096191, 4.734531402587891, 15.505449295043945, 9.316286087036133, 11.73033618927002, 57.998634338378906, 11.841630935668945, 23.841514587402344, 19.55680274963379, 19.74480438232422, 16.967121124267578, 21.73623275756836, 10.020355224609375, 21.536272048950195, 20.224260330200195, 7.00970458984375, 10.946972846984863, 12.427389144897461, 29.289012908935547, 23.18621826171875, 15.391094207763672, 15.975112915039062, 13.759203910827637, 7.706432342529297, 6.1555633544921875, 4.6183600425720215, 4.617387294769287, 4.614945411682129, 3.8497424125671387, 3.8497023582458496, 3.845097064971924, 3.844712972640991, 3.844256639480591, 3.8435308933258057, 3.842482805252075, 3.078406572341919, 3.840315341949463, 4.602855682373047, 3.0757391452789307, 3.074540853500366, 3.074373245239258, 3.0743484497070312, 3.074164867401123, 3.0739188194274902, 3.073293447494507, 2.307070016860962, 2.3070664405822754, 2.307058572769165, 2.305887222290039, 2.3056857585906982, 2.305158853530884, 5.389044761657715, 2.3050613403320312, 13.717631340026855, 6.846889972686768, 14.540972709655762, 4.5718092918396, 46.662330627441406, 16.972803115844727, 20.06358528137207, 11.490681648254395, 11.644003868103027, 19.55680274963379, 23.18621826171875, 5.314859390258789, 9.353373527526855, 9.166831970214844, 57.998634338378906, 21.73623275756836, 13.978721618652344, 23.841514587402344, 14.653406143188477, 13.140117645263672, 12.370892524719238, 21.37484359741211, 10.697888374328613, 21.536272048950195, 7.771805763244629, 11.049656867980957, 3.7031357288360596, 3.7030792236328125, 8.106990814208984, 3.7095894813537598, 2.9685237407684326, 2.9684460163116455, 2.9684600830078125, 2.9683945178985596, 2.968390703201294, 2.968379020690918, 2.968414545059204, 2.9684178829193115, 2.9682695865631104, 3.723975658416748, 2.2338297367095947, 2.2338340282440186, 2.233828067779541, 2.2338216304779053, 2.2337582111358643, 2.233752489089966, 2.2337520122528076, 2.2337374687194824, 2.2337732315063477, 2.233733654022217, 2.2337067127227783, 2.233712911605835, 2.2337441444396973, 2.2337465286254883, 2.2337255477905273, 4.514196395874023, 4.514220237731934, 4.479405403137207, 4.520320415496826, 6.029152870178223, 8.375898361206055, 9.763298988342285, 3.738461971282959, 3.739665985107422, 21.042491912841797, 6.8012237548828125, 6.692758560180664, 9.863451957702637, 6.016673564910889, 7.557146072387695, 9.121147155761719, 57.998634338378906, 46.662330627441406, 15.505449295043945, 8.207475662231445, 15.865726470947266, 9.224617958068848, 9.599991798400879, 21.536272048950195, 5.268830299377441, 14.680736541748047, 11.294483184814453, 23.841514587402344, 23.18621826171875, 16.862703323364258, 13.717631340026855, 29.289012908935547, 10.657831192016602, 14.653406143188477, 31.32793426513672, 3.8578996658325195, 3.8613831996917725, 3.8613362312316895, 3.8612983226776123, 3.087421417236328, 3.0874221324920654, 5.405871868133545, 2.3130857944488525, 2.313084602355957, 2.3130815029144287, 2.313084125518799, 2.3130812644958496, 2.313077926635742, 2.313075065612793, 2.313081979751587, 2.313086748123169, 2.3129334449768066, 2.3110849857330322, 2.31292462348938, 2.3129143714904785, 2.3110105991363525, 2.312906265258789, 2.3129067420959473, 2.3129069805145264, 2.3129043579101562, 2.3108205795288086, 2.312904119491577, 2.312896251678467, 2.312894821166992, 2.31288743019104, 15.376166343688965, 16.145893096923828, 9.257412910461426, 4.592157363891602, 4.59215784072876, 4.592132091522217, 16.862703323364258, 10.043208122253418, 7.005821704864502, 11.626644134521484, 6.22546911239624, 7.040989398956299, 13.17164134979248, 7.802433967590332, 9.28095817565918, 6.938922882080078, 10.657831192016602, 5.367002010345459, 3.1021268367767334, 9.228686332702637, 11.664508819580078, 20.224260330200195, 5.400858402252197, 8.547121047973633, 11.841630935668945, 14.680736541748047, 15.476564407348633, 7.645027160644531, 20.06358528137207, 46.662330627441406, 7.7135844230651855, 57.998634338378906, 21.37484359741211, 7.796915054321289, 23.18621826171875, 8.481139183044434, 21.73623275756836, 21.536272048950195, 5.88294792175293, 3.687990427017212, 2.9579620361328125, 2.9580612182617188, 2.9582667350769043, 2.958369493484497, 2.9582626819610596, 2.9584596157073975, 2.9582128524780273, 2.9583396911621094, 2.95833420753479, 2.958439350128174, 2.9582901000976562, 2.958564519882202, 2.958544969558716, 5.953794479370117, 7.4144792556762695, 2.2261910438537598, 2.2271623611450195, 2.227168560028076, 2.2262349128723145, 2.2262344360351562, 2.227407455444336, 2.2272162437438965, 2.227247714996338, 2.2275123596191406, 2.227360486984253, 2.226259469985962, 2.227595567703247, 2.2277352809906006, 4.492187023162842, 4.459165096282959, 19.74480438232422, 7.446658611297607, 4.50034236907959, 29.289012908935547, 5.99498176574707, 6.715126037597656, 5.225429534912109, 14.995999336242676, 8.091021537780762, 13.524423599243164, 15.975112915039062, 9.599991798400879, 57.998634338378906, 8.298898696899414, 5.227996826171875, 5.158244609832764, 7.590345859527588, 5.2271809577941895, 5.953775405883789, 8.395636558532715, 16.967121124267578, 5.3076558113098145, 9.1593017578125, 21.042491912841797, 21.37484359741211, 9.061241149902344, 31.32793426513672, 10.020355224609375, 23.841514587402344, 13.759203910827637, 15.865726470947266, 6.801519393920898, 11.294483184814453], \"Category\": [\"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\"], \"logprob\": [30.0, 29.0, 28.0, 27.0, 26.0, 25.0, 24.0, 23.0, 22.0, 21.0, 20.0, 19.0, 18.0, 17.0, 16.0, 15.0, 14.0, 13.0, 12.0, 11.0, 10.0, 9.0, 8.0, 7.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0, -5.39709997177124, -5.936100006103516, -5.936100006103516, -5.936100006103516, -5.936100006103516, -5.936100006103516, -5.940700054168701, -5.944399833679199, -5.610300064086914, -5.946300029754639, -5.956299781799316, -5.958899974822998, -5.967599868774414, -5.399799823760986, -6.208000183105469, -6.208099842071533, -6.208099842071533, -6.208099842071533, -6.208099842071533, -6.208099842071533, -6.208099842071533, -6.208099842071533, -6.215400218963623, -6.227799892425537, -6.2281999588012695, -6.2789998054504395, -6.279900074005127, -5.723599910736084, -6.582799911499023, -6.582799911499023, -5.39709997177124, -5.620100021362305, -4.226399898529053, -5.935800075531006, -5.413899898529053, -5.412499904632568, -5.19350004196167, -5.729100227355957, -5.722499847412109, -5.746600151062012, -5.936100006103516, -5.405399799346924, -5.9532999992370605, -5.213399887084961, -5.544600009918213, -5.418799877166748, -4.502500057220459, -5.431099891662598, -5.061299800872803, -5.173799991607666, -5.172500133514404, -5.2657999992370605, -5.152599811553955, -5.550000190734863, -5.274799823760986, -5.349599838256836, -5.731500148773193, -5.587699890136719, -5.5493998527526855, -5.291500091552734, -5.385700225830078, -5.55049991607666, -5.553800106048584, -5.7221999168396, -4.945300102233887, -5.218900203704834, -5.528800010681152, -5.534299850463867, -5.545400142669678, -5.729499816894531, -5.729599952697754, -5.756999969482422, -5.759399890899658, -5.7621002197265625, -5.766499996185303, -5.777500152587891, -6.001399993896484, -5.792399883270264, -5.616099834442139, -6.02209997177124, -6.031499862670898, -6.032899856567383, -6.0329999923706055, -6.0345001220703125, -6.036399841308594, -6.041399955749512, -6.376100063323975, -6.376100063323975, -6.376200199127197, -6.389400005340576, -6.391499996185303, -6.397600173950195, -5.548900127410889, -6.39870023727417, -4.628799915313721, -5.3871002197265625, -4.7428998947143555, -5.786600112915039, -3.7871999740600586, -4.767099857330322, -4.747399806976318, -5.214200019836426, -5.214000225067139, -4.958499908447266, -4.9899001121521, -5.752699851989746, -5.475900173187256, -5.510900020599365, -4.664100170135498, -5.182600021362305, -5.3933000564575195, -5.3668999671936035, -5.522799968719482, -5.5609002113342285, -5.571100234985352, -5.6057000160217285, -5.6793999671936035, -5.728000164031982, -5.729300022125244, -4.469099998474121, -5.6819000244140625, -5.685100078582764, -4.912099838256836, -5.719299793243408, -5.947199821472168, -5.95359992980957, -5.956399917602539, -5.956699848175049, -5.958099842071533, -5.9583001136779785, -5.958399772644043, -5.959099769592285, -5.9730000495910645, -5.753699779510498, -6.320000171661377, -6.321899890899658, -6.322000026702881, -6.323200225830078, -6.327099800109863, -6.328400135040283, -6.328800201416016, -6.329899787902832, -6.331600189208984, -6.3317999839782715, -6.332499980926514, -6.332699775695801, -6.333399772644043, -6.334099769592285, -6.335100173950195, -5.683199882507324, -5.683899879455566, -5.712100028991699, -5.71120023727417, -5.5121002197265625, -5.29640007019043, -5.232699871063232, -5.951600074768066, -5.951700210571289, -4.695099830627441, -5.516300201416016, -5.533299922943115, -5.262499809265137, -5.6255998611450195, -5.467100143432617, -5.367800235748291, -4.224699974060059, -4.548299789428711, -5.132500171661377, -5.468100070953369, -5.18209981918335, -5.475500106811523, -5.469799995422363, -5.148600101470947, -5.75439977645874, -5.423399925231934, -5.5096001625061035, -5.313000202178955, -5.369699954986572, -5.514500141143799, -5.569399833679199, -5.492199897766113, -5.641300201416016, -5.634799957275391, -5.666600227355957, -5.6280999183654785, -5.6331000328063965, -5.636099815368652, -5.640100002288818, -5.876800060272217, -5.876800060272217, -5.391200065612793, -6.251500129699707, -6.251500129699707, -6.251500129699707, -6.251500129699707, -6.251500129699707, -6.251500129699707, -6.251500129699707, -6.251500129699707, -6.251500129699707, -6.272799968719482, -6.274400234222412, -6.2743000984191895, -6.2743000984191895, -6.275199890136719, -6.275899887084961, -6.276199817657471, -6.276299953460693, -6.276400089263916, -6.277299880981445, -6.276599884033203, -6.2779998779296875, -6.27810001373291, -6.278500080108643, -4.4120001792907715, -4.412799835205078, -4.963799953460693, -5.63129997253418, -5.633699893951416, -5.636000156402588, -4.4882001876831055, -4.96120023727417, -5.28849983215332, -4.8404998779296875, -5.4197998046875, -5.320000171661377, -4.80620002746582, -5.251299858093262, -5.14169979095459, -5.401899814605713, -5.114999771118164, -5.635499954223633, -6.036799907684326, -5.250999927520752, -5.087900161743164, -4.6992998123168945, -5.644599914550781, -5.326200008392334, -5.106299877166748, -4.985899925231934, -4.965099811553955, -5.41349983215332, -4.968100070953369, -4.646100044250488, -5.415200233459473, -4.648499965667725, -5.045599937438965, -5.419600009918213, -5.117300033569336, -5.413300037384033, -5.401899814605713, -5.414700031280518, -5.032100200653076, -5.568299770355225, -5.839900016784668, -5.84119987487793, -5.841700077056885, -5.8420000076293945, -5.842299938201904, -5.842400074005127, -5.842599868774414, -5.842800140380859, -5.842899799346924, -5.8429999351501465, -5.843500137329102, -5.843900203704834, -5.8460001945495605, -5.167300224304199, -4.993299961090088, -6.2133002281188965, -6.217400074005127, -6.218500137329102, -6.219200134277344, -6.219399929046631, -6.220300197601318, -6.220699787139893, -6.220900058746338, -6.22130012512207, -6.221499919891357, -6.222700119018555, -6.222400188446045, -6.222899913787842, -5.54449987411499, -5.567299842834473, -4.2027997970581055, -5.1041998863220215, -5.56850004196167, -3.8557000160217285, -5.3379998207092285, -5.267600059509277, -5.506999969482422, -4.650400161743164, -5.157199859619141, -4.76669979095459, -4.641900062561035, -5.162399768829346, -4.1315999031066895, -5.263500213623047, -5.533599853515625, -5.548099994659424, -5.357500076293945, -5.548299789428711, -5.492800235748291, -5.340000152587891, -5.0192999839782715, -5.5655999183654785, -5.335999965667725, -4.995200157165527, -5.000500202178955, -5.361000061035156, -4.975900173187256, -5.353099822998047, -5.133399963378906, -5.316100120544434, -5.3225998878479, -5.486800193786621, -5.488500118255615], \"loglift\": [30.0, 29.0, 28.0, 27.0, 26.0, 25.0, 24.0, 23.0, 22.0, 21.0, 20.0, 19.0, 18.0, 17.0, 16.0, 15.0, 14.0, 13.0, 12.0, 11.0, 10.0, 9.0, 8.0, 7.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0, 1.2285000085830688, 1.1638000011444092, 1.1638000011444092, 1.1638000011444092, 1.1638000011444092, 1.1638000011444092, 1.1593999862670898, 1.1562000513076782, 1.1550999879837036, 1.1545000076293945, 1.145300030708313, 1.1430000066757202, 1.1348999738693237, 1.118499994277954, 1.117900013923645, 1.117900013923645, 1.117900013923645, 1.117900013923645, 1.117900013923645, 1.117900013923645, 1.117900013923645, 1.117900013923645, 1.1109000444412231, 1.0997999906539917, 1.0994000434875488, 1.05239999294281, 1.0514999628067017, 1.0509999990463257, 1.0357999801635742, 1.0357999801635742, 1.0240000486373901, 1.0169999599456787, 0.8177000284194946, 0.9966999888420105, 0.9103000164031982, 0.8379999995231628, 0.7623999714851379, 0.9176999926567078, 0.9146000146865845, 0.8982999920845032, 0.988099992275238, 0.6933000087738037, 0.980400025844574, 0.5339999794960022, 0.7121999859809875, 0.607699990272522, -0.07429999858140945, 0.5859000086784363, 0.25589999556541443, 0.34150001406669617, 0.33320000767707825, 0.39149999618530273, 0.25699999928474426, 0.6340000033378601, 0.14409999549388885, 0.13220000267028809, 0.8098000288009644, 0.5078999996185303, 0.41929998993873596, -0.18019999563694, -0.040699999779462814, 0.20430000126361847, 0.16369999945163727, 0.14470000565052032, 1.5011999607086182, 1.452299952507019, 1.4297000169754028, 1.4244999885559082, 1.4139000177383423, 1.4111000299453735, 1.4110000133514404, 1.3847999572753906, 1.3825000524520874, 1.3798999786376953, 1.3756999969482422, 1.3650000095367432, 1.3626999855041504, 1.3507000207901, 1.3458000421524048, 1.342900037765503, 1.333899974822998, 1.3325999975204468, 1.3324999809265137, 1.3309999704360962, 1.329200029373169, 1.3244999647140503, 1.2764999866485596, 1.2764999866485596, 1.2764999866485596, 1.263700008392334, 1.2617000341415405, 1.2559000253677368, 1.2553000450134277, 1.2547999620437622, 1.2410999536514282, 1.1777000427246094, 1.0686999559402466, 1.1821000576019287, 0.8585000038146973, 0.8899000287055969, 0.7422999739646912, 0.8327999711036682, 0.8198000192642212, 0.5568000078201294, 0.35510000586509705, 1.0654000043869019, 0.7768999934196472, 0.7620999813079834, -0.23600000143051147, 0.22699999809265137, 0.4578000009059906, -0.04969999939203262, 0.28110000491142273, 0.35199999809265137, 0.40220001339912415, -0.179299995303154, 0.4390999972820282, -0.3091999888420105, 0.7088000178337097, 1.6171000003814697, 1.497499942779541, 1.4943000078201294, 1.4838000535964966, 1.458400011062622, 1.4532999992370605, 1.4469000101089478, 1.444100022315979, 1.4438999891281128, 1.4424999952316284, 1.4422999620437622, 1.4421000480651855, 1.441499948501587, 1.4276000261306763, 1.4200999736785889, 1.36489999294281, 1.3630000352859497, 1.3629000186920166, 1.3617000579833984, 1.357800006866455, 1.3565000295639038, 1.3560999631881714, 1.3550000190734863, 1.3532999753952026, 1.3530999422073364, 1.3523999452590942, 1.3523000478744507, 1.3515000343322754, 1.3509000539779663, 1.3497999906539917, 1.298200011253357, 1.2973999977111816, 1.2769999504089355, 1.2688000202178955, 1.179900050163269, 1.0667999982833862, 0.9772999882698059, 1.218400001525879, 1.217900037765503, 0.746999979019165, 1.0551999807357788, 1.0542999505996704, 0.9372000098228455, 1.0684000253677368, 0.9990000128746033, 0.9101999998092651, 0.20350000262260437, 0.09740000218153, 0.6148999929428101, 0.9154000282287598, 0.5422999858856201, 0.7911999821662903, 0.7570000290870667, 0.2703000009059906, 1.0723999738693237, 0.37869998812675476, 0.5547000169754028, 0.004100000020116568, -0.024700000882148743, 0.14900000393390656, 0.3005000054836273, -0.3808000087738037, 0.48100000619888306, 0.16920000314712524, -0.6225000023841858, 1.5104000568389893, 1.5044000148773193, 1.5013999938964844, 1.497499942779541, 1.4845000505447388, 1.4845000505447388, 1.4098999500274658, 1.3984999656677246, 1.3984999656677246, 1.3984999656677246, 1.3984999656677246, 1.3984999656677246, 1.3984999656677246, 1.3984999656677246, 1.3984999656677246, 1.3984999656677246, 1.3773000240325928, 1.3765000104904175, 1.3758000135421753, 1.3758000135421753, 1.3756999969482422, 1.3741999864578247, 1.373900055885315, 1.3738000392913818, 1.3737000226974487, 1.3737000226974487, 1.3734999895095825, 1.3720999956130981, 1.371999979019165, 1.3716000318527222, 1.3437999486923218, 1.294100046157837, 1.299299955368042, 1.3329999446868896, 1.3305000066757202, 1.3281999826431274, 1.1753000020980835, 1.2204999923706055, 1.2533999681472778, 1.1948000192642212, 1.2401000261306763, 1.2168999910354614, 1.1043000221252441, 1.182800054550171, 1.118899941444397, 1.1495000123977661, 1.0073000192642212, 1.1727999448776245, 1.3198000192642212, 1.0152000188827515, 0.944100022315979, 0.7824000120162964, 1.1574000120162964, 1.016800045967102, 0.9107000231742859, 0.816100001335144, 0.7840999960899353, 1.0410000085830688, 0.5216000080108643, -0.00039999998989515007, 1.030400037765503, -0.22030000388622284, 0.3808000087738037, 1.0153000354766846, 0.22779999673366547, 0.9373999834060669, 0.007699999958276749, 0.004100000020116568, 1.684399962425232, 1.6152000427246094, 1.5641000270843506, 1.5628999471664429, 1.5621999502182007, 1.561900019645691, 1.5616999864578247, 1.5614999532699585, 1.561400055885315, 1.5611000061035156, 1.5611000061035156, 1.5609999895095825, 1.5605000257492065, 1.559999942779541, 1.5578999519348145, 1.5372999906539917, 1.4917999505996704, 1.475000023841858, 1.4704999923706055, 1.4694000482559204, 1.469099998474121, 1.4687999486923218, 1.4673999547958374, 1.4671000242233276, 1.4670000076293945, 1.4664000272750854, 1.4663000106811523, 1.465499997138977, 1.4651999473571777, 1.4646999835968018, 1.4416999816894531, 1.426300048828125, 1.302899956703186, 1.3766000270843506, 1.4158999919891357, 1.2556999921798706, 1.3596999645233154, 1.3166999816894531, 1.3279999494552612, 1.1303999423980713, 1.2407000064849854, 1.117400050163269, 1.075700044631958, 1.0644999742507935, 0.29660001397132874, 1.1089999675750732, 1.3008999824523926, 1.2999000549316406, 1.104200005531311, 1.2863999605178833, 1.2117999792099, 1.020900011062622, 0.6380000114440918, 1.2538000345230103, 0.9377999901771545, 0.44679999351501465, 0.42590001225471497, 0.9235000014305115, 0.0681999996304512, 0.8309000134468079, 0.18369999527931213, 0.5508000254631042, 0.4018000066280365, 1.0846999883651733, 0.5756999850273132]}, \"token.table\": {\"Topic\": [1, 2, 3, 4, 1, 5, 3, 1, 2, 4, 5, 2, 4, 5, 4, 5, 1, 2, 3, 4, 1, 1, 2, 3, 1, 2, 3, 4, 5, 1, 2, 3, 4, 1, 2, 3, 4, 5, 4, 2, 1, 2, 3, 5, 3, 5, 3, 5, 3, 1, 2, 3, 4, 1, 2, 4, 1, 3, 1, 2, 4, 1, 5, 3, 5, 1, 2, 3, 4, 2, 1, 4, 5, 3, 4, 5, 4, 1, 1, 5, 1, 2, 1, 2, 3, 4, 2, 3, 1, 2, 3, 1, 3, 4, 5, 3, 5, 2, 1, 1, 3, 5, 2, 3, 1, 2, 3, 4, 5, 5, 4, 3, 5, 5, 1, 2, 3, 5, 1, 4, 5, 3, 4, 1, 2, 4, 5, 2, 4, 4, 1, 2, 3, 5, 1, 3, 4, 5, 1, 2, 3, 4, 5, 4, 1, 5, 2, 3, 5, 2, 5, 2, 3, 4, 1, 2, 3, 4, 5, 1, 3, 4, 1, 3, 4, 1, 2, 3, 3, 3, 5, 3, 2, 3, 1, 2, 3, 5, 5, 4, 3, 2, 5, 3, 1, 2, 3, 4, 5, 1, 1, 3, 4, 5, 1, 1, 4, 5, 4, 2, 1, 2, 3, 5, 1, 2, 2, 1, 2, 3, 4, 5, 4, 1, 1, 3, 5, 1, 2, 3, 4, 5, 1, 2, 4, 2, 5, 3, 1, 2, 3, 4, 1, 2, 3, 4, 5, 2, 3, 2, 3, 5, 1, 5, 4, 1, 3, 4, 5, 5, 4, 4, 5, 1, 1, 2, 3, 4, 5, 1, 3, 5, 2, 3, 4, 5, 2, 3, 5, 2, 1, 2, 3, 1, 4, 2, 2, 4, 1, 5, 1, 4, 1, 1, 3, 4, 2, 1, 1, 2, 3, 4, 5, 3, 4, 1, 2, 3, 4, 5, 3, 1, 4, 2, 3, 4, 2, 1, 2, 3, 4, 5, 3, 4, 2, 4, 2, 3, 1, 2, 3, 4, 1, 2, 3, 4, 5, 1, 3, 5, 4, 2, 3, 2, 3, 1, 2, 3, 5, 4, 1, 2, 1, 2, 3, 4, 2, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 4, 5, 4, 5, 1, 5, 1, 2, 3, 5, 1, 5, 4, 1, 2, 5, 1, 2, 3, 4, 1, 2, 3, 4, 1, 3, 4, 5, 3, 4, 5, 1, 2, 5, 1, 2, 3, 4, 5, 4, 1, 5, 2, 1, 3, 1, 2, 3, 4, 5, 1, 2, 4, 5, 2, 3, 5, 1, 2, 3, 4, 5, 4, 2, 1, 2, 3, 3, 2, 3, 1, 2, 3, 5, 5, 4, 5, 1, 2, 4, 1, 1, 2, 3, 4, 2, 2, 5, 3, 2, 1, 2, 3, 4, 1, 4, 5, 1, 1, 2, 3, 4, 5, 1, 2, 4, 2, 3, 4, 1, 3, 5, 1, 2, 5, 1, 1, 2, 3, 4, 5, 2, 1, 5, 1, 3, 4, 2, 1, 2, 3, 3, 5, 1, 5, 3, 1, 5, 2, 3, 1, 2, 1, 1, 4, 1, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 1, 4, 1, 5, 4, 1, 2, 3, 5, 1, 5, 2, 4, 1, 2, 3, 4, 5, 5, 3, 1, 2, 3, 4, 3, 4, 4, 1, 3, 5, 5, 2, 3, 1, 3, 1, 3, 4, 1, 2, 3, 5, 5, 5, 1, 2, 3, 4, 5, 2, 4], \"Freq\": [0.10774749517440796, 0.21549499034881592, 0.10774749517440796, 0.5387374758720398, 0.7205843329429626, 0.18014608323574066, 0.8953460454940796, 0.1470259726047516, 0.1470259726047516, 0.2940519452095032, 0.44107791781425476, 0.1913718283176422, 0.1913718283176422, 0.5741154551506042, 0.8653944134712219, 0.6761185526847839, 0.6287038326263428, 0.6505036354064941, 0.6737648844718933, 0.8647136688232422, 0.9380282759666443, 0.16586078703403473, 0.16586078703403473, 0.6634431481361389, 0.24138499796390533, 0.1551760733127594, 0.22414320707321167, 0.13793428242206573, 0.22414320707321167, 0.10138438642024994, 0.10138438642024994, 0.5069219470024109, 0.3041531443595886, 0.3248631954193115, 0.1299452781677246, 0.1299452781677246, 0.19491791725158691, 0.19491791725158691, 0.8646454811096191, 0.7802923321723938, 0.7850454449653625, 0.1570090800523758, 0.6737603545188904, 0.8977727293968201, 0.3707813620567322, 0.6179689168930054, 0.8634523153305054, 0.12335032969713211, 0.8953619003295898, 0.22776204347610474, 0.07592068612575531, 0.15184137225151062, 0.531444787979126, 0.1427384316921234, 0.1427384316921234, 0.5709537267684937, 0.22122325003147125, 0.663669764995575, 0.25651171803474426, 0.25651171803474426, 0.5130234360694885, 0.6336424350738525, 0.21121414005756378, 0.8953266143798828, 0.6760724782943726, 0.29667338728904724, 0.14833669364452362, 0.14833669364452362, 0.3955645263195038, 0.6502501964569092, 0.7482244968414307, 0.6532912850379944, 0.2177637666463852, 0.41666701436042786, 0.10416675359010696, 0.5208337903022766, 0.8647027611732483, 0.9383019208908081, 0.3545236587524414, 0.6077548265457153, 0.6276635527610779, 0.20922118425369263, 0.45674726366996765, 0.18269890546798706, 0.18269890546798706, 0.18269890546798706, 0.3795908987522125, 0.56938636302948, 0.8378983736038208, 0.2674896717071533, 0.5349793434143066, 0.5561034083366394, 0.15888668596744537, 0.23833002150058746, 0.8979819416999817, 0.8953543305397034, 0.8980011940002441, 0.7803849577903748, 0.7496481537818909, 0.93119215965271, 0.8953701853752136, 0.6760715842247009, 0.6507676839828491, 0.6737355589866638, 0.18908683955669403, 0.18908683955669403, 0.31514471769332886, 0.12605789303779602, 0.25211578607559204, 0.6760548949241638, 0.8646475076675415, 0.38772881031036377, 0.5815932154655457, 0.8978290557861328, 0.5498493313789368, 0.18328312039375305, 0.18328312039375305, 0.18328312039375305, 0.35732847452163696, 0.2382189780473709, 0.4764379560947418, 0.8953545093536377, 0.8654934167861938, 0.1090889424085617, 0.4363557696342468, 0.2181778848171234, 0.2181778848171234, 0.7422465682029724, 0.1855616420507431, 0.8646462559700012, 0.13428841531276703, 0.13428841531276703, 0.13428841531276703, 0.6714420914649963, 0.13080398738384247, 0.26160797476768494, 0.5232159495353699, 0.13080398738384247, 0.32204291224479675, 0.27603679895401, 0.138018399477005, 0.18402452766895294, 0.09201226383447647, 0.8647099137306213, 0.5706374645233154, 0.2853187322616577, 0.16796065866947174, 0.16796065866947174, 0.5038819313049316, 0.656195342540741, 0.21873179078102112, 0.21604308485984802, 0.10802154242992401, 0.6481292247772217, 0.1425686627626419, 0.0950457751750946, 0.3801831007003784, 0.0950457751750946, 0.2376144379377365, 0.27246588468551636, 0.27246588468551636, 0.40869882702827454, 0.8378995060920715, 0.8087148070335388, 0.8647060990333557, 0.6889493465423584, 0.22964978218078613, 0.11482489109039307, 0.8101242184638977, 0.8953240513801575, 0.6760561466217041, 0.8953726887702942, 0.7289888262748718, 0.21869665384292603, 0.2646501660346985, 0.13232508301734924, 0.529300332069397, 0.13232508301734924, 0.8983779549598694, 0.8647172451019287, 0.8953576683998108, 0.134871244430542, 0.67435622215271, 0.8953520655632019, 0.18713587522506714, 0.18713587522506714, 0.14035190641880035, 0.2807038128376007, 0.23391984403133392, 0.7501564025878906, 0.6341455578804016, 0.1585363894701004, 0.1585363894701004, 0.8979048728942871, 0.7494900822639465, 0.7482250928878784, 0.8646474480628967, 0.849914014339447, 0.8646487593650818, 0.8676191568374634, 0.2000533491373062, 0.13336890935897827, 0.2000533491373062, 0.5334756374359131, 0.9380268454551697, 0.8669017553329468, 0.908332109451294, 0.312986820936203, 0.0625973641872406, 0.0625973641872406, 0.0625973641872406, 0.5007789134979248, 0.8646458387374878, 0.938033938407898, 0.19127784669399261, 0.19127784669399261, 0.5738335251808167, 0.41256260871887207, 0.11787503212690353, 0.05893751606345177, 0.11787503212690353, 0.2946875989437103, 0.12867023050785065, 0.38601067662239075, 0.38601067662239075, 0.224257230758667, 0.672771692276001, 0.6737595796585083, 0.14703236520290375, 0.2940647304058075, 0.588129460811615, 0.7776252031326294, 0.06503571569919586, 0.06503571569919586, 0.06503571569919586, 0.7153928875923157, 0.13007143139839172, 0.5644552111625671, 0.37630346417427063, 0.14941522479057312, 0.5976608991622925, 0.29883044958114624, 0.7488493919372559, 0.8978625535964966, 0.865422248840332, 0.6329138278961182, 0.15822845697402954, 0.15822845697402954, 0.8983678817749023, 0.8979692459106445, 0.7769407629966736, 0.6532877087593079, 0.21776257455348969, 0.9395015835762024, 0.325033038854599, 0.13929986953735352, 0.23216645419597626, 0.18573316931724548, 0.13929986953735352, 0.19130770862102509, 0.19130770862102509, 0.5739231109619141, 0.6189407110214233, 0.06877119094133377, 0.20631356537342072, 0.13754238188266754, 0.730258584022522, 0.14605170488357544, 0.14605170488357544, 0.6505443453788757, 0.32073989510536194, 0.4276531934738159, 0.10691329836845398, 0.7483718395233154, 0.8647127747535706, 0.6496867537498474, 0.8667491674423218, 0.8646498322486877, 0.22220531105995178, 0.6666159629821777, 0.160630464553833, 0.642521858215332, 0.7482253909111023, 0.25928282737731934, 0.25928282737731934, 0.5185656547546387, 0.6505391001701355, 0.9380214214324951, 0.40233713388442993, 0.08046742528676987, 0.16093485057353973, 0.241402268409729, 0.08046742528676987, 0.6737684011459351, 0.6477895975112915, 0.10835778713226318, 0.21671557426452637, 0.10835778713226318, 0.5417889356613159, 0.10835778713226318, 0.8953216671943665, 0.28405100107192993, 0.5681020021438599, 0.18765543401241302, 0.28148317337036133, 0.46913859248161316, 0.8669047355651855, 0.2584553062915802, 0.1292276531457901, 0.06461382657289505, 0.3876829445362091, 0.1292276531457901, 0.6737499833106995, 0.6447189450263977, 0.28822916746139526, 0.5764583349227905, 0.7805323004722595, 0.6737932562828064, 0.059302471578121185, 0.11860494315624237, 0.23720988631248474, 0.593024730682373, 0.25877439975738525, 0.30190348625183105, 0.17251627147197723, 0.21564534306526184, 0.04312906786799431, 0.3952389061450958, 0.131746307015419, 0.526985228061676, 0.8646472692489624, 0.22324392199516296, 0.6697317361831665, 0.26740357279777527, 0.5348071455955505, 0.17707760632038116, 0.17707760632038116, 0.35415521264076233, 0.26561641693115234, 0.8647199869155884, 0.9380281567573547, 0.867655873298645, 0.08702703565359116, 0.4351351857185364, 0.1740540713071823, 0.1740540713071823, 0.8674209117889404, 0.06193525344133377, 0.12387050688266754, 0.06193525344133377, 0.6812878251075745, 0.12387050688266754, 0.5114942789077759, 0.1704981029033661, 0.1704981029033661, 0.08524905145168304, 0.08524905145168304, 0.33554914593696594, 0.2097182273864746, 0.16777457296848297, 0.08388728648424149, 0.2097182273864746, 0.14952462911605835, 0.44857385754585266, 0.049841541796922684, 0.2990492582321167, 0.09968308359384537, 0.17201867699623108, 0.17201867699623108, 0.60206538438797, 0.08600933849811554, 0.776923656463623, 0.6760274767875671, 0.37681418657302856, 0.5652212500572205, 0.1489175260066986, 0.1489175260066986, 0.1489175260066986, 0.5956701040267944, 0.6328681111335754, 0.21095603704452515, 0.6477897763252258, 0.3275358974933624, 0.21835725009441376, 0.4367145001888275, 0.25764334201812744, 0.4294055700302124, 0.08588111400604248, 0.17176222801208496, 0.3579317033290863, 0.3579317033290863, 0.10226620733737946, 0.1533993035554886, 0.14788061380386353, 0.14788061380386353, 0.2218209207057953, 0.5175821185112, 0.5121219754219055, 0.40969759225845337, 0.10242439806461334, 0.1668061763048172, 0.1668061763048172, 0.6672247052192688, 0.11036016047000885, 0.11036016047000885, 0.11036016047000885, 0.2207203209400177, 0.4414406418800354, 0.864712655544281, 0.22260871529579163, 0.6678261756896973, 0.7811858654022217, 0.22152219712734222, 0.6645665764808655, 0.20485498011112213, 0.034142494201660156, 0.13656997680664062, 0.06828498840332031, 0.5804224014282227, 0.24250473082065582, 0.32333964109420776, 0.16166982054710388, 0.16166982054710388, 0.869025707244873, 0.21725642681121826, 0.8980036973953247, 0.28614920377731323, 0.35768648982048035, 0.14307460188865662, 0.21461190283298492, 0.8134511113166809, 0.7769331336021423, 0.6506352424621582, 0.32521671056747437, 0.2168111503124237, 0.4336223006248474, 0.810136616230011, 0.8673450946807861, 0.8953603506088257, 0.12184014171361923, 0.12184014171361923, 0.48736056685447693, 0.24368028342723846, 0.6760662198066711, 0.6532876491546631, 0.2177625447511673, 0.7487309575080872, 0.18498404324054718, 0.7399361729621887, 0.9395068287849426, 0.25719043612480164, 0.08573014289140701, 0.08573014289140701, 0.42865070700645447, 0.8661082983016968, 0.7792810201644897, 0.6760480999946594, 0.8953651189804077, 0.7807452082633972, 0.17675335705280304, 0.4713422954082489, 0.17675335705280304, 0.11783557385206223, 0.1991395503282547, 0.5974186658859253, 0.1991395503282547, 0.9380233883857727, 0.2409958392381668, 0.1204979196190834, 0.1204979196190834, 0.1204979196190834, 0.4819916784763336, 0.256330281496048, 0.128165140748024, 0.6408256888389587, 0.18632376194000244, 0.18632376194000244, 0.5589712858200073, 0.6399500966072083, 0.21331669390201569, 0.10665834695100784, 0.5366945266723633, 0.10733891278505325, 0.32201674580574036, 0.9380249381065369, 0.30441129207611084, 0.30441129207611084, 0.07610282301902771, 0.15220564603805542, 0.15220564603805542, 0.8122733235359192, 0.7482256293296814, 0.6760079860687256, 0.45145419239997864, 0.32246726751327515, 0.1289869099855423, 0.7802143692970276, 0.3581705391407013, 0.11939017474651337, 0.47756069898605347, 0.6737532019615173, 0.8983954787254333, 0.938027024269104, 0.6760321259498596, 0.8953567147254944, 0.16796010732650757, 0.8398005962371826, 0.7792729139328003, 0.8055906295776367, 0.7482259273529053, 0.8662907481193542, 0.6287346482276917, 0.6280099153518677, 0.31400495767593384, 0.21927066147327423, 0.43854132294654846, 0.32890599966049194, 0.6760035157203674, 0.08572225272655487, 0.492902934551239, 0.19287505745887756, 0.17144450545310974, 0.042861126363277435, 0.2339969128370285, 0.11699845641851425, 0.11699845641851425, 0.467993825674057, 0.5066869854927063, 0.42223912477493286, 0.8365266919136047, 0.13942110538482666, 0.864713728427887, 0.2804291844367981, 0.2804291844367981, 0.18695278465747833, 0.18695278465747833, 0.7590116858482361, 0.25300389528274536, 0.3703114986419678, 0.5554672479629517, 0.606487512588501, 0.06384078413248062, 0.09576117992401123, 0.06384078413248062, 0.19152235984802246, 0.6760838627815247, 0.8953233957290649, 0.11790868639945984, 0.11790868639945984, 0.23581737279891968, 0.47163474559783936, 0.6737657785415649, 0.8646464347839355, 0.8647129535675049, 0.49898430705070496, 0.09979686141014099, 0.39918744564056396, 0.8979238271713257, 0.6505832076072693, 0.9050054550170898, 0.22152337431907654, 0.6645700931549072, 0.8924778699874878, 0.4986144006252289, 0.3324095904827118, 0.2907145023345947, 0.21803587675094604, 0.14535725116729736, 0.2907145023345947, 0.6761412024497986, 0.8983777761459351, 0.27297407388687134, 0.27297407388687134, 0.2047305554151535, 0.13648703694343567, 0.06824351847171783, 0.8669004440307617, 0.8647167086601257], \"Term\": [\"able\", \"able\", \"able\", \"able\", \"access\", \"access\", \"accessibility\", \"accumulate\", \"accumulate\", \"accumulate\", \"accumulate\", \"ach\", \"ach\", \"ach\", \"acquisition\", \"active\", \"activity\", \"address\", \"agency\", \"ago\", \"airambulance\", \"airborne\", \"airborne\", \"airborne\", \"aircraft\", \"aircraft\", \"aircraft\", \"aircraft\", \"aircraft\", \"allow\", \"allow\", \"allow\", \"allow\", \"already\", \"already\", \"already\", \"already\", \"already\", \"amgh\", \"annual\", \"anti\", \"anti\", \"armed\", \"arranos\", \"assemble\", \"assemble\", \"assembly\", \"assembly\", \"automatically\", \"autonomous\", \"autonomous\", \"autonomous\", \"autonomous\", \"autonomously\", \"autonomously\", \"autonomously\", \"autopilot\", \"autopilot\", \"available\", \"available\", \"available\", \"avionic\", \"avionic\", \"axis\", \"baggage\", \"base\", \"base\", \"base\", \"base\", \"become\", \"behaviour\", \"big\", \"big\", \"blade\", \"blade\", \"blade\", \"button\", \"buy\", \"cabin\", \"cabin\", \"campaign\", \"campaign\", \"capability\", \"capability\", \"capability\", \"capability\", \"capacity\", \"capacity\", \"captain\", \"capture\", \"capture\", \"carry\", \"carry\", \"carry\", \"ceiling\", \"cellular\", \"centrifugal\", \"challenge\", \"client\", \"cold\", \"collect\", \"coming\", \"committee\", \"communication\", \"company\", \"company\", \"company\", \"company\", \"company\", \"compartment\", \"compliance\", \"composite\", \"composite\", \"compressor\", \"condition\", \"condition\", \"condition\", \"condition\", \"configure\", \"configure\", \"configure\", \"connect\", \"consumption\", \"continue\", \"continue\", \"continue\", \"continue\", \"contract\", \"contract\", \"corvette\", \"cruise\", \"cruise\", \"cruise\", \"cruise\", \"currently\", \"currently\", \"currently\", \"currently\", \"customer\", \"customer\", \"customer\", \"customer\", \"customer\", \"decide\", \"degree\", \"degree\", \"deliver\", \"deliver\", \"deliver\", \"demonstration\", \"demonstration\", \"demonstrator\", \"demonstrator\", \"demonstrator\", \"design\", \"design\", \"design\", \"design\", \"design\", \"develop\", \"develop\", \"develop\", \"difference\", \"digital\", \"discussion\", \"display\", \"display\", \"display\", \"distribute\", \"donauw\", \"double\", \"downlink\", \"drone\", \"drone\", \"early\", \"early\", \"early\", \"early\", \"embed\", \"emerge\", \"employee\", \"end\", \"end\", \"enforcement\", \"engine\", \"engine\", \"engine\", \"engine\", \"engine\", \"ensure\", \"equipment\", \"equipment\", \"equipment\", \"estimate\", \"eurotec\", \"exceptionally\", \"execute\", \"executive\", \"exercise\", \"exhibitor\", \"expect\", \"expect\", \"expect\", \"expect\", \"extremely\", \"factory\", \"fastfin\", \"feature\", \"feature\", \"feature\", \"feature\", \"feature\", \"fine\", \"finland\", \"flat\", \"flat\", \"flat\", \"fly\", \"fly\", \"fly\", \"fly\", \"fly\", \"focus\", \"focus\", \"focus\", \"foot\", \"foot\", \"force\", \"french\", \"french\", \"french\", \"fully\", \"gas\", \"gas\", \"gas\", \"gas\", \"gas\", \"generation\", \"generation\", \"give\", \"give\", \"give\", \"global\", \"guide\", \"helicoptere\", \"highly\", \"highly\", \"highly\", \"hoist\", \"horsepower\", \"however\", \"impact\", \"impact\", \"inch\", \"include\", \"include\", \"include\", \"include\", \"include\", \"incorporate\", \"incorporate\", \"incorporate\", \"increase\", \"increase\", \"increase\", \"increase\", \"industry\", \"industry\", \"industry\", \"initiative\", \"integration\", \"integration\", \"integration\", \"intend\", \"internal\", \"investment\", \"issue\", \"istre\", \"join\", \"join\", \"land\", \"land\", \"lapland\", \"large\", \"large\", \"large\", \"legislative\", \"lengthy\", \"light\", \"light\", \"light\", \"light\", \"light\", \"local\", \"locate\", \"look\", \"look\", \"look\", \"look\", \"look\", \"mainly\", \"man\", \"man\", \"manufacturer\", \"manufacturer\", \"manufacturer\", \"margin\", \"market\", \"market\", \"market\", \"market\", \"market\", \"mcas\", \"meanwhile\", \"meet\", \"meet\", \"member\", \"methodology\", \"military\", \"military\", \"military\", \"military\", \"mission\", \"mission\", \"mission\", \"mission\", \"mission\", \"model\", \"model\", \"model\", \"monitored\", \"much\", \"much\", \"network\", \"network\", \"next\", \"next\", \"next\", \"next\", \"none\", \"northern\", \"note\", \"number\", \"number\", \"number\", \"number\", \"numerous\", \"oil\", \"oil\", \"oil\", \"oil\", \"oil\", \"operate\", \"operate\", \"operate\", \"operate\", \"operate\", \"operation\", \"operation\", \"operation\", \"operation\", \"operation\", \"operator\", \"operator\", \"operator\", \"operator\", \"operator\", \"order\", \"order\", \"order\", \"order\", \"output\", \"oversize\", \"particularly\", \"particularly\", \"passenger\", \"passenger\", \"passenger\", \"passenger\", \"patient\", \"patient\", \"pattern\", \"percent\", \"percent\", \"percent\", \"performance\", \"performance\", \"performance\", \"performance\", \"pilot\", \"pilot\", \"pilot\", \"pilot\", \"plan\", \"plan\", \"plan\", \"plan\", \"platform\", \"platform\", \"platform\", \"pound\", \"pound\", \"pound\", \"power\", \"power\", \"power\", \"power\", \"power\", \"powerplant\", \"pre\", \"pre\", \"principal\", \"problem\", \"problem\", \"production\", \"production\", \"production\", \"production\", \"production\", \"program\", \"program\", \"program\", \"program\", \"project\", \"project\", \"propel\", \"prototype\", \"prototype\", \"prototype\", \"prototype\", \"racer\", \"ramp\", \"reauthorization\", \"receive\", \"receive\", \"receive\", \"receiver\", \"recognize\", \"reconstruct\", \"reduce\", \"reduce\", \"reduce\", \"reduce\", \"refine\", \"regard\", \"regard\", \"region\", \"regulatory\", \"regulatory\", \"rely\", \"requirement\", \"requirement\", \"requirement\", \"requirement\", \"return\", \"reveal\", \"ride\", \"ring\", \"risk\", \"safety\", \"safety\", \"safety\", \"safety\", \"sale\", \"sale\", \"sale\", \"scandinavian\", \"seat\", \"seat\", \"seat\", \"seat\", \"seat\", \"segment\", \"segment\", \"segment\", \"sell\", \"sell\", \"sell\", \"sensor\", \"sensor\", \"sensor\", \"serial\", \"serial\", \"serial\", \"series\", \"service\", \"service\", \"service\", \"service\", \"service\", \"session\", \"setz\", \"shaft\", \"ship\", \"ship\", \"ship\", \"shortage\", \"site\", \"site\", \"site\", \"situational\", \"slate\", \"slide\", \"smooth\", \"specialisation\", \"speed\", \"speed\", \"stability\", \"stream\", \"stretcher\", \"study\", \"submarine\", \"successfully\", \"successfully\", \"surveillance\", \"surveillance\", \"surveillance\", \"sweep\", \"system\", \"system\", \"system\", \"system\", \"system\", \"tactical\", \"tactical\", \"tactical\", \"tactical\", \"target\", \"target\", \"team\", \"team\", \"technological\", \"technology\", \"technology\", \"technology\", \"technology\", \"temperature\", \"temperature\", \"term\", \"term\", \"test\", \"test\", \"test\", \"test\", \"test\", \"tracking\", \"transmission\", \"trial\", \"trial\", \"trial\", \"trial\", \"tsm\", \"tune\", \"uncertain\", \"utility\", \"utility\", \"utility\", \"vane\", \"venue\", \"video\", \"view\", \"view\", \"warfare\", \"way\", \"way\", \"well\", \"well\", \"well\", \"well\", \"window\", \"wing\", \"work\", \"work\", \"work\", \"work\", \"work\", \"world\", \"yet\"]}, \"R\": 30, \"lambda.step\": 0.01, \"plot.opts\": {\"xlab\": \"PC1\", \"ylab\": \"PC2\"}, \"topic.order\": [1, 2, 3, 5, 4]};\n",
       "\n",
       "function LDAvis_load_lib(url, callback){\n",
       "  var s = document.createElement('script');\n",
       "  s.src = url;\n",
       "  s.async = true;\n",
       "  s.onreadystatechange = s.onload = callback;\n",
       "  s.onerror = function(){console.warn(\"failed to load library \" + url);};\n",
       "  document.getElementsByTagName(\"head\")[0].appendChild(s);\n",
       "}\n",
       "\n",
       "if(typeof(LDAvis) !== \"undefined\"){\n",
       "   // already loaded: just create the visualization\n",
       "   !function(LDAvis){\n",
       "       new LDAvis(\"#\" + \"ldavis_el22210112308752464187310678\", ldavis_el22210112308752464187310678_data);\n",
       "   }(LDAvis);\n",
       "}else if(typeof define === \"function\" && define.amd){\n",
       "   // require.js is available: use it to load d3/LDAvis\n",
       "   require.config({paths: {d3: \"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min\"}});\n",
       "   require([\"d3\"], function(d3){\n",
       "      window.d3 = d3;\n",
       "      LDAvis_load_lib(\"https://cdn.rawgit.com/bmabey/pyLDAvis/files/ldavis.v1.0.0.js\", function(){\n",
       "        new LDAvis(\"#\" + \"ldavis_el22210112308752464187310678\", ldavis_el22210112308752464187310678_data);\n",
       "      });\n",
       "    });\n",
       "}else{\n",
       "    // require.js not available: dynamically load d3 & LDAvis\n",
       "    LDAvis_load_lib(\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\", function(){\n",
       "         LDAvis_load_lib(\"https://cdn.rawgit.com/bmabey/pyLDAvis/files/ldavis.v1.0.0.js\", function(){\n",
       "                 new LDAvis(\"#\" + \"ldavis_el22210112308752464187310678\", ldavis_el22210112308752464187310678_data);\n",
       "            })\n",
       "         });\n",
       "}\n",
       "</script>"
      ],
      "text/plain": [
       "PreparedData(topic_coordinates=              x         y  topics  cluster       Freq\n",
       "topic                                                \n",
       "0     -0.040801  0.082334       1        1  26.537853\n",
       "1      0.060062 -0.112063       2        1  20.521494\n",
       "2      0.001838 -0.039517       3        1  18.308756\n",
       "4      0.109735  0.079904       4        1  18.186464\n",
       "3     -0.130833 -0.010658       5        1  16.445433, topic_info=            Term       Freq      Total Category  logprob  loglift\n",
       "168        cabin  19.000000  19.000000  Default  30.0000  30.0000\n",
       "105   production  29.000000  29.000000  Default  29.0000  29.0000\n",
       "1436       video  11.000000  11.000000  Default  28.0000  28.0000\n",
       "290       system  46.000000  46.000000  Default  27.0000  27.0000\n",
       "725        drone  13.000000  13.000000  Default  26.0000  26.0000\n",
       "...          ...        ...        ...      ...      ...      ...\n",
       "248    operation   4.711700  23.841515   Topic5  -5.1334   0.1837\n",
       "301         well   3.925190  13.759204   Topic5  -5.3161   0.5508\n",
       "173      company   3.899445  15.865726   Topic5  -5.3226   0.4018\n",
       "1     accumulate   3.309106   6.801519   Topic5  -5.4868   1.0847\n",
       "245         next   3.303308  11.294483   Topic5  -5.4885   0.5757\n",
       "\n",
       "[347 rows x 6 columns], token_table=      Topic      Freq    Term\n",
       "term                         \n",
       "0         1  0.107747    able\n",
       "0         2  0.215495    able\n",
       "0         3  0.107747    able\n",
       "0         4  0.538737    able\n",
       "147       1  0.720584  access\n",
       "...     ...       ...     ...\n",
       "143       3  0.204731    work\n",
       "143       4  0.136487    work\n",
       "143       5  0.068244    work\n",
       "1082      2  0.866900   world\n",
       "146       4  0.864717     yet\n",
       "\n",
       "[578 rows x 3 columns], R=30, lambda_step=0.01, plot_opts={'xlab': 'PC1', 'ylab': 'PC2'}, topic_order=[1, 2, 3, 5, 4])"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Create Dictionary\n",
    "id2word = corpora.Dictionary(data_ready)\n",
    "\n",
    "# Create Corpus: Term Document Frequency\n",
    "corpus = [id2word.doc2bow(text) for text in data_ready]\n",
    "\n",
    "# Build LDA model\n",
    "lda_model = gensim.models.ldamodel.LdaModel(corpus=corpus, id2word=id2word, \n",
    "                                            alpha='symmetric', num_topics=5, \n",
    "                                            random_state=42, chunksize=100, \n",
    "                                            passes=5, iterations=1000, \n",
    "                                            per_word_topics=True)\n",
    "\n",
    "import pyLDAvis.gensim\n",
    "pyLDAvis.enable_notebook()\n",
    "vis = pyLDAvis.gensim.prepare(lda_model, corpus, dictionary=lda_model.id2word)\n",
    "vis "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Sentence Coloring of N Sentences \n",
    "def topics_per_document(model, corpus, start=0, end=1):\n",
    "    \n",
    "    corpus_sel = corpus[start:end] \n",
    "    dominant_topics = [] \n",
    "    topic_percentages = [] \n",
    "    for i, corp in enumerate(corpus_sel): \n",
    "        topic_percs, wordid_topics, wordid_phivalues = model[corp] \n",
    "        dominant_topic = sorted(topic_percs, key = lambda x: x[1], reverse=True)[0][0] \n",
    "        dominant_topics.append((i, dominant_topic)) \n",
    "        topic_percentages.append(topic_percs) \n",
    "        \n",
    "    return(dominant_topics, topic_percentages) \n",
    "\n",
    "dominant_topics, topic_percentages = topics_per_document(model=lda_model, corpus=corpus, end=len(corpus)) \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>topic_id</th>\n",
       "      <th>3top_words</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>test ; aircraft ; operation</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>system ; drone ; aircraft</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>aircraft ; video ; system</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>production ; aircraft ; cabin</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>gas ; oil ; military</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   topic_id                     3top_words\n",
       "0         0    test ; aircraft ; operation\n",
       "1         1      system ; drone ; aircraft\n",
       "2         2      aircraft ; video ; system\n",
       "3         3  production ; aircraft ; cabin\n",
       "4         4           gas ; oil ; military"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Distribution of Dominant Topics in Each Document\n",
    "top_topics = pd.DataFrame(dominant_topics, columns=['document_id', 'dominant_topic'])\n",
    "dominant_topic_in_each_doc = top_topics.groupby('dominant_topic').size()\n",
    "\n",
    "df_dominant_topic_in_each_doc = dominant_topic_in_each_doc.to_frame(name='count').reset_index()\n",
    "df_dominant_topic_in_each_doc.columns = ['topic_id','#_documents']\n",
    "\n",
    "# Distribution of Dominant Topics in Each Document\n",
    "top_topics = pd.DataFrame(dominant_topics, columns=['document_id', 'dominant_topic'])\n",
    "dominant_topic_in_each_doc = top_topics.groupby('dominant_topic').size()\n",
    "\n",
    "df_dominant_topic_in_each_doc = dominant_topic_in_each_doc.to_frame(name='count').reset_index()\n",
    "df_dominant_topic_in_each_doc.columns = ['topic_id','#_documents']\n",
    "\n",
    "# Top 3 Keywords for each Topic\n",
    "topic_top3words = [(i, topic) for i, topics in lda_model.show_topics(formatted=False) \n",
    "                                 for j, (topic, wt) in enumerate(topics) if j<3]\n",
    "\n",
    "df_top3words_stacked = pd.DataFrame(topic_top3words, columns=['topic_id', '3top_words'])\n",
    "df_top3words = df_top3words_stacked.groupby('topic_id').agg(' ; '.join)\n",
    "df_top3words.reset_index(level=0,inplace=True)\n",
    "df_top3words"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>doc_id</th>\n",
       "      <th>weigh_topic_4</th>\n",
       "      <th>weigh_topic_3</th>\n",
       "      <th>weigh_topic_2</th>\n",
       "      <th>weigh_topic_0</th>\n",
       "      <th>weigh_topic_1</th>\n",
       "      <th>topic_id</th>\n",
       "      <th>document</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>28</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.993965</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>a leader in helicopter customizations will display some of the newest avionics solutions during ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>22</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.991682</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>the us army intends to buy 15 more airbus uh 72a lakota utility helicopters and is considering a...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.989912</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>airbus helicopters has successfully completed the cold weather testing for certification of the ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>7</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.991831</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>airbus helicopters has successfully completed its certification program of cold weather testing ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>8</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.989912</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>airbus helicopters has successfully completed the cold weather testing for certification of the ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>9</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.090091</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.907687</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>airbus helicopters is hoping to make significant inroads into the niche market for medium twin e...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>12</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.027029</td>\n",
       "      <td>0.970925</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>aircraft vsr700 landing the vsr700 is airbus tactical unmanned aerial system uas designed to ful...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>18</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.996608</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>what is going on beyond the horizon it s a crucial question for any ship captain. in the past , ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>25</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.998300</td>\n",
       "      <td>1</td>\n",
       "      <td>hai is coming into this year s heli expo celebrating its 70 year heritage with a continued focus...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>21</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.996452</td>\n",
       "      <td>1</td>\n",
       "      <td>blr aerospace booth hashtaghere announced the continued success of its airbus h125 fastfin tail ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>6</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.168912</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.825707</td>\n",
       "      <td>1</td>\n",
       "      <td>the first serial production h160 performed a flight demonstration at the airbus helicopters base...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>11</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.991170</td>\n",
       "      <td>1</td>\n",
       "      <td>the direction g n rale de l armement dga is exploring rotary wing unmanned aircraft systems. to ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>15</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.417737</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.579043</td>\n",
       "      <td>1</td>\n",
       "      <td>airbus is developing a rotary wing unmanned aerial system for naval application , under a newly ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>26</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.996862</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "      <td>imt vislink booth c4338 is showcasing its updated airborne video downlink system avds with the a...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>20</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.989702</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "      <td>airbus helicopters has unveiled a new version of its h 145 twin engine light utility helicopter ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>14</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.978007</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "      <td>the airbus helicopters vsr700 in an unmanned reconnaissance helicopter currently being developed...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.997824</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "      <td>there is as much innovation in the way the h160 is made as there is in the helicopter itself. ia...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>27</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.978032</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "      <td>the second prototype of the five bladed h145 helicopter carried out its maiden flight in august ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>5</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.990733</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3</td>\n",
       "      <td>the first serial production airbus helicopters h160 medium twin made its first flight on decembe...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>23</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.997788</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3</td>\n",
       "      <td>as the industry gathers for this year s heli expo , three of the big four western helicopter oem...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.986466</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3</td>\n",
       "      <td>the first h160 to roll off the brand new airbus helicopters assembly line in marignane made its ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.996710</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3</td>\n",
       "      <td>airbus helicopters flew the first production model of its new h160 medium twin in december. it i...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>16</td>\n",
       "      <td>0.994636</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4</td>\n",
       "      <td>the airbus helicopters vsr700 demonstrator a light military tactical unmanned aerial system uav ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>17</td>\n",
       "      <td>0.512942</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.477248</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4</td>\n",
       "      <td>airbus helicopters recently started autonomous flight trials of the optionally piloted vsr700 de...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>13</td>\n",
       "      <td>0.984719</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4</td>\n",
       "      <td>airbus helicopters vsr700 demonstrator has completed a fully unmanned autonomous flight at istre...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>19</td>\n",
       "      <td>0.987911</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4</td>\n",
       "      <td>airbus helicopters has completed the first unmanned , autonomous flight of its vsr700 demonstrat...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>10</td>\n",
       "      <td>0.834207</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.161604</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4</td>\n",
       "      <td>airbus helicopters recently started autonomous flight trials of a vsr700 optionally piloted vehi...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>24</td>\n",
       "      <td>0.985908</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4</td>\n",
       "      <td>airbus helicopters logged orders for 43 aircraft at heli expo this week , 21 of which came from ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>0</td>\n",
       "      <td>0.998018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4</td>\n",
       "      <td>continued weakness in the oil and gas market has left airbus helicopters uncertain of how quickl...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    doc_id  weigh_topic_4  weigh_topic_3  weigh_topic_2  weigh_topic_0  \\\n",
       "0       28            NaN            NaN            NaN       0.993965   \n",
       "1       22            NaN            NaN            NaN       0.991682   \n",
       "2        4            NaN            NaN            NaN       0.989912   \n",
       "3        7            NaN            NaN            NaN       0.991831   \n",
       "4        8            NaN            NaN            NaN       0.989912   \n",
       "5        9            NaN       0.090091            NaN       0.907687   \n",
       "6       12            NaN            NaN       0.027029       0.970925   \n",
       "7       18            NaN            NaN            NaN       0.996608   \n",
       "8       25            NaN            NaN            NaN            NaN   \n",
       "9       21            NaN            NaN            NaN            NaN   \n",
       "10       6            NaN       0.168912            NaN            NaN   \n",
       "11      11            NaN            NaN            NaN            NaN   \n",
       "12      15            NaN            NaN       0.417737            NaN   \n",
       "13      26            NaN            NaN       0.996862            NaN   \n",
       "14      20            NaN            NaN       0.989702            NaN   \n",
       "15      14            NaN            NaN       0.978007            NaN   \n",
       "16       3            NaN            NaN       0.997824            NaN   \n",
       "17      27            NaN            NaN       0.978032            NaN   \n",
       "18       5            NaN       0.990733            NaN            NaN   \n",
       "19      23            NaN       0.997788            NaN            NaN   \n",
       "20       2            NaN       0.986466            NaN            NaN   \n",
       "21       1            NaN       0.996710            NaN            NaN   \n",
       "22      16       0.994636            NaN            NaN            NaN   \n",
       "23      17       0.512942            NaN            NaN       0.477248   \n",
       "24      13       0.984719            NaN            NaN            NaN   \n",
       "25      19       0.987911            NaN            NaN            NaN   \n",
       "26      10       0.834207            NaN       0.161604            NaN   \n",
       "27      24       0.985908            NaN            NaN            NaN   \n",
       "28       0       0.998018            NaN            NaN            NaN   \n",
       "\n",
       "    weigh_topic_1  topic_id  \\\n",
       "0             NaN         0   \n",
       "1             NaN         0   \n",
       "2             NaN         0   \n",
       "3             NaN         0   \n",
       "4             NaN         0   \n",
       "5             NaN         0   \n",
       "6             NaN         0   \n",
       "7             NaN         0   \n",
       "8        0.998300         1   \n",
       "9        0.996452         1   \n",
       "10       0.825707         1   \n",
       "11       0.991170         1   \n",
       "12       0.579043         1   \n",
       "13            NaN         2   \n",
       "14            NaN         2   \n",
       "15            NaN         2   \n",
       "16            NaN         2   \n",
       "17            NaN         2   \n",
       "18            NaN         3   \n",
       "19            NaN         3   \n",
       "20            NaN         3   \n",
       "21            NaN         3   \n",
       "22            NaN         4   \n",
       "23            NaN         4   \n",
       "24            NaN         4   \n",
       "25            NaN         4   \n",
       "26            NaN         4   \n",
       "27            NaN         4   \n",
       "28            NaN         4   \n",
       "\n",
       "                                                                                               document  \n",
       "0   a leader in helicopter customizations will display some of the newest avionics solutions during ...  \n",
       "1   the us army intends to buy 15 more airbus uh 72a lakota utility helicopters and is considering a...  \n",
       "2   airbus helicopters has successfully completed the cold weather testing for certification of the ...  \n",
       "3   airbus helicopters has successfully completed its certification program of cold weather testing ...  \n",
       "4   airbus helicopters has successfully completed the cold weather testing for certification of the ...  \n",
       "5   airbus helicopters is hoping to make significant inroads into the niche market for medium twin e...  \n",
       "6   aircraft vsr700 landing the vsr700 is airbus tactical unmanned aerial system uas designed to ful...  \n",
       "7   what is going on beyond the horizon it s a crucial question for any ship captain. in the past , ...  \n",
       "8   hai is coming into this year s heli expo celebrating its 70 year heritage with a continued focus...  \n",
       "9   blr aerospace booth hashtaghere announced the continued success of its airbus h125 fastfin tail ...  \n",
       "10  the first serial production h160 performed a flight demonstration at the airbus helicopters base...  \n",
       "11  the direction g n rale de l armement dga is exploring rotary wing unmanned aircraft systems. to ...  \n",
       "12  airbus is developing a rotary wing unmanned aerial system for naval application , under a newly ...  \n",
       "13  imt vislink booth c4338 is showcasing its updated airborne video downlink system avds with the a...  \n",
       "14  airbus helicopters has unveiled a new version of its h 145 twin engine light utility helicopter ...  \n",
       "15  the airbus helicopters vsr700 in an unmanned reconnaissance helicopter currently being developed...  \n",
       "16  there is as much innovation in the way the h160 is made as there is in the helicopter itself. ia...  \n",
       "17  the second prototype of the five bladed h145 helicopter carried out its maiden flight in august ...  \n",
       "18  the first serial production airbus helicopters h160 medium twin made its first flight on decembe...  \n",
       "19  as the industry gathers for this year s heli expo , three of the big four western helicopter oem...  \n",
       "20  the first h160 to roll off the brand new airbus helicopters assembly line in marignane made its ...  \n",
       "21  airbus helicopters flew the first production model of its new h160 medium twin in december. it i...  \n",
       "22  the airbus helicopters vsr700 demonstrator a light military tactical unmanned aerial system uav ...  \n",
       "23  airbus helicopters recently started autonomous flight trials of the optionally piloted vsr700 de...  \n",
       "24  airbus helicopters vsr700 demonstrator has completed a fully unmanned autonomous flight at istre...  \n",
       "25  airbus helicopters has completed the first unmanned , autonomous flight of its vsr700 demonstrat...  \n",
       "26  airbus helicopters recently started autonomous flight trials of a vsr700 optionally piloted vehi...  \n",
       "27  airbus helicopters logged orders for 43 aircraft at heli expo this week , 21 of which came from ...  \n",
       "28  continued weakness in the oil and gas market has left airbus helicopters uncertain of how quickl...  "
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "weigh_topic_doc = pd.DataFrame([dict(t) for t in topic_percentages])\n",
    "weigh_topic_doc.columns = ['weigh_topic_'+str(c) for c in weigh_topic_doc.columns.values]\n",
    "\n",
    "weigh_topic_doc.reset_index(inplace=True)\n",
    "weigh_topic_doc.rename(columns={'index':'doc_id'}, inplace=True)\n",
    "\n",
    "top_topics = pd.DataFrame(dominant_topics, columns=['doc_id', 'topic_id'])\n",
    "\n",
    "doc_topic = pd.merge(pd.merge(weigh_topic_doc, top_topics, on='doc_id'), df_doc, on='doc_id')\n",
    "doc_topic.sort_values('topic_id', inplace=True, ignore_index=True)\n",
    "doc_topic"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [],
   "source": [
    "def group_document(texts):\n",
    "    documents = str()\n",
    "    for document in process_document(texts):\n",
    "\n",
    "        sentences = str()\n",
    "        for sentence in document.split('.'):\n",
    "            sentences += sentence+'. '\n",
    "            sentences = sentences.replace('. .','.').replace('..','.').replace('  ',' ')\n",
    "\n",
    "        documents += sentences\n",
    "        \n",
    "    return documents\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>topic_id</th>\n",
       "      <th>3top_words</th>\n",
       "      <th>#_doc</th>\n",
       "      <th>topic</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>test ; aircraft ; operation</td>\n",
       "      <td>8</td>\n",
       "      <td>a leader in helicopter customizations will display some of the newest avionics solutions during ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>system ; drone ; aircraft</td>\n",
       "      <td>5</td>\n",
       "      <td>hai is coming into this year s heli expo celebrating its 70 year heritage with a continued focus...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>aircraft ; video ; system</td>\n",
       "      <td>5</td>\n",
       "      <td>imt vislink booth c4338 is showcasing its updated airborne video downlink system avds with the a...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>production ; aircraft ; cabin</td>\n",
       "      <td>4</td>\n",
       "      <td>the first serial production airbus helicopters h160 medium twin made its first flight on decembe...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>gas ; oil ; military</td>\n",
       "      <td>7</td>\n",
       "      <td>the airbus helicopters vsr700 demonstrator a light military tactical unmanned aerial system uav ...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   topic_id                     3top_words  #_doc  \\\n",
       "0         0    test ; aircraft ; operation      8   \n",
       "1         1      system ; drone ; aircraft      5   \n",
       "2         2      aircraft ; video ; system      5   \n",
       "3         3  production ; aircraft ; cabin      4   \n",
       "4         4           gas ; oil ; military      7   \n",
       "\n",
       "                                                                                                 topic  \n",
       "0  a leader in helicopter customizations will display some of the newest avionics solutions during ...  \n",
       "1  hai is coming into this year s heli expo celebrating its 70 year heritage with a continued focus...  \n",
       "2  imt vislink booth c4338 is showcasing its updated airborne video downlink system avds with the a...  \n",
       "3  the first serial production airbus helicopters h160 medium twin made its first flight on decembe...  \n",
       "4  the airbus helicopters vsr700 demonstrator a light military tactical unmanned aerial system uav ...  "
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "nb_doc = []\n",
    "topic = []\n",
    "for t in range(5):\n",
    "    nb_doc.append(len(doc_topic.loc[doc_topic.topic_id==t]['document']))\n",
    "    topic.append(group_document(doc_topic.loc[doc_topic.topic_id==t]['document']))\n",
    "\n",
    "df_top3words['#_doc'] = nb_doc\n",
    "df_top3words['topic'] = topic\n",
    "df_top3words[['topic_id','3top_words','#_doc','topic']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "# To CSV files for Extractive summarize\n",
    "doc_topic.to_csv('df_document.csv', index=False)\n",
    "df_top3words.to_csv('df_topic.csv', index=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 2ème méthode de Topic modelling"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "####\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import glob\n",
    "#### preprocess\n",
    "import re  # For preprocessing\n",
    "from collections import defaultdict  # For word frequency\n",
    "#### Gensim\n",
    "import logging  # Setting up the loggings to monitor gensim\n",
    "import gensim\n",
    "from gensim.models.phrases import Phrases, Phraser\n",
    "import multiprocessing\n",
    "from gensim.models import Word2Vec\n",
    "#### sklearn\n",
    "from sklearn.feature_extraction.text import TfidfVectorizer\n",
    "from sklearn.metrics import accuracy_score, confusion_matrix, precision_score, recall_score, f1_score"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Text import"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [],
   "source": [
    "path_text = 'txt/'\n",
    "files_text = glob.glob(path_text+'*.txt')\n",
    "\n",
    "texts = []\n",
    "for file in files_text:\n",
    "    texts.append(str(open(file,'r', encoding=\"latin-1\").read()))\n",
    "    \n",
    "texts = pd.DataFrame(texts, columns=['doc'])\n",
    "texts = texts.apply(process_document)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [],
   "source": [
    "import nltk\n",
    "from nltk.stem import WordNetLemmatizer\n",
    "\n",
    "en_stop = set(nltk.corpus.stopwords.words('english'))\n",
    "\n",
    "stemmer = WordNetLemmatizer()\n",
    "\n",
    "# We create a method named preprocess_text that accepts a text document as a parameter\n",
    "# The method uses regex operations to perform a variety of tasks.\n",
    "\n",
    "contraction_mapping = {\"ain't\": \"is not\", \"aren't\": \"are not\",\"can't\": \"cannot\", \"'cause\": \"because\", \"could've\": \"could have\", \"couldn't\": \"could not\",\n",
    "                            \"didn't\": \"did not\", \"doesn't\": \"does not\", \"don't\": \"do not\", \"hadn't\": \"had not\", \"hasn't\": \"has not\", \"haven't\": \"have not\",\n",
    "                            \"he'd\": \"he would\",\"he'll\": \"he will\", \"he's\": \"he is\", \"how'd\": \"how did\", \"how'd'y\": \"how do you\", \"how'll\": \"how will\", \"how's\": \"how is\",\n",
    "                            \"I'd\": \"I would\", \"I'd've\": \"I would have\", \"I'll\": \"I will\", \"I'll've\": \"I will have\",\"I'm\": \"I am\", \"I've\": \"I have\", \"i'd\": \"i would\",\n",
    "                            \"i'd've\": \"i would have\", \"i'll\": \"i will\",  \"i'll've\": \"i will have\",\"i'm\": \"i am\", \"i've\": \"i have\", \"isn't\": \"is not\", \"it'd\": \"it would\",\n",
    "                            \"it'd've\": \"it would have\", \"it'll\": \"it will\", \"it'll've\": \"it will have\",\"it's\": \"it is\", \"let's\": \"let us\", \"ma'am\": \"madam\",\n",
    "                            \"mayn't\": \"may not\", \"might've\": \"might have\",\"mightn't\": \"might not\",\"mightn't've\": \"might not have\", \"must've\": \"must have\",\n",
    "                            \"mustn't\": \"must not\", \"mustn't've\": \"must not have\", \"needn't\": \"need not\", \"needn't've\": \"need not have\",\"o'clock\": \"of the clock\",\n",
    "                            \"oughtn't\": \"ought not\", \"oughtn't've\": \"ought not have\", \"shan't\": \"shall not\", \"sha'n't\": \"shall not\", \"shan't've\": \"shall not have\",\n",
    "                            \"she'd\": \"she would\", \"she'd've\": \"she would have\", \"she'll\": \"she will\", \"she'll've\": \"she will have\", \"she's\": \"she is\",\n",
    "                            \"should've\": \"should have\", \"shouldn't\": \"should not\", \"shouldn't've\": \"should not have\", \"so've\": \"so have\",\"so's\": \"so as\",\n",
    "                            \"this's\": \"this is\",\"that'd\": \"that would\", \"that'd've\": \"that would have\", \"that's\": \"that is\", \"there'd\": \"there would\",\n",
    "                            \"there'd've\": \"there would have\", \"there's\": \"there is\", \"here's\": \"here is\",\"they'd\": \"they would\", \"they'd've\": \"they would have\",\n",
    "                            \"they'll\": \"they will\", \"they'll've\": \"they will have\", \"they're\": \"they are\", \"they've\": \"they have\", \"to've\": \"to have\",\n",
    "                            \"wasn't\": \"was not\", \"we'd\": \"we would\", \"we'd've\": \"we would have\", \"we'll\": \"we will\", \"we'll've\": \"we will have\", \"we're\": \"we are\",\n",
    "                            \"we've\": \"we have\", \"weren't\": \"were not\", \"what'll\": \"what will\", \"what'll've\": \"what will have\", \"what're\": \"what are\",\n",
    "                            \"what's\": \"what is\", \"what've\": \"what have\", \"when's\": \"when is\", \"when've\": \"when have\", \"where'd\": \"where did\", \"where's\": \"where is\",\n",
    "                            \"where've\": \"where have\", \"who'll\": \"who will\", \"who'll've\": \"who will have\", \"who's\": \"who is\", \"who've\": \"who have\",\n",
    "                            \"why's\": \"why is\", \"why've\": \"why have\", \"will've\": \"will have\", \"won't\": \"will not\", \"won't've\": \"will not have\",\n",
    "                            \"would've\": \"would have\", \"wouldn't\": \"would not\", \"wouldn't've\": \"would not have\", \"y'all\": \"you all\",\n",
    "                            \"y'all'd\": \"you all would\",\"y'all'd've\": \"you all would have\",\"y'all're\": \"you all are\",\"y'all've\": \"you all have\",\n",
    "                            \"you'd\": \"you would\", \"you'd've\": \"you would have\", \"you'll\": \"you will\", \"you'll've\": \"you will have\",\n",
    "                            \"you're\": \"you are\", \"you've\": \"you have\"}\n",
    "\n",
    "def preprocess_text(sentence):\n",
    "    # Nettoyage du text\n",
    "\n",
    "    sentence = re.sub(r'\\s+', ' ', sentence)\n",
    "    sentence = re.sub(r'@[\\w\\-]+', 'MENTIONHERE', sentence)\n",
    "    sentence = re.sub(r'#[\\w\\-]+', 'HASHTAGHERE', sentence)\n",
    "\n",
    "    sentence = re.sub(r\"[^A-Za-z0-9^, ! \\/'+=]\", \" \", sentence)\n",
    "    sentence = re.sub(r\"!\",\" \", sentence)\n",
    "    sentence = re.sub(r\"</s>\",\" \", sentence)\n",
    "    sentence = re.sub(r\",\",\" \", sentence)\n",
    "    #sentence = re.sub(r\"\\.\",\" \", sentence)\n",
    "    sentence = re.sub(r\"\\/\",\" \", sentence)\n",
    "    sentence = re.sub(r\"\\^\",\" ^ \", sentence)\n",
    "    sentence = re.sub(r\"\\+\",\" + \", sentence)\n",
    "    sentence = re.sub(r\"\\-\",\" - \", sentence)\n",
    "    sentence = re.sub(r\"\\=\",\" = \", sentence)\n",
    "    sentence = re.sub(r\"'\",\" \", sentence)\n",
    "    sentence = re.sub(r\"(\\d+)(k)\",r\"\\g<1>000 \", sentence)\n",
    "    sentence = re.sub(r\":\",\" : \", sentence)\n",
    "    sentence = re.sub(r\" e g\", \" eg \", sentence)\n",
    "    sentence = re.sub(r\" b g\", \" bg \", sentence)\n",
    "    sentence = re.sub(r\" u s \",\" american \", sentence)\n",
    "    sentence = re.sub(r\"\\0s\",\"0\", sentence)\n",
    "    sentence = re.sub(r\" 9 11 \",\"911\", sentence)\n",
    "    sentence = re.sub(r\"e - mail\",\"email\", sentence)\n",
    "    sentence = re.sub(r\"j k\",\"jk\", sentence)\n",
    "    sentence = re.sub(r\"\\s{2,}\",\" \", sentence)\n",
    "    sentence = re.sub(r'@[A-Za-z0-9]+' ,'', sentence)\n",
    "    sentence = re.sub(r'(\\w)\\1{2,}', r'\\1\\1', sentence)\n",
    "    sentence = re.sub(r'\\w(\\w)\\1{2,}', '', sentence)\n",
    "    sentence = sentence.lower()\n",
    "\n",
    "    sentence = ' '.join([contraction_mapping[t] if t in contraction_mapping else t for t in sentence.split(\" \")])\n",
    "    sentence = ' '.join([word for word in sentence.split() if word.isalpha()])\n",
    "    sentence = ' '.join([word for word in sentence.split() if word.lower() not in en_stop and len(word)>=3])\n",
    "\n",
    "    return sentence\n",
    "\n",
    "def preprocess_token(document):\n",
    "        # Replaces all the special characters by a space\n",
    "        document = re.sub(r'\\W', ' ', str(document))\n",
    "\n",
    "        # Replaces all single characters by a space\n",
    "        document = re.sub(r'\\s+[a-zA-Z]\\s+', ' ', document)\n",
    "\n",
    "        # Replaces single characters from the start by a space\n",
    "        document = re.sub(r'\\^[a-zA-Z]\\s+', ' ', document)\n",
    "\n",
    "        # Substituting multiple spaces with single space\n",
    "        document = re.sub(r'\\s+', ' ', document, flags=re.I)\n",
    "        \n",
    "        # When you scrape a document online, a string b is often appended with the document, \n",
    "        # which signifies that the document is binary.\n",
    "        \n",
    "        # Removing prefixed 'b'\n",
    "        document = re.sub(r'^b\\s+', '', document)\n",
    "\n",
    "        # Converting to Lowercase\n",
    "        document = document.lower()\n",
    "\n",
    "        # Lemmatization\n",
    "        tokens = document.split()\n",
    "        tokens = [stemmer.lemmatize(word) for word in tokens]\n",
    "        tokens = [word for word in tokens if word not in en_stop]\n",
    "        tokens = [word for word in tokens if len(word)  > 5] # /!\\ I DO NOT agree with this\n",
    "\n",
    "        return tokens\n",
    "    \n",
    "def process_document(text):\n",
    "        \n",
    "    sentences = []\n",
    "    for sentence in text:\n",
    "        \n",
    "        space_pattern = '\\s+'\n",
    "        giant_url_regex = ('http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|'\n",
    "                           '[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+')\n",
    "        mention_regex = '@[\\w\\-]+'\n",
    "        hashtag_regex = '#[\\w\\-]+'\n",
    "        #punctuations = '''!()-[]{};:'\"\\,<>./?@#$%^&*_~'''\n",
    "        \n",
    "        sentence = re.sub(space_pattern, ' ', sentence)\n",
    "        sentence = re.sub(giant_url_regex, 'URLHERE', sentence)\n",
    "        sentence = re.sub(mention_regex, 'MENTIONHERE', sentence)\n",
    "        sentence = re.sub(hashtag_regex, 'HASHTAGHERE', sentence)\n",
    "        \n",
    "        sentence = re.sub(r\"[^A-Za-z0-9^, !. \\/'+=]\", \" \", sentence)\n",
    "        #sentence = re.sub(r\"[^a-zA-Z0-9\\s]\",\" \", sentence)\n",
    "        #sentence = re.sub(r'\\d+', '', sentence) # number\n",
    "        sentence = re.sub(r\"\\/\",\" \", sentence)\n",
    "        sentence = re.sub(r\"\\^\",\" ^ \", sentence)\n",
    "        sentence = re.sub(r\"\\+\",\" + \", sentence)\n",
    "        sentence = re.sub(r\"\\-\",\" - \", sentence)\n",
    "        sentence = re.sub(r\"\\=\",\" = \", sentence)\n",
    "        sentence = sentence.lower()\n",
    "        \n",
    "        sentence = ' '.join([contraction_mapping[t] if t in contraction_mapping else t for t in sentence.split(\" \")])\n",
    "        sentence = ' '.join([contraction_mapping[t] if t in contraction_mapping else t for t in word_tokenize(sentence)])\n",
    "        #sentence = ' '.join([word for word in word_tokenize(sentence) if word.isalpha()])\n",
    "        #sentence = ' '.join([word for word in word_tokenize(sentence) if word.lower() not in Stopwords and len(word)>2])\n",
    "        sentences.append(sentence.replace(' .', '.'))\n",
    "        \n",
    "    return sentences\n",
    "\n",
    "def process_to_words(sentences):\n",
    "    \n",
    "    for sentence in sentences:\n",
    "        sentence = sentence.lower() \n",
    "        \n",
    "        sentence = re.sub(r\"[^A-Za-z0-9^, !. \\/'+=]\", \" \", sentence) \n",
    "        sentence = re.sub(\"\\'\", \"\", sentence)  # remove single quotes \n",
    "                \n",
    "        sentence = gensim.utils.simple_preprocess(str(sentence), deacc=True) \n",
    "        yield(sentence)  "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Topic modeling\n",
    "\n",
    "### Topic par doc puis summarization par phrases"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.feature_extraction.text import TfidfVectorizer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "metadata": {},
   "outputs": [],
   "source": [
    "texts = texts.apply(process_to_words)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "ename": "AttributeError",
     "evalue": "'generator' object has no attribute 'lower'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-83-849709954b5d>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mvectorizer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mTfidfVectorizer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstop_words\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'english'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mtfidf\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mvectorizer\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtexts\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;32m~/AnacondaInstall/anaconda3/lib/python3.7/site-packages/sklearn/feature_extraction/text.py\u001b[0m in \u001b[0;36mfit\u001b[0;34m(self, raw_documents, y)\u001b[0m\n\u001b[1;32m   1629\u001b[0m         \"\"\"\n\u001b[1;32m   1630\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_check_params\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1631\u001b[0;31m         \u001b[0mX\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msuper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit_transform\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mraw_documents\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1632\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_tfidf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1633\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/AnacondaInstall/anaconda3/lib/python3.7/site-packages/sklearn/feature_extraction/text.py\u001b[0m in \u001b[0;36mfit_transform\u001b[0;34m(self, raw_documents, y)\u001b[0m\n\u001b[1;32m   1056\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1057\u001b[0m         vocabulary, X = self._count_vocab(raw_documents,\n\u001b[0;32m-> 1058\u001b[0;31m                                           self.fixed_vocabulary_)\n\u001b[0m\u001b[1;32m   1059\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1060\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbinary\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/AnacondaInstall/anaconda3/lib/python3.7/site-packages/sklearn/feature_extraction/text.py\u001b[0m in \u001b[0;36m_count_vocab\u001b[0;34m(self, raw_documents, fixed_vocab)\u001b[0m\n\u001b[1;32m    968\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0mdoc\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mraw_documents\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    969\u001b[0m             \u001b[0mfeature_counter\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 970\u001b[0;31m             \u001b[0;32mfor\u001b[0m \u001b[0mfeature\u001b[0m \u001b[0;32min\u001b[0m \u001b[0manalyze\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdoc\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    971\u001b[0m                 \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    972\u001b[0m                     \u001b[0mfeature_idx\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mvocabulary\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mfeature\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/AnacondaInstall/anaconda3/lib/python3.7/site-packages/sklearn/feature_extraction/text.py\u001b[0m in \u001b[0;36m<lambda>\u001b[0;34m(doc)\u001b[0m\n\u001b[1;32m    350\u001b[0m                                                tokenize)\n\u001b[1;32m    351\u001b[0m             return lambda doc: self._word_ngrams(\n\u001b[0;32m--> 352\u001b[0;31m                 tokenize(preprocess(self.decode(doc))), stop_words)\n\u001b[0m\u001b[1;32m    353\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    354\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/AnacondaInstall/anaconda3/lib/python3.7/site-packages/sklearn/feature_extraction/text.py\u001b[0m in \u001b[0;36m<lambda>\u001b[0;34m(x)\u001b[0m\n\u001b[1;32m    254\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    255\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlowercase\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 256\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0;32mlambda\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mstrip_accents\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlower\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    257\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    258\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mstrip_accents\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mAttributeError\u001b[0m: 'generator' object has no attribute 'lower'"
     ]
    }
   ],
   "source": [
    "vectorizer = TfidfVectorizer(stop_words='english')\n",
    "tfidf = vectorizer.fit(texts)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {},
   "outputs": [],
   "source": [
    "X = tfidf.transform(texts)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<1x1863 sparse matrix of type '<class 'numpy.float64'>'\n",
       "\twith 0 stored elements in Compressed Sparse Row format>"
      ]
     },
     "execution_count": 78,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.cluster import DBSCAN\n",
    "from sklearn.metrics import silhouette_score\n",
    "from sklearn.model_selection import train_test_split"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [],
   "source": [
    "grid = {'eps': [0.9,1,1.1,1.2,1.3,1.4,1.5,1.6],\n",
    "       'min_samples': [2,3,4,5]}\n",
    "\n",
    "grid_search = pd.DataFrame(columns = ['eps', 'min_samples', '# of clusters', 'silhouette'])\n",
    "\n",
    "i = 0\n",
    "\n",
    "for eps in grid['eps']:\n",
    "    for samp in grid['min_samples']:\n",
    "        res = []\n",
    "        \n",
    "        res.append(eps)\n",
    "        res.append(samp)\n",
    "        \n",
    "        model = DBSCAN(eps=eps, min_samples=samp)\n",
    "        model.fit(X)\n",
    "        labels = np.unique(model.labels_).shape[0]\n",
    "        res.append(labels)\n",
    "        \n",
    "        if labels >1:\n",
    "            res.append(silhouette_score(X, model.labels_))\n",
    "        else:\n",
    "            res.append(0)\n",
    "        \n",
    "        grid_search.loc[i,:] = res\n",
    "        i += 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [],
   "source": [
    "# export the gridsearch\n",
    "\n",
    "grid_search.to_csv('res.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [],
   "source": [
    "grid_search['silhouette'] = grid_search['silhouette'].apply(float)\n",
    "x = grid_search['silhouette'].idxmax()\n",
    "best_eps = grid_search.loc[x,'eps']\n",
    "best_samp = grid_search.loc[x,'min_samples']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [],
   "source": [
    "labels_dbscan = DBSCAN(best_eps, best_samp).fit(X).labels_"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### K means"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [],
   "source": [
    "grid_search_kmeans = pd.DataFrame(columns = ['k', '# of clusters', 'silhouette'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>k</th>\n",
       "      <th># of clusters</th>\n",
       "      <th>silhouette</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Empty DataFrame\n",
       "Columns: [k, # of clusters, silhouette]\n",
       "Index: []"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "grid_search_kmeans"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "ename": "ValueError",
     "evalue": "n_samples=1 should be >= n_clusters=2",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-36-ba43c2a80992>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     11\u001b[0m         \u001b[0mmodel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mKMeans\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mk\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 12\u001b[0;31m         \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     13\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     14\u001b[0m         \u001b[0mlabels\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0munique\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlabels_\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/AnacondaInstall/anaconda3/lib/python3.7/site-packages/sklearn/cluster/k_means_.py\u001b[0m in \u001b[0;36mfit\u001b[0;34m(self, X, y, sample_weight)\u001b[0m\n\u001b[1;32m    970\u001b[0m                 \u001b[0mtol\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtol\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrandom_state\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mrandom_state\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy_x\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcopy_x\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    971\u001b[0m                 \u001b[0mn_jobs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mn_jobs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0malgorithm\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0malgorithm\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 972\u001b[0;31m                 return_n_iter=True)\n\u001b[0m\u001b[1;32m    973\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    974\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/AnacondaInstall/anaconda3/lib/python3.7/site-packages/sklearn/cluster/k_means_.py\u001b[0m in \u001b[0;36mk_means\u001b[0;34m(X, n_clusters, sample_weight, init, precompute_distances, n_init, max_iter, verbose, tol, random_state, copy_x, n_jobs, algorithm, return_n_iter)\u001b[0m\n\u001b[1;32m    314\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0m_num_samples\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m<\u001b[0m \u001b[0mn_clusters\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    315\u001b[0m         raise ValueError(\"n_samples=%d should be >= n_clusters=%d\" % (\n\u001b[0;32m--> 316\u001b[0;31m             _num_samples(X), n_clusters))\n\u001b[0m\u001b[1;32m    317\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    318\u001b[0m     \u001b[0mtol\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_tolerance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtol\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mValueError\u001b[0m: n_samples=1 should be >= n_clusters=2"
     ]
    }
   ],
   "source": [
    "from sklearn.cluster import KMeans\n",
    "grid = {'k': range(2,10)}\n",
    "\n",
    "i = 0\n",
    "\n",
    "for k in grid['k']:\n",
    "        res = []\n",
    "        \n",
    "        res.append(k)\n",
    "        \n",
    "        model = KMeans(k)\n",
    "        model.fit(X)\n",
    "        \n",
    "        labels = np.unique(model.labels_).shape[0]\n",
    "        res.append(labels)\n",
    "        \n",
    "        if labels >1:\n",
    "            res.append(silhouette_score(X, model.labels_))\n",
    "        else:\n",
    "            res.append(0)\n",
    "        \n",
    "        grid_search_kmeans.loc[i,:] = res\n",
    "        i += 1\n",
    "        \n",
    "grid_search_kmeans.to_csv('res_kmeans.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "ename": "TypeError",
     "evalue": "reduction operation 'argmax' not allowed for this dtype",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-37-85bf2b3c6831>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mgrid_search_kmeans\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'silhouette'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgrid_search_kmeans\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'silhouette'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfloat\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mx\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgrid_search_kmeans\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'silhouette'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0midxmax\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0mbest_k\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mgrid_search_kmeans\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mloc\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m'k'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/AnacondaInstall/anaconda3/lib/python3.7/site-packages/pandas/core/series.py\u001b[0m in \u001b[0;36midxmax\u001b[0;34m(self, axis, skipna, *args, **kwargs)\u001b[0m\n\u001b[1;32m   2275\u001b[0m         \"\"\"\n\u001b[1;32m   2276\u001b[0m         \u001b[0mskipna\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnv\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalidate_argmax_with_skipna\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mskipna\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2277\u001b[0;31m         \u001b[0mi\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnanops\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnanargmax\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcom\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalues_from_object\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mskipna\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mskipna\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2278\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mi\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2279\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnan\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/AnacondaInstall/anaconda3/lib/python3.7/site-packages/pandas/core/nanops.py\u001b[0m in \u001b[0;36m_f\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m     65\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0many\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcheck\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mobj\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mobj_iter\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     66\u001b[0m                 \u001b[0mmsg\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"reduction operation {name!r} not allowed for this dtype\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 67\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmsg\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mformat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__name__\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreplace\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"nan\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     68\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     69\u001b[0m                 \u001b[0;32mwith\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0merrstate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minvalid\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"ignore\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mTypeError\u001b[0m: reduction operation 'argmax' not allowed for this dtype"
     ]
    }
   ],
   "source": [
    "grid_search_kmeans['silhouette'] = grid_search_kmeans['silhouette'].apply(float)\n",
    "x = grid_search_kmeans['silhouette'].idxmax()\n",
    "best_k = int(grid_search_kmeans.loc[x,'k'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Thèmes par label"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {},
   "outputs": [],
   "source": [
    "def group_document(texts):\n",
    "    '''Takes as input a list of text documents'''\n",
    "    res = pd.DataFrame(columns=['id_doc', 'id_sent', 'sent'])\n",
    "    i = 0\n",
    "    j = 0\n",
    "    for text in texts.values.tolist():\n",
    "        temp = str(text).split('.')\n",
    "        for item in temp:\n",
    "            temp1 = [i,j,item]\n",
    "            res.loc[j] = temp1\n",
    "            j += 1\n",
    "        i += 1\n",
    "    return res\n",
    "        \n",
    "def get_document(sentence, documents):\n",
    "    documents = group_documentv2(documents)\n",
    "    '''Takes as input a sentence and list of text documents\n",
    "    Outputs a list of doc id in which that sentence exists'''\n",
    "    id_sent = documents[documents['sent']==sentence].index\n",
    "    return documents.id_doc.loc[id_sent].values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {},
   "outputs": [],
   "source": [
    "path_text = 'txt/'\n",
    "files_text = glob.glob(path_text+'*.txt')\n",
    "\n",
    "text = []\n",
    "for file in files_text:\n",
    "    text.append(str(open(file,'r', encoding=\"latin-1\").read()))\n",
    "\n",
    "\n",
    "texts = pd.DataFrame(text, columns=['doc'])\n",
    "\n",
    "texts = group_document(texts.doc)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'best_k' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-76-54da9a09e44c>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mX\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtfidf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtransform\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtexts\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msent\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtolist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0mlabels_kmeans\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mKMeans\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mbest_k\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlabels_\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m: name 'best_k' is not defined"
     ]
    }
   ],
   "source": [
    "# Finding themes of each sentence\n",
    "\n",
    "X = tfidf.transform(texts.sent.tolist())\n",
    "labels_kmeans = KMeans(best_k).fit(X).labels_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'labels_kmeans' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-40-59b7d322647e>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mtable\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0munique\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabels_kmeans\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m     \u001b[0mtable\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtexts\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwhere\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtexts\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"labels\"\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0mi\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdropna\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mNameError\u001b[0m: name 'labels_kmeans' is not defined"
     ]
    }
   ],
   "source": [
    "table = []\n",
    "for i in range(np.unique(labels_kmeans).shape[0]):\n",
    "    table.append(texts.where(texts[\"labels\"] == i).dropna())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import gensim\n",
    "from gensim import corpora\n",
    "\n",
    "top = []\n",
    "for item in table : \n",
    "    tokens = item.apply(preprocess_token)\n",
    "\n",
    "    gensim_dictionary = corpora.Dictionary(tokens)\n",
    "    gensim_corpus = [gensim_dictionary.doc2bow(token, allow_update=True) for token in tokens]\n",
    "\n",
    "    lda_model = gensim.models.ldamodel.LdaModel(gensim_corpus, num_topics=1, id2word=gensim_dictionary, passes=100)\n",
    "\n",
    "    topics = lda_model.print_topics(num_words=20)\n",
    "    \n",
    "    for topic in topics:\n",
    "        top.append(re.findall('\"([^\"]*)\"', topic[1]))\n",
    "        \n",
    "        print(topic)\n",
    "np.unique(np.array(top))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<center> ===============================================================================================================================================  \n",
    "    \n",
    "# **Extractive summarization**\n",
    "<center> ===============================================================================================================================================  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "import glob\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "import nltk\n",
    "import os\n",
    "import re\n",
    "import math\n",
    "import operator\n",
    "\n",
    "from nltk.corpus import stopwords\n",
    "from nltk.stem import WordNetLemmatizer\n",
    "from nltk.stem.porter import PorterStemmer\n",
    "from nltk.tokenize import sent_tokenize, word_tokenize\n",
    "\n",
    "wordlemmatizer = WordNetLemmatizer()\n",
    "stemmer = PorterStemmer()\n",
    "\n",
    "stop_words = stopwords.words('english') \n",
    "stop_words.extend(['airbus','helicopter','helicopters','flight','vsr','heli_expo','unmanned','also','use','blr',\n",
    "                   'say','subject','edu','would','say','know','good','go','get','done','try','many',\n",
    "                   'nice','thank','think','see','rather','easy','easily','lot','lack','make','want',\n",
    "                   'seem','run','need','even','right','line','even','also','may','take','come',\n",
    "                   'year','time','hour','first','last','second','high','new','low'])\n",
    "\n",
    "Stopwords = set(stop_words)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Extractive Model Pipeline\n",
    "# <center> ![Extractive method](https://miro.medium.com/max/1558/1*mmxzXAuEq2EEdc6ouW5Qaw.png)\n",
    "\n",
    "- *`Lemmatization`* usually refers to doing things properly with the use of a vocabulary and morphological analysis of words, normally aiming to remove inflectional endings only and to return the base or dictionary form of a word, which is known as the lemma.\n",
    "- *`Stemming`* usually refers to a crude heuristic process that chops off the ends of words in the hope of achieving this goal correctly most of the time, and often includes the removal of derivational affixes. [source](https://nlp.stanford.edu/IR-book/html/htmledition/stemming-and-lemmatization-1.html)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "def lemmatize_words(words):\n",
    "    \"\"\"\n",
    "    Lemmatize using WordNet's built-in morphy function.\n",
    "    Returns the input word unchanged if it cannot be found in WordNet.\n",
    "    \"\"\"\n",
    "    words\n",
    "    lemmatized_words = []\n",
    "    for word in words:\n",
    "        lemmatized_words.append(wordlemmatizer.lemmatize(word))\n",
    "    return lemmatized_words\n",
    "\n",
    "\n",
    "def stem_words(words):\n",
    "    stemmed_words = []\n",
    "    for word in words:\n",
    "        stemmed_words.append(stemmer.stem(word))\n",
    "    return stemmed_words\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Calculating the frequency of each word in the document\n",
    "While working with text it becomes important to calculate the frequency of words, to find the most common or least common words based on the requirement of the algorithm."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "def freq(words):\n",
    "    \"\"\"\n",
    "    Here we take the list of words as input and append all the unique words in a new list namde words_unique.\n",
    "    After finding the unique words, the frequency of the word can be found using count function.\n",
    "    \"\"\"\n",
    "    words = [word.lower() for word in words]\n",
    "    dict_freq = {}\n",
    "    words_unique = []\n",
    "    \n",
    "    # Keep the unique words only\n",
    "    for word in words:\n",
    "        if word not in words_unique and word not in Stopwords and word not in Stopwords and len(word)>2:\n",
    "            words_unique.append(word)\n",
    "    \n",
    "    # Compute the frequency of the words\n",
    "    for word in words_unique:\n",
    "        dict_freq[word] = words.count(word)\n",
    "    return dict_freq\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "def pos_tagging(text):\n",
    "    \"\"\"\n",
    "    This function returns only the noun and verb tagged words.\n",
    "    The returned words from pos_tagging function are sent to word_tfidf function to calculate the score of that word in the document by calculating its tfidf score.\n",
    "    \"\"\"\n",
    "    pos_tag = nltk.pos_tag(word_tokenize(text))\n",
    "    pos_tagged_noun_verb = []\n",
    "    for word, tag in pos_tag:\n",
    "        if tag==\"NN\" or tag==\"NNP\" or tag==\"NNS\" or tag==\"VB\" or tag==\"VBD\" or tag==\"VBG\" or tag==\"VBN\" or tag==\"VBP\" or tag==\"VBZ\":\n",
    "            pos_tagged_noun_verb.append(word)\n",
    "    return pos_tagged_noun_verb\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## TFIDF Approach \n",
    "> \"TFIDF, short for term frequency–inverse document frequency, is a numeric measure that is use to score the importance of a word in a document based on how often did it appear in that document and a given collection of documents. The intuition behind this measure is : `If a word appears frequently in a document, then it should be important and we should give that word a high score. But if a word appears in too many other documents, it’s probably not a unique identifier, therefore we should assign a lower score to that word.`\"\n",
    "\n",
    "- TF(w) = (Number of times term w appears in a document) / (Total number of terms in the document)\n",
    "- IDF(w) = log_e(Total number of documents / Number of documents with term w in it)\n",
    "- $TFIDF(w) = TF(w) * IDF(w)$\n",
    "\n",
    "\n",
    "## TF-IDF : définition\n",
    "TF-IDF sont les acronymes de « Terme Frequency » et « Inverse Document Frequency ».Ils suivent la logique du Cosinus de Salton. On cherche à accorder une pertinence lexicale à un terme au sein d’un document. En ce qui concerne TF-IDF, on applique une relation entre un document, et un ensemble de documents partageant des similarités en matière de mots clés. On recherche en quelque sorte une relation de quantité / qualité lexicale à travers un ensemble de documents.\n",
    "Pour une requête avec un terme X, un document a plus de chances d’être pertinent comme réponse à la requête, si ce document possède une certaine occurrence de ce terme en son sein, et que ce terme possède une rareté dans d’autres documents reliés au premier.\n",
    "\n",
    "### Formule mathématique et explication de TF-IDF\n",
    "$W{x,y} = tf_{x,y}*log(N/df_x)$  \n",
    "where $tf_{x,y}$ = frenquency of x in y, $df_x$ = number of documents containing x, N = number of total documents  \n",
    "\n",
    "> Place à l’application pour mieux comprendre. La formule est toute simple : Score TF-IDF(que nous appelons par convention w ) w = TF*IDF.\n",
    "\n",
    "> TF = Nombre d’occurrences du terme au sein du document. Comme pour le Cosinus de Salton, vous pouvez décomposer le document en lexie, et procéder cette opération :\n",
    "Nombre d’occurrence du terme analysé / Nombre de termes total\n",
    "\n",
    "> Opération relativement simple, et nous avons désormais notre TF, notre score de quantité. Passons maintenant à l’IDF.\n",
    "\n",
    "> Celui-ci est un peu plus complexe. Il faudra vous armer ici d’une calculette comprenant les échelles logarithmiques. Alors, je ne vais pas vous faire un cours sur les logarithmes, parce que honnêtement, j’en serai pas capable, mais on va tenter de vulgariser un peu la définition : un logarithme est un exposant qu’on affecte à un nombre pour en obtenir un autre. SOS charabia ? Voici un exemple 🙂 : Le nombre 1000 peut s’écrire comme cela 103. Si je me réfère à la définition, le chiffre 3 est l’exposant de 10, et est par conséquent le logarithme de 1000. Plus d’infos ici !\n",
    "\n",
    "> Revenons donc à IDF. Il faut dans un premier temps dénombrer l’ensemble des documents comportant au minimum une fois le terme analysé. Maintenant faîtes le calcule suivant :\n",
    "\n",
    "> IDF = log(Nombre total de documents / Nombre de documents contenant le terme analysé)\n",
    "\n",
    "> Vous venez de trouver votre IDF, soit votre score de qualité. Multipliez donc vos deux résultats pour obtenir votre score TF-IDF. \n",
    "\n",
    "[Quentin Fily](https://www.quentinfily.fr/tf-idf-pertinence-lexicale/)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "def tf_score(word, sentence):\n",
    "    \"\"\"\n",
    "    tf is calculated as the number of times the word appears in the sentence upon the total number of words in the sentence.\n",
    "    \"\"\"\n",
    "    freq_sum = 0\n",
    "    word_frequency_in_sentence = 0\n",
    "    len_sentence = len(sentence)\n",
    "    for word_in_sentence in word_tokenize(sentence):\n",
    "        if word == word_in_sentence:\n",
    "            word_frequency_in_sentence = word_frequency_in_sentence + 1\n",
    "    tf =  word_frequency_in_sentence/len_sentence\n",
    "    return tf\n",
    "\n",
    "\n",
    "def idf_score(nb_of_sentences, word, sentences):\n",
    "    \"\"\"\n",
    "    This function finds the idf score of the word, \n",
    "        by dividing the total number of sentences by number of sentences containing the word \n",
    "        and then taking a log10 of that value.\n",
    "    \"\"\"\n",
    "    nb_of_sentence_containing_word = 0\n",
    "    for sentence in sentences:\n",
    "        sentence = re.sub(r'\\d+', '', sentence)\n",
    "        sentence = word_tokenize(sentence)\n",
    "        sentence = [word for word in sentence if word.lower() not in Stopwords and len(word)>1]\n",
    "        sentence = [word.lower() for word in sentence]\n",
    "        sentence = [wordlemmatizer.lemmatize(word) for word in sentence]\n",
    "        if word in sentence:\n",
    "            nb_of_sentence_containing_word = nb_of_sentence_containing_word + 1\n",
    "    idf = math.log10(nb_of_sentences/nb_of_sentence_containing_word)\n",
    "    return idf\n",
    "\n",
    "def tf_idf_score(tf, idf):\n",
    "    return tf*idf\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "def word_tfidf(dict_freq, word, sentences, sentence):\n",
    "    word_tfidf = []\n",
    "    tf = tf_score(word, sentence)\n",
    "    idf = idf_score(len(sentences), word, sentences)\n",
    "    tf_idf = tf_idf_score(tf, idf)\n",
    "    return tf_idf\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Sentence importance score\n",
    "As the score given to each sentence decides the importance of the sentence, it becomes extremely important to choose the correct algorithm to find the score. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "def sentence_importance(sentence, dict_freq, sentences):\n",
    "    \"\"\"\n",
    "    In this approach, we will be using TFIDF score of each word to calculate the total sentence score.\n",
    "    \"\"\"\n",
    "    \n",
    "    sentence = re.sub(r'\\d+', '', sentence)\n",
    "    \n",
    "    sentence_score = 0\n",
    "    pos_tagged_sentence = [] \n",
    "    nb_of_sentences = len(sentences)\n",
    "    pos_tagged_sentence = pos_tagging(sentence)\n",
    "    for word in pos_tagged_sentence:\n",
    "        if word.lower() not in Stopwords and word not in Stopwords and len(word)>2: \n",
    "            word = word.lower()\n",
    "            word = wordlemmatizer.lemmatize(word)\n",
    "            sentence_score = sentence_score + word_tfidf(dict_freq, word, sentences, sentence)\n",
    "    return sentence_score\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "def summarization(documents, topic_id):\n",
    "    \n",
    "    tokenized_sentence = sent_tokenize(documents)\n",
    "    tokenized_words_with_stopwords = word_tokenize(documents)\n",
    "    tokenized_words_with_stopwords = [word.replace(\"'\",\"\") for word in tokenized_words_with_stopwords]\n",
    "\n",
    "    tokenized_words = [word for word in tokenized_words_with_stopwords if word not in Stopwords]\n",
    "    tokenized_words = [word for word in tokenized_words if len(word) > 1]\n",
    "\n",
    "    tokenized_words = lemmatize_words(tokenized_words)\n",
    "\n",
    "    # Compute the frequency\n",
    "    word_freq = freq(tokenized_words)\n",
    "\n",
    "    #input_user = int(input('Percentage of information to retain(%):'))\n",
    "    nb_of_sentences = int((input_user * len(tokenized_sentence))/100)\n",
    "    print('Summarize topic_'+str(topic_id)+' in '+str(nb_of_sentences)+' sentences:')\n",
    "    \n",
    "    c = 1\n",
    "    sentence_with_importance = {}\n",
    "    for sent in tokenized_sentence:\n",
    "        sentenceimp = sentence_importance(sent, word_freq, tokenized_sentence)\n",
    "        sentence_with_importance[c] = sentenceimp\n",
    "        c = c+1\n",
    "    sentence_with_importance = sorted(sentence_with_importance.items(), key=operator.itemgetter(1), reverse=True)\n",
    "\n",
    "    cnt = 0\n",
    "    sentence_nb = []\n",
    "    for word_prob in sentence_with_importance:\n",
    "        if cnt < nb_of_sentences:\n",
    "            sentence_nb.append(word_prob[0])\n",
    "            cnt = cnt+1\n",
    "        else:\n",
    "            break\n",
    "\n",
    "    sentence_nb.sort()\n",
    "\n",
    "    summary = []\n",
    "    cnt = 1\n",
    "    x = []\n",
    "    for sentence in tokenized_sentence:\n",
    "        if cnt in sentence_nb:\n",
    "            summary.append(sentence.capitalize())\n",
    "            x.append(cnt)\n",
    "        cnt = cnt+1\n",
    "\n",
    "    summary = \" \".join(summary)\n",
    "    return summary\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>topic_id</th>\n",
       "      <th>#_documents</th>\n",
       "      <th>3top_words</th>\n",
       "      <th>topic</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>test \\naircraft \\npilot</td>\n",
       "      <td>airbus helicopters has successfully completed ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>system \\naircraft \\noperator</td>\n",
       "      <td>continued weakness in the oil and gas market h...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>system \\naircraft \\ndesign</td>\n",
       "      <td>there is as much innovation in the way the h16...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>production \\naircraft \\ncabin</td>\n",
       "      <td>airbus helicopters flew the first production m...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   topic_id  #_documents                     3top_words  \\\n",
       "0         0           10        test \\naircraft \\npilot   \n",
       "1         1            6   system \\naircraft \\noperator   \n",
       "2         2            8     system \\naircraft \\ndesign   \n",
       "3         3            5  production \\naircraft \\ncabin   \n",
       "\n",
       "                                               topic  \n",
       "0  airbus helicopters has successfully completed ...  \n",
       "1  continued weakness in the oil and gas market h...  \n",
       "2  there is as much innovation in the way the h16...  \n",
       "3  airbus helicopters flew the first production m...  "
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "### Appliquer sur chaque topic\n",
    "\n",
    "df_document = pd.read_csv('weigh_topic_doc.csv')\n",
    "df_topic= pd.read_csv('topic.csv')\n",
    "df_topic"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Percentage of information to retain(%):10\n",
      "\n"
     ]
    },
    {
     "ename": "NameError",
     "evalue": "name 'process_document' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m<timed exec>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n",
      "\u001b[0;32m<timed exec>\u001b[0m in \u001b[0;36m<listcomp>\u001b[0;34m(.0)\u001b[0m\n",
      "\u001b[0;31mNameError\u001b[0m: name 'process_document' is not defined"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "input_user = int(input('Percentage of information to retain(%):')); print()\n",
    "\n",
    "topic_summary = [summarization(process_document(df_topic.topic)[t], t) for t in df_topic.topic_id.unique()]\n",
    "\n",
    "print()\n",
    "print(\"Hey! We are ok! All documents are summarized.\")\n",
    "\n",
    "df_topic['topic_summarized'] = topic_summary\n",
    "df_topic"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Percentage of information to retain(%): 5\n",
      "Summarize topic_0 in 8 sentences ==============================>:\n",
      "6 inch horizontal format can accommodate primary flight display pfd information and a multifunction display mfd side by side within the same unit. There are odd ones for the national guard , combat training center , national training center. The h160 is particularly well suited for long distance hems missions because of its 150 knot cruise speed , low cabin vibration , robust cabin air conditioning , flat approach angle , easy loading and unloading , ample artificial and natural cabin lighting , and generous cabin volume that facilitates 360 degree patient access , he said. Anti submarine warfare asw vsr700 anti submarine warfare the vsr700 is capable of carrying and positioning an anti submarine warfare asw barrier to complement a ship s asw activity or that of a helicopter with manned unmanned teaming mumt. Anti surface warfare asuw vsr700 anti surface anti surface warfare asuw is conducted in very hostile environments where a potential threat has to be distinguished from neutral or friendly sea traffic. Maritime security vsr700 maritime security in maritime security missions , the ability to scan a large maritime zone , track the activity within it , identify contacts of interest and remain discreet is essential. Search and rescue sar vsr700 search and rescue search and rescue sar is often a race against time.\n",
      "Summarize topic_1 in 6 sentences ==============================>:\n",
      "Hai returns to heli expo after capping an intense lobbying campaign to combat user fees and secure a long range faa reauthorization bill. The forum tends to draw a standing room only crowd. Data proves customers experience an up to 18 percent increase in useful load and a 10 percent increase in available right pedal margin at high power settings , which translates into a 100 percent payback on the system investment in as little as 21 months. The fastfin system is approved by the federal aviation administration faa , transport canada tc , the european aviation safety agency easa , and numerous other civil aviation authorities around the world. H160 timeline 2011 the h160 is first revealed as the x4 concept march 2015 the x4 was renamed the h160 june 2015 the first h160 prototype takes its first test flight december 2015 the second prototype performed its initial ground run january 2016 the second prototype took its maiden flight october 2017 third h160 prototype revealed march 2018 babcock announced as launch customer march 2018 airbus sells the first ach160 , the airbus corporate version.\n",
      "Summarize topic_2 in 7 sentences ==============================>:\n",
      "Imt vislink booth c4338 is showcasing its updated airborne video downlink system avds with the addition of the tsm 2020 transport management system at the hai heli expo 2019. imt vislink s avds is an integrated suite of downlink transmitters , receivers and antennas that creates a comprehensive aerial based video transmission solution. Including search and rescue operations , narcotics surveillance interdiction , personnel cargo transport , inter agency pursuit coordination , wildfire suppression , emergency medical services transport , and patrol support. It includes a 4 axis autopilot , increasing safety and reducing pilot workload. We used a lot of methodology coming from the automotive sector such as ring methodology. The 169 hils will replace the dauphin , gazelle , dauphin , fennec and alouette iii in the three french armed forces.\n",
      "Summarize topic_3 in 4 sentences ==============================>:\n",
      "Program milestones last year included successful drop testing of the production landing gear , production engine certification testing on ac3 , continued fuselage and empennage fatigue testing , and installation of a new production main cabin door designed with an embedded rescue hoist for search and rescue operations. Airbus helicopters announced the h160 fuselage tail boom join up in july. Ach managing director frederic lemos said , it is particularly pleasing to see the new ach160 continuing to win orders.\n",
      "Summarize topic_4 in 6 sentences ==============================>:\n",
      "The uav was piloted and monitored from the ground station located at the base. The aircraft was piloted and monitored from a ground station located at the base. Passing this first step of autonomous flights with a safety pilot onboard allows us to validate the integration of airbus helicopters flight control system with the aerial vehicle and its specific engine installation said bruno guimbal , president ceo of helicopteres guimbal. Newly signed up customers include dare county north carolina medflight , the ukrainian ministry of interior , advance flight of new zealand , the norwegian air ambulance services , and swiss air rega. On the support side , airbus signed contracts covering the 19 helicopters in the uk s national police air service fleet.\n"
     ]
    }
   ],
   "source": [
    "print('Percentage of information to retain(%): 5')\n",
    "for t in range(len(topic_summary)):\n",
    "    print('Summarize topic_'+str(t)+' in '+str(len(str(topic_summary[t]).split('.')))+' sentences '+'='*30+'>:')\n",
    "    print(topic_summary[t])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [],
   "source": [
    "def group_doc(doc_id, document):\n",
    "    \n",
    "    documents = str()\n",
    "    for doc_id, document in zip(doc_id, process_document(document)):\n",
    "        sentences = str()\n",
    "        for sentence, sent_id in zip(document.split('.'), range(len(document.split('.')))):\n",
    "            sentences += 'sent'+str(sent_id)+'_doc'+str(doc_id)+'. '+sentence+'.'\n",
    "            \n",
    "        sentences = sentences.replace('. .','.').replace('..','.').replace('  ',' ')\n",
    "        documents += sentences\n",
    "        \n",
    "    return documents\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_ID(df=None, df_topic=None, k_topic=100):\n",
    "    \n",
    "    documentID  = []; docuSentID = [];\n",
    "    TopicSentID = []; TopicID = []\n",
    "    summary = []\n",
    "    \n",
    "    for i in range(k_topic):\n",
    "        \n",
    "        df_doc    = df.loc[df.topic_id==i]\n",
    "        document  = group_doc(df_doc.doc_id, df_doc.document)\n",
    "        document_ = '___________________________. '+document\n",
    "        \n",
    "        topic_sentences  = group_doc(df_topic.loc[df_topic.topic_id==i]['topic_id'], df_topic.loc[df_topic.topic_id==i]['topic'])\n",
    "        topic_sentences_ = '___________________________. '+topic_sentences\n",
    "        topic_summarize  = process_document(df_topic.loc[df_topic.topic_id==i]['topic_summarized'])\n",
    "\n",
    "        for SentDocID, doc_sent in zip(document_.split('.'), document.split('.')):\n",
    "            for sammary_sent in str(topic_summarize).split('.'):\n",
    "                \n",
    "                if sammary_sent == doc_sent:\n",
    "                    documentID.append(SentDocID.split('_doc')[1]);\n",
    "                    docuSentID.append(SentDocID.split('_doc')[0].replace('sent',''))\n",
    "                    TopicID.append(i);\n",
    "                    summary.append(sammary_sent);\n",
    "                    \n",
    "        for SentTopic_id, topic_sent in zip(topic_sentences_.split('.'), topic_sentences.split('.')):\n",
    "            for summary_sent in str(topic_summarize).split('.'):\n",
    "                \n",
    "                if summary_sent == topic_sent:\n",
    "                    TopicSentID.append(SentTopic_id.split('_doc')[0].replace('sent',''));\n",
    "\n",
    "    df = pd.DataFrame([documentID, docuSentID, TopicID, TopicSentID, summary],\n",
    "                      index=['DocumentID','SentDocID','TopicID','SentTopicID','SummarizedSentence']).T\n",
    "    \n",
    "    return df\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>DocumentID</th>\n",
       "      <th>SentDocID</th>\n",
       "      <th>TopicID</th>\n",
       "      <th>SentTopicID</th>\n",
       "      <th>SummarizedSentence</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>22</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>23</td>\n",
       "      <td>there are odd ones for the national guard , c...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>9</td>\n",
       "      <td>10</td>\n",
       "      <td>0</td>\n",
       "      <td>78</td>\n",
       "      <td>the h160 is particularly well suited for long...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>12</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>100</td>\n",
       "      <td>anti submarine warfare asw vsr700 anti submar...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>0</td>\n",
       "      <td>103</td>\n",
       "      <td>anti surface warfare asuw vsr700 anti surface...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>12</td>\n",
       "      <td>16</td>\n",
       "      <td>0</td>\n",
       "      <td>107</td>\n",
       "      <td>maritime security vsr700 maritime security in...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>12</td>\n",
       "      <td>21</td>\n",
       "      <td>0</td>\n",
       "      <td>112</td>\n",
       "      <td>search and rescue sar vsr700 search and rescu...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>25</td>\n",
       "      <td>54</td>\n",
       "      <td>1</td>\n",
       "      <td>54</td>\n",
       "      <td>the forum tends to draw a standing room only ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>21</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>68</td>\n",
       "      <td>data proves customers experience an up to 18 ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>21</td>\n",
       "      <td>16</td>\n",
       "      <td>1</td>\n",
       "      <td>78</td>\n",
       "      <td>the fastfin system is approved by the federal...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>6</td>\n",
       "      <td>17</td>\n",
       "      <td>1</td>\n",
       "      <td>97</td>\n",
       "      <td>h160 timeline 2011 the h160 is first revealed...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>26</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>imt vislink s avds is an integrated suite of ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>26</td>\n",
       "      <td>20</td>\n",
       "      <td>2</td>\n",
       "      <td>20</td>\n",
       "      <td>including search and rescue operations , narc...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>20</td>\n",
       "      <td>9</td>\n",
       "      <td>2</td>\n",
       "      <td>30</td>\n",
       "      <td>it includes a 4 axis autopilot , increasing s...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>3</td>\n",
       "      <td>25</td>\n",
       "      <td>2</td>\n",
       "      <td>63</td>\n",
       "      <td>we used a lot of methodology coming from the ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>3</td>\n",
       "      <td>60</td>\n",
       "      <td>2</td>\n",
       "      <td>98</td>\n",
       "      <td>the 169 hils will replace the dauphin , gazel...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>55</td>\n",
       "      <td>airbus helicopters announced the h160 fuselag...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>1</td>\n",
       "      <td>21</td>\n",
       "      <td>3</td>\n",
       "      <td>80</td>\n",
       "      <td>ach managing director frederic lemos said , i...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>13</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>28</td>\n",
       "      <td>the aircraft was piloted and monitored from a...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>10</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>48</td>\n",
       "      <td>passing this first step of autonomous flights...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>24</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>60</td>\n",
       "      <td>newly signed up customers include dare county...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>24</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>63</td>\n",
       "      <td>on the support side , airbus signed contracts...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   DocumentID SentDocID TopicID SentTopicID  \\\n",
       "0          22         6       0          23   \n",
       "1           9        10       0          78   \n",
       "2          12         9       0         100   \n",
       "3          12        12       0         103   \n",
       "4          12        16       0         107   \n",
       "5          12        21       0         112   \n",
       "6          25        54       1          54   \n",
       "7          21         6       1          68   \n",
       "8          21        16       1          78   \n",
       "9           6        17       1          97   \n",
       "10         26         1       2           1   \n",
       "11         26        20       2          20   \n",
       "12         20         9       2          30   \n",
       "13          3        25       2          63   \n",
       "14          3        60       2          98   \n",
       "15          2         5       3          55   \n",
       "16          1        21       3          80   \n",
       "17         13         3       4          28   \n",
       "18         10         5       4          48   \n",
       "19         24         3       4          60   \n",
       "20         24         6       4          63   \n",
       "\n",
       "                                   SummarizedSentence  \n",
       "0    there are odd ones for the national guard , c...  \n",
       "1    the h160 is particularly well suited for long...  \n",
       "2    anti submarine warfare asw vsr700 anti submar...  \n",
       "3    anti surface warfare asuw vsr700 anti surface...  \n",
       "4    maritime security vsr700 maritime security in...  \n",
       "5    search and rescue sar vsr700 search and rescu...  \n",
       "6    the forum tends to draw a standing room only ...  \n",
       "7    data proves customers experience an up to 18 ...  \n",
       "8    the fastfin system is approved by the federal...  \n",
       "9    h160 timeline 2011 the h160 is first revealed...  \n",
       "10   imt vislink s avds is an integrated suite of ...  \n",
       "11   including search and rescue operations , narc...  \n",
       "12   it includes a 4 axis autopilot , increasing s...  \n",
       "13   we used a lot of methodology coming from the ...  \n",
       "14   the 169 hils will replace the dauphin , gazel...  \n",
       "15   airbus helicopters announced the h160 fuselag...  \n",
       "16   ach managing director frederic lemos said , i...  \n",
       "17   the aircraft was piloted and monitored from a...  \n",
       "18   passing this first step of autonomous flights...  \n",
       "19   newly signed up customers include dare county...  \n",
       "20   on the support side , airbus signed contracts...  "
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "get_ID(df_document, df_topic)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# PYTEXT RANK : EXTRACTIVE METHOD"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [],
   "source": [
    "dd=df_document[['doc_id', 'document']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [],
   "source": [
    "import spacy\n",
    "import en_core_web_sm\n",
    "nlp = en_core_web_sm.load()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pytextrank\n",
    "\n",
    "tr = pytextrank.TextRank()\n",
    "nlp.add_pipe(tr.PipelineComponent, name=\"textrank\", last=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [],
   "source": [
    "train_review = dd['document']\n",
    "train_token = ''\n",
    "for i in dd['document']:\n",
    "    train_token += str(i)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [],
   "source": [
    "doc = nlp(train_token)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.0775     2  airbus helicopters flight control system\n",
      "[airbus helicopters flight control system, airbus helicopters flight control system]\n",
      "0.0741     1  airbus helicopters automatic flight control system\n",
      "[airbus helicopters automatic flight control system]\n",
      "0.0667     1  airbus helicopters site\n",
      "[airbus helicopters site]\n",
      "0.0665     3  airbus h145 helicopters\n",
      "[airbus h145 helicopters, airbus h145 helicopters, airbus h145 helicopters]\n",
      "0.0659     1  airbus corporate helicopters\n",
      "[airbus corporate helicopters]\n",
      "0.0658     2  manned helicopter flights\n",
      "[manned helicopter flights, manned helicopter flights]\n",
      "0.0656     1  airbusthe airbus helicopters\n",
      "[airbusthe airbus helicopters]\n",
      "0.0656     1  airbus helicopters sas\n",
      "[airbus helicopters sas]\n",
      "0.0620     1  airbus helicopters marketing director\n",
      "[airbus helicopters marketing director]\n",
      "0.0617     1  airbus helicopters unique expertise\n",
      "[airbus helicopters unique expertise]\n",
      "0.0596    35  helicopter\n",
      "[helicopter, helicopters, helicopter, helicopters, helicopter, helicopters, the helicopter, its helicopters, the helicopter, the helicopter, the helicopter, the helicopters, the helicopter, the helicopter, the helicopter, its helicopters, a helicopter, its helicopter, a helicopter, the helicopter, a helicopter, 2019.airbus helicopters, a helicopter, the helicopter, the helicopter, the helicopter, the helicopter, the helicopter, the helicopters, the helicopter, the helicopters, the helicopter, the helicopter, the 19 helicopters, the roughly 60 helicopters]\n",
      "0.0595     2  helicopter operators\n",
      "[helicopter operators, helicopter operators]\n",
      "0.0589     3  helicopter pilots\n",
      "[helicopter pilots, helicopter pilots, 7,600 helicopters pilots]\n",
      "0.0580     1  single engine helicopters\n",
      "[single engine helicopters]\n",
      "0.0574     1  helicopter certification\n",
      "[helicopter certification]\n",
      "0.0571     1  naval helicopters\n",
      "[naval helicopters]\n",
      "0.0570     1  utility helicopter\n",
      "[utility helicopter]\n",
      "0.0564     1  more helicopter ifr missions\n",
      "[more helicopter ifr missions]\n",
      "0.0563     1  multiple helicopters\n",
      "[multiple helicopters]\n",
      "0.0559     1  board helicopter\n",
      "[board helicopter]\n",
      "0.0558     2  manned helicopters\n",
      "[manned helicopters, manned helicopters]\n",
      "0.0554     2  leonardo helicopters\n",
      "[leonardo helicopters, leonardo helicopters]\n",
      "0.0552     1  firehawk helicopters\n",
      "[firehawk helicopters]\n",
      "0.0552     1  helicopter customizations\n",
      "[helicopter customizations]\n",
      "0.0551     1  h160.airbus helicopters\n",
      "[h160.airbus helicopters]\n",
      "0.0551     1  place.airbus helicopters\n",
      "[place.airbus helicopters]\n",
      "0.0551     1  helicopter lessors\n",
      "[helicopter lessors]\n",
      "0.0551     4  helicopter ems hems\n",
      "[helicopter ems hems, helicopter ems hems, helicopter ems hems, helicopter ems hems]\n",
      "0.0543     1  medium twin ems helicopters\n",
      "[medium twin ems helicopters]\n",
      "0.0534     1  long distances.airbus helicopters\n",
      "[long distances.airbus helicopters]\n",
      "0.0531     1  tactical helicopter drone demonstrator\n",
      "[tactical helicopter drone demonstrator]\n",
      "0.0528     1  diesel powered helicopter\n",
      "[diesel powered helicopter]\n",
      "0.0521     1  less time.airbus helicopters\n",
      "[less time.airbus helicopters]\n",
      "0.0519     2  leonardo helicopters aw139s\n",
      "[leonardo helicopters aw139s, leonardo helicopters aw139s]\n",
      "0.0514     1  rotary wing unmanned aircraft systems\n",
      "[rotary wing unmanned aircraft systems]\n",
      "0.0513     6  flight test\n",
      "[flight test, flight tests, flight tests, flight tests, flight test, the test flights]\n",
      "0.0511     1  airbus customer centers\n",
      "[airbus customer centers]\n",
      "0.0510     1  autonomous flights tests\n",
      "[autonomous flights tests]\n",
      "0.0507     2  flight test hours\n",
      "[flight test hours, flight test hours]\n",
      "0.0507     2  unmanned flights\n",
      "[unmanned flights, unmanned flight]\n",
      "0.0504     1  satisfied airbus customers\n",
      "[satisfied airbus customers]\n",
      "0.0501     1  additional cold weather testing.airbus helicopters\n",
      "[additional cold weather testing.airbus helicopters]\n",
      "0.0491     1  h160 customers\n",
      "[h160 customers]\n",
      "0.0490     1  efficient rotorcraft compound helicopter\n",
      "[efficient rotorcraft compound helicopter]\n",
      "0.0489   124  airbus\n",
      "[airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus, airbus]\n",
      "0.0488     5  autonomous flight\n",
      "[autonomous flight, autonomous flights, autonomous flights, autonomous flights, fully autonomous flights]\n",
      "0.0483     1  future unmanned flight\n",
      "[future unmanned flight]\n",
      "0.0483     6  flight\n",
      "[flight, flight, flight, flight, the flight, the flight]\n",
      "0.0481     2  mission system\n",
      "[mission system, mission system]\n",
      "0.0478     1  airbus helicopters\n",
      "[airbus helicopters]\n",
      "0.0477     1  h160 s\n",
      "[h160 s]\n",
      "0.0474     1  h160.the first serial production airbus helicopters\n",
      "[h160.the first serial production airbus helicopters]\n",
      "0.0471     2  autonomous flight trials\n",
      "[autonomous flight trials, autonomous flight trials]\n",
      "0.0467     2  flight trials\n",
      "[flight trials, flight trials]\n",
      "0.0466     3  airbus h145\n",
      "[airbus h145, airbus h145, airbus h145]\n",
      "0.0465     1  wire flight controls\n",
      "[wire flight controls]\n",
      "0.0464     1  automated flight control\n",
      "[automated flight control]\n",
      "0.0460     1  airbus h125\n",
      "[airbus h125]\n",
      "0.0460     2  h160 launch customer babcock\n",
      "[h160 launch customer babcock, h160 launch customer babcock]\n",
      "0.0458     3  airbus helicopters marignane base\n",
      "[airbus helicopters marignane base, airbus helicopters marignane base, airbus helicopters marignane base]\n",
      "0.0453     1  complex mission systems\n",
      "[complex mission systems]\n",
      "0.0451     3  flight patterns\n",
      "[flight patterns, flight patterns, flight patterns]\n",
      "0.0449     1  more fastfin system orders\n",
      "[more fastfin system orders]\n",
      "0.0448     1  stabilised flight\n",
      "[stabilised flight]\n",
      "0.0448     1  specific flight conditions\n",
      "[specific flight conditions]\n",
      "0.0448     1  advance flight\n",
      "[advance flight]\n",
      "0.0447     1  stable flight\n",
      "[stable flight]\n",
      "0.0446     1  video management systems\n",
      "[video management systems]\n",
      "0.0444     1  airbus helicopters consortium\n",
      "[airbus helicopters consortium]\n",
      "0.0441     1  test aircraft\n",
      "[test aircraft]\n",
      "0.0439     1  a traditional helicopter test flight\n",
      "[a traditional helicopter test flight]\n",
      "0.0435     1  single engine aircraft\n",
      "[single engine aircraft]\n",
      "0.0434     2  airbus helicopter division\n",
      "[airbus helicopter division, airbus helicopter division]\n",
      "0.0433     1  safety first airbus test pilot\n",
      "[safety first airbus test pilot]\n",
      "0.0432     2  more aircraft\n",
      "[more aircraft, more than 40 aircraft]\n",
      "0.0429     1  autonomous navigation system\n",
      "[autonomous navigation system]\n",
      "0.0429     1  airbus booth c305\n",
      "[airbus booth c305]\n",
      "0.0427     2  h160 program\n",
      "[h160 program, h160 program]\n",
      "0.0425     1  all airbus helicopters models\n",
      "[all airbus helicopters models]\n",
      "0.0425     1  stability system\n",
      "[stability system]\n",
      "0.0423     1  airbus commercial aircraft\n",
      "[airbus commercial aircraft]\n",
      "0.0419     1  blr aerospace s h125 fastfin system\n",
      "[blr aerospace s h125 fastfin system]\n",
      "0.0419   126  h160\n",
      "[h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, h160, the h160, the h160, the h160, the h160, the h160, the h160, an h160, the h160, the h160, the h160, the h160, the h160, the h160, the h160, the h160, the h160, the h160, the h160, the h160, the h160, the h160, the h160, the h160, the h160, the h160, the h160, the h160, the h160, the h160, the h160, the h160, the h160, the h160, the h160, the h160, the h160, the h160, the h160, the h160, the h160, the h160, the h160, the h160, the h160, the h160, the h160, the h160, the h160, h160 s, h160 s]\n",
      "0.0418     1  eurotec vertical flight solutions eurotec\n",
      "[eurotec vertical flight solutions eurotec]\n",
      "0.0418     1  stabilized flight maneuvers\n",
      "[stabilized flight maneuvers]\n",
      "0.0417     1  fastfin systems\n",
      "[fastfin systems]\n",
      "0.0416     1  the airbus corporate versionairbus helicopters\n",
      "[the airbus corporate versionairbus helicopters]\n",
      "0.0415     2  other aircraft\n",
      "[other aircraft, its other aircraft]\n",
      "0.0411     1  airbus helicopters north american region\n",
      "[airbus helicopters north american region]\n",
      "0.0411     1  the h160 helicopter prototypes\n",
      "[the h160 helicopter prototypes]\n",
      "0.0408     1  military aircraft\n",
      "[military aircraft]\n",
      "0.0407     1  production engine certification testing\n",
      "[production engine certification testing]\n",
      "0.0406     1  last year s heli expo\n",
      "[last year s heli expo]\n",
      "0.0404     2  airbus digital helicopter avionics suite\n",
      "[airbus digital helicopter avionics suite, airbus digital helicopter avionics suite]\n",
      "0.0402     1  third h160 prototype\n",
      "[third h160 prototype]\n",
      "0.0402     1  a pilot operated flight control system\n",
      "[a pilot operated flight control system]\n",
      "0.0398     1  its latest h160 helicopter\n",
      "[its latest h160 helicopter]\n",
      "0.0397     1  pro line fusion flight deck\n",
      "[pro line fusion flight deck]\n",
      "0.0396     2  h160m\n",
      "[h160m, h160m]\n",
      "0.0396     1  primary flight display pfd information\n",
      "[primary flight display pfd information]\n",
      "0.0395     2  the h160 helicopter\n",
      "[the h160 helicopter, the h160 helicopter]\n",
      "0.0395     2  the autonomous flight control system\n",
      "[the autonomous flight control system, the autonomous flight control system]\n",
      "0.0392     1  total system bandwidth\n",
      "[total system bandwidth]\n",
      "0.0391     1  airbus helicopters vice president axel aloccio\n",
      "[airbus helicopters vice president axel aloccio]\n",
      "0.0390     1  h160 mockup\n",
      "[h160 mockup]\n",
      "0.0390     1  blr aerospace s launch customer\n",
      "[blr aerospace s launch customer]\n",
      "0.0389    37  aircraft\n",
      "[aircraft, aircraft, aircraft, those aircraft, these aircraft, those aircraft, these aircraft, the aircraft, the aircraft, the aircraft, the aircraft, 30 aircraft, this aircraft, the aircraft, our aircraft, the aircraft, the aircraft, an aircraft, the aircraft, the aircraft, the aircraft, the aircraft, the aircraft, that aircraft, the aircraft, the aircraft, the aircraft, the aircraft, the aircraft, the aircraft, four aircraft, the aircraft, 43 aircraft, these aircraft, the aircraft, aircraft ac4, about 12 aircraft]\n",
      "0.0387     1  new pilots\n",
      "[new pilots]\n",
      "0.0387     1  shore based aircraft\n",
      "[shore based aircraft]\n",
      "0.0386     5  the automatic flight control systems\n",
      "[the automatic flight control systems, the automatic flight control systems, the automatic flight control system, the automatic flight control system, an automatic flight control system]\n",
      "0.0384     1  side loading stretcher system\n",
      "[side loading stretcher system]\n",
      "0.0381     1  the flight control systems\n",
      "[the flight control systems]\n",
      "0.0380     1  the uav flight control system\n",
      "[the uav flight control system]\n",
      "0.0378     1  federal aviation administration instrument flight rules\n",
      "[federal aviation administration instrument flight rules]\n",
      "0.0377     1  military h160m\n",
      "[military h160m]\n",
      "0.0372     2  the safran helicopter engines\n",
      "[the safran helicopter engines, the safran helicopter engines]\n",
      "0.0372     1  aircraft stability\n",
      "[aircraft stability]\n",
      "0.0370     1  the single engine helicopter category\n",
      "[the single engine helicopter category]\n",
      "0.0367     2  ageing aircraft\n",
      "[ageing aircraft, ageing aircraft]\n",
      "0.0366     1  that current generation helicopter engines\n",
      "[that current generation helicopter engines]\n",
      "0.0366     1  the light helicopter cabri g2\n",
      "[the light helicopter cabri g2]\n",
      "0.0365     2  other critical service missions\n",
      "[other critical service missions, other critical service missions]\n",
      "0.0365     1  similar aircraft\n",
      "[similar aircraft]\n",
      "0.0363     5  new technologies\n",
      "[new technologies, new technologies, new technologies, new technology, the new technologies]\n",
      "0.0363     1  the cabri g2 light civilian helicopter\n",
      "[the cabri g2 light civilian helicopter]\n",
      "0.0362     1  the civil certified cabri g2 helicopter\n",
      "[the civil certified cabri g2 helicopter]\n",
      "0.0362     1  high capacity new generation air conditioning\n",
      "[high capacity new generation air conditioning]\n",
      "0.0361     1  an unmanned reconnaissance helicopter\n",
      "[an unmanned reconnaissance helicopter]\n",
      "0.0359     2  the vsr700 s maiden flight\n",
      "[the vsr700 s maiden flight, the vsr700 s maiden flight]\n",
      "0.0357     9  last year\n",
      "[last year, last year, last year, last year, last year, last year, last year 's, last year 's, late last year]\n",
      "0.0357     1  the french helicopter manufacturer h licopt\n",
      "[the french helicopter manufacturer h licopt]\n",
      "0.0354     2  launch customer france\n",
      "[launch customer france, launch customer france]\n",
      "0.0353     3  vsr700 demonstrator\n",
      "[vsr700 demonstrator, the vsr700 demonstrator, the vsr700 demonstrator]\n",
      "0.0352     1  a tactical helicopter drone\n",
      "[a tactical helicopter drone]\n",
      "0.0351     1  its first test flight december\n",
      "[its first test flight december]\n",
      "0.0350     1  launch customer\n",
      "[launch customer]\n",
      "0.0348     1  a medium class helicopter\n",
      "[a medium class helicopter]\n",
      "0.0347     2  its first test flight\n",
      "[its first test flight, its first test flights]\n",
      "0.0347    96  vsr700\n",
      "[vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, vsr700, the vsr700, the vsr700, the vsr700, the vsr700, the vsr700, its vsr700, the vsr700, the vsr700, the vsr700, the vsr700, the vsr700, the vsr700, the vsr700, the vsr700, the vsr700, the vsr700, the vsr700, the vsr700, the vsr700, the vsr700, the vsr700, the vsr700, the vsr700, the vsr700, the vsr700, the vsr700, the vsr700, the vsr700, the vsr700, the vsr700, the vsr700, the vsr700, the vsr700, the vsr700 s]\n",
      "0.0347     7  next year\n",
      "[next year, next year, next year, next year, next year, the next 18 years, the next 18 years]\n",
      "0.0346     1  various light and medium helicopters\n",
      "[various light and medium helicopters]\n",
      "0.0346     1  a light twin helicopter\n",
      "[a light twin helicopter]\n",
      "0.0345     1  15 more airbus uh 72a lakota utility helicopters\n",
      "[15 more airbus uh 72a lakota utility helicopters]\n",
      "0.0343     2  launch customer babcock\n",
      "[launch customer babcock, launch customer babcock]\n",
      "0.0343     1  low hour operators\n",
      "[low hour operators]\n",
      "0.0342     1  utility and training helicopters\n",
      "[utility and training helicopters]\n",
      "0.0342    49  year\n",
      "[year, year, year, year, this year, this year, this year, a year, this year, the years, this year, five year, a year, five year, seven year, this year, next year, this year, this year, this year, five year, a year, this year, this year, 70 year, this year, the years, this year, this year, this year, this year, around two years, late this year, around two years, late this year, around two years, 50 per year, late this year, around two years, 50 per year, late this year, earlier this year, one year earlier, earlier this year, later this year, later that year, earlier this year, early this year, the five year]\n",
      "0.0341     1  vsr700 anti submarine warfare\n",
      "[vsr700 anti submarine warfare]\n",
      "0.0340     1  unmanned operations\n",
      "[unmanned operations]\n",
      "0.0338     1  a light military tactical unmanned aerial system\n",
      "[a light military tactical unmanned aerial system]\n",
      "0.0338     1  unmanned aerial vehicles\n",
      "[unmanned aerial vehicles]\n",
      "0.0337     3  the first serial production h160\n",
      "[the first serial production h160, replaces.the first serial production h160, the first serial production h160]\n",
      "0.0336     2  other engines\n",
      "[other engines, other engines]\n",
      "0.0335     2  low consumption diesel engine\n",
      "[low consumption diesel engine, its low consumption diesel engine]\n",
      "0.0334     1  the helicopter s\n",
      "[the helicopter s]\n",
      "0.0334     1  a light military tactical unmanned aerial system uav\n",
      "[a light military tactical unmanned aerial system uav]\n",
      "0.0333     1  production time\n",
      "[production time]\n",
      "0.0333     2  the north shore helicopter route\n",
      "[the north shore helicopter route, the north shore helicopter route]\n",
      "0.0332    11  customers\n",
      "[customers, customers, customers, customers, customers, customers, customers, the customer, the customer, our customers, our customers]\n",
      "0.0332     1  customer deliveries\n",
      "[customer deliveries]\n",
      "0.0331     1  a small forward refreshment center.airbus helicopters\n",
      "[a small forward refreshment center.airbus helicopters]\n",
      "0.0331     1  the easiest part.airbus helicopters\n",
      "[the easiest part.airbus helicopters]\n",
      "0.0330     3  the helicopter s new , dedicated production line\n",
      "[the helicopter s new , dedicated production line, the helicopter s new , dedicated production line, the helicopter s new , dedicated production line]\n",
      "0.0329     4  its new h160 medium twin\n",
      "[its new h160 medium twin, its new h160 medium twin, its new h160 medium twin, its new h160 medium twin]\n",
      "0.0329     6  customer babcock\n",
      "[customer babcock, customer babcock, customer babcock, customer babcock, customer babcock, customer babcock]\n",
      "0.0327     1  g500h equipped helicopters\n",
      "[g500h equipped helicopters]\n",
      "0.0326     1  a conventional helicopter\n",
      "[a conventional helicopter]\n",
      "0.0326     3  ems operations\n",
      "[ems operations, ems operations, ems operations]\n",
      "0.0326     3  full rate production\n",
      "[full rate production, full rate production, full rate production]\n",
      "0.0325     1  mission critical video communications\n",
      "[mission critical video communications]\n",
      "0.0325     2  ems cabins\n",
      "[ems cabins, an ems cabin]\n",
      "0.0325     1  the airbus vsr700\n",
      "[the airbus vsr700]\n",
      "0.0325     2  blr s performance\n",
      "[blr s performance, blr s performance]\n",
      "0.0325     1  no problem.airbus helicopters\n",
      "[no problem.airbus helicopters]\n",
      "0.0323     1  the vsr700 drone system\n",
      "[the vsr700 drone system]\n",
      "0.0323     1  land based military operations\n",
      "[land based military operations]\n",
      "0.0323     2  ems operators\n",
      "[ems operators, ems operators]\n",
      "0.0320     1  full authority digital engine control fadec\n",
      "[full authority digital engine control fadec]\n",
      "0.0319     1  this first production aircraft\n",
      "[this first production aircraft]\n",
      "0.0319     1  a rotary wing unmanned aerial system\n",
      "[a rotary wing unmanned aerial system]\n",
      "0.0319     1  unmanned aerial vehicle vuav\n",
      "[unmanned aerial vehicle vuav]\n",
      "0.0319     1  anti surface warfare asuw vsr700 anti surface anti surface warfare asuw\n",
      "[anti surface warfare asuw vsr700 anti surface anti surface warfare asuw]\n",
      "0.0317     1  the first pre production aircraft\n",
      "[the first pre production aircraft]\n",
      "0.0317     3  first delivery\n",
      "[first delivery, first delivery, first deliveries]\n",
      "0.0314     1  chief test pilot\n",
      "[chief test pilot]\n",
      "0.0314     1  the flight test campaign\n",
      "[the flight test campaign]\n",
      "0.0313     2  low cabin vibration\n",
      "[low cabin vibration, low cabin vibration]\n",
      "0.0313     1  safran e s\n",
      "[safran e s]\n",
      "0.0312     8  its first flight\n",
      "[its first flight, its first flight, its first flight, a first flight, the first flight, the first flight, the first flight, the first flight]\n",
      "0.0312     5  production\n",
      "[production, production, production, production, production]\n",
      "0.0311     1  customer recognition\n",
      "[customer recognition]\n",
      "0.0310     1  increasing safety\n",
      "[increasing safety]\n",
      "0.0309     1  completed high altitude operations\n",
      "[completed high altitude operations]\n",
      "0.0309     1  maritime security vsr700 maritime security\n",
      "[maritime security vsr700 maritime security]\n",
      "0.0307     3  s\n",
      "[s, s, s]\n",
      "0.0307     1  other naval ships\n",
      "[other naval ships]\n",
      "0.0307     1  the h160 launch customer\n",
      "[the h160 launch customer]\n",
      "0.0306     1  the first h160 prototype\n",
      "[the first h160 prototype]\n",
      "0.0306     2  more medical equipment\n",
      "[more medical equipment, more medical equipment]\n",
      "0.0305     1  the new airbus helicopters assembly line\n",
      "[the new airbus helicopters assembly line]\n",
      "0.0305     1  the french future maritime autonomous aerial system\n",
      "[the french future maritime autonomous aerial system]\n",
      "0.0304     1  a flight test engineer\n",
      "[a flight test engineer]\n",
      "0.0303     2  additional cold weather testing\n",
      "[additional cold weather testing, additional cold weather testing]\n",
      "0.0303     1  a new production main cabin door\n",
      "[a new production main cabin door]\n",
      "0.0302     1  the airbus ec145 light twin\n",
      "[the airbus ec145 light twin]\n",
      "0.0302     3  emergency medical services\n",
      "[emergency medical services, emergency medical services, emergency medical services]\n",
      "0.0301     1  emergency medical services transport\n",
      "[emergency medical services transport]\n",
      "0.0300     1  the brand new airbus helicopters assembly line\n",
      "[the brand new airbus helicopters assembly line]\n",
      "0.0300     1  vislink s avds\n",
      "[vislink s avds]\n",
      "0.0300     1  s h125\n",
      "[s h125]\n",
      "0.0300     1  onboard high performance sensors\n",
      "[onboard high performance sensors]\n",
      "0.0300     2  the h160 s standard maximum takeoff weight\n",
      "[the h160 s standard maximum takeoff weight, the h160 s standard maximum takeoff weight]\n",
      "0.0300     2  long distance hems missions\n",
      "[long distance hems missions, long distance hems missions]\n",
      "0.0299     1  imt vislink s family\n",
      "[imt vislink s family]\n",
      "0.0299     3  ground tests\n",
      "[ground tests, ground tests, ground tests]\n",
      "0.0299     1  imt vislink s avds\n",
      "[imt vislink s avds]\n",
      "0.0298     1  eurotec s b424\n",
      "[eurotec s b424]\n",
      "0.0298     1  lakota production\n",
      "[lakota production]\n",
      "0.0297     1  leonardo s\n",
      "[leonardo s]\n",
      "0.0297     1  the airbus helicopters base\n",
      "[the airbus helicopters base]\n",
      "0.0297     1  its airbus h125 fastfin tail rotor enhancement\n",
      "[its airbus h125 fastfin tail rotor enhancement]\n",
      "0.0296     1  its new h160\n",
      "[its new h160]\n",
      "0.0295     1  high altitude testing\n",
      "[high altitude testing]\n",
      "0.0295     2  garmin s txi series\n",
      "[garmin s txi series, garmin s txi series]\n",
      "0.0295     1  the first prototype aircraft\n",
      "[the first prototype aircraft]\n",
      "0.0294     2  high performance\n",
      "[high performance, high performance]\n",
      "0.0293     1  regulatory and safety systems\n",
      "[regulatory and safety systems]\n",
      "0.0293     4  cold weather testing\n",
      "[cold weather testing, cold weather testing, the cold weather testing, the cold weather testing]\n",
      "0.0292     1  post production\n",
      "[post production]\n",
      "0.0292     1  the vsr 700 flight control system\n",
      "[the vsr 700 flight control system]\n",
      "0.0292     1  the service s light utility helicopter fleet\n",
      "[the service s light utility helicopter fleet]\n",
      "0.0291     1  the h160 s fuselage\n",
      "[the h160 s fuselage]\n",
      "0.0290     1  its updated airborne video downlink system\n",
      "[its updated airborne video downlink system]\n",
      "0.0290     1  guimbal cabri g2\n",
      "[guimbal cabri g2]\n",
      "0.0290     1  advanced production techniques\n",
      "[advanced production techniques]\n",
      "0.0290     1  low hour\n",
      "[low hour]\n",
      "0.0290     2  critical missions\n",
      "[critical missions, critical missions]\n",
      "0.0289     1  switzerland s\n",
      "[switzerland s]\n",
      "0.0289     1  its h 145 twin engine light utility helicopter\n",
      "[its h 145 twin engine light utility helicopter]\n",
      "0.0288     1  the guimbal cabri g2 two seat helicopter\n",
      "[the guimbal cabri g2 two seat helicopter]\n",
      "0.0288     1  a certifiable , autonomous flight systems\n",
      "[a certifiable , autonomous flight systems]\n",
      "0.0286     7  1,000 flight hours\n",
      "[1,000 flight hours, 10 flight hours, 1,000 flight hours, 10 flight hours, a 1,000 flight hours, a 13 hour flight, a 13 hour flight]\n",
      "0.0285     2  engine\n",
      "[engine, engine]\n",
      "0.0285     3  10 pre serial production aircraft\n",
      "[10 pre serial production aircraft, 10 pre serial production aircraft, 10 pre serial production aircraft]\n",
      "0.0285     1  naval operations\n",
      "[naval operations]\n",
      "0.0285     2  the helicopter s dual safran arrano engines\n",
      "[the helicopter 's dual safran arrano engines, the helicopter 's dual safran arrano engines]\n",
      "0.0285     1  the safety system\n",
      "[the safety system]\n",
      "0.0284     1  the first serial aircraft\n",
      "[the first serial aircraft]\n",
      "0.0284     1  leonardo s aw139\n",
      "[leonardo s aw139]\n",
      "0.0283     2  garmin s b616\n",
      "[garmin s b616, garmin s b616]\n",
      "0.0282     1  a light military rotary wing tactical unmanned aerial vehicle\n",
      "[a light military rotary wing tactical unmanned aerial vehicle]\n",
      "0.0282     2  the drone launch system\n",
      "[the drone launch system, the drone launch system]\n",
      "0.0282     2  robust cabin air conditioning\n",
      "[robust cabin air conditioning, robust cabin air conditioning]\n",
      "0.0281     1  low maintenance requirements\n",
      "[low maintenance requirements]\n",
      "0.0281     3  tests\n",
      "[tests, tests, even the tests]\n",
      "0.0281     1  hd video surveillance\n",
      "[hd video surveillance]\n",
      "0.0281     1  mission equipment\n",
      "[mission equipment]\n",
      "0.0281     1  the new vsr700 solution\n",
      "[the new vsr700 solution]\n",
      "0.0280     1  current portable and mobile command vehicle downlink receive systems\n",
      "[current portable and mobile command vehicle downlink receive systems]\n",
      "0.0279     1  real time video\n",
      "[real time video]\n",
      "0.0279     1  the flight line\n",
      "[the flight line]\n",
      "0.0279     2  sikorsky s 76s\n",
      "[sikorsky s 76s, sikorsky s 76s]\n",
      "0.0278     1  the control system\n",
      "[the control system]\n",
      "0.0278     1  the first unmanned , autonomous flight\n",
      "[the first unmanned , autonomous flight]\n",
      "0.0278     1  full capability sensors\n",
      "[full capability sensors]\n",
      "0.0277     1  the first series aircraft\n",
      "[the first series aircraft]\n",
      "0.0276     1  the vehicle s new engine system\n",
      "[the vehicle s new engine system]\n",
      "0.0275     1  10 pre production aircraft\n",
      "[10 pre production aircraft]\n",
      "0.0275     2  the vsr700 s first flight\n",
      "[the vsr700 s first flight, the vsr700 s first flight]\n",
      "0.0274     1  more equipment\n",
      "[more equipment]\n",
      "0.0274     3  flat floor cabin\n",
      "[flat floor cabin, flat floor cabin, flat floor cabin]\n",
      "0.0273     1  switzerland s lionsair\n",
      "[switzerland s lionsair]\n",
      "0.0273     9  safety\n",
      "[safety, safety, safety, safety, safety, safety, safety, safety, safety]\n",
      "0.0273     1  unmanned aviation\n",
      "[unmanned aviation]\n",
      "0.0272     2  offshore transport or emergency medical services ems missions\n",
      "[offshore transport or emergency medical services ems missions, offshore transport or emergency medical services ems missions]\n",
      "0.0272     1  maintenance operations\n",
      "[maintenance operations]\n",
      "0.0272     2  long range sensors\n",
      "[long range sensors, long range sensors]\n",
      "0.0271     1  the aircraft s optimised accessibility\n",
      "[the aircraft s optimised accessibility]\n",
      "0.0271     9  missions\n",
      "[missions, missions, the mission, the mission, those missions, the mission, their missions, another mission, not all missions]\n",
      "0.0270     1  its maiden flight october\n",
      "[its maiden flight october]\n",
      "0.0270     2  full ems livery\n",
      "[full ems livery, full ems livery]\n",
      "0.0269     1  an airbus facility\n",
      "[an airbus facility]\n",
      "0.0269     2  more than 1,000 flight test hours\n",
      "[more than 1,000 flight test hours, more than 1,000 flight test hours]\n",
      "0.0269     1  a new five blade main rotor system\n",
      "[a new five blade main rotor system]\n",
      "0.0269     1  unmanned issues\n",
      "[unmanned issues]\n",
      "0.0269     4  a maiden flight\n",
      "[a maiden flight, its maiden flight, the maiden flight, its maiden flight]\n",
      "0.0269     2  a flight demonstration\n",
      "[a flight demonstration, a flight demonstration]\n",
      "0.0268     1  the airbus philosophy\n",
      "[the airbus philosophy]\n",
      "0.0268     2  the sdam navy airborne drone system\n",
      "[the sdam navy airborne drone system, the navy airborne drone system sdam]\n",
      "0.0268     1  fadec engine\n",
      "[fadec engine]\n",
      "0.0268     1  maritime security missions\n",
      "[maritime security missions]\n",
      "0.0267     2  smaller light twins\n",
      "[smaller light twins, its smaller light twin]\n",
      "0.0266     1  construction missions\n",
      "[construction missions]\n",
      "0.0266     2  hai s affiliate organization helicopter foundation international\n",
      "[hai s affiliate organization helicopter foundation international, hai s affiliate organization helicopter foundation international]\n",
      "0.0266     2  the flight envelope\n",
      "[the flight envelope, its flight envelope]\n",
      "0.0266     1  medium sized hems twins\n",
      "[medium sized hems twins]\n",
      "0.0265     2  the h160m military variant\n",
      "[the h160m military variant, the h160m military variant]\n",
      "0.0264     2  extended surveillance capabilities\n",
      "[extended surveillance capabilities, extended surveillance capabilities]\n",
      "0.0264     1  a drone system\n",
      "[a drone system]\n",
      "0.0263     1  the maiden flight\n",
      "[the maiden flight]\n",
      "0.0263     1  safety committee meetings\n",
      "[safety committee meetings]\n",
      "0.0263     1  air medical clients\n",
      "[air medical clients]\n",
      "0.0263     2  lower maintenance costs\n",
      "[lower maintenance costs, lower maintenance costs]\n",
      "0.0262     3  quick change cabins\n",
      "[quick change cabins, the quick change cabin, the quick change cabin]\n",
      "0.0262     1  critical situational video\n",
      "[critical situational video]\n",
      "0.0261     1  more than 306 helicopters\n",
      "[more than 306 helicopters]\n",
      "0.0261     2  medium twin\n",
      "[medium twin, medium twins]\n",
      "0.0260     1  a wireless airborne communication system wacs\n",
      "[a wireless airborne communication system wacs]\n",
      "0.0259     1  numerous other civil aviation authorities\n",
      "[numerous other civil aviation authorities]\n",
      "0.0259     1  military requirements\n",
      "[military requirements]\n",
      "0.0258     1  aerial drones\n",
      "[aerial drones]\n",
      "0.0257     1  the vsr700 s 30 minute flight\n",
      "[the vsr700 s 30 minute flight]\n",
      "0.0257     1  more hospitals\n",
      "[more hospitals]\n",
      "0.0256     1  a new production method\n",
      "[a new production method]\n",
      "0.0256     1  high quality data\n",
      "[high quality data]\n",
      "0.0256     1  hot weather testing\n",
      "[hot weather testing]\n",
      "0.0256    10  operations\n",
      "[operations, operations, operations, operations, operation, operation, operations, operations, operations, the operation]\n",
      "0.0255     1  navy ships\n",
      "[navy ships]\n",
      "0.0255     1  a rotary wing tactical unmanned aerial vehicle\n",
      "[a rotary wing tactical unmanned aerial vehicle]\n",
      "0.0255     1  the blr fastfin system\n",
      "[the blr fastfin system]\n",
      "0.0255     1  the ship s helicopter\n",
      "[the ship s helicopter]\n",
      "0.0255     1  more space\n",
      "[more space]\n",
      "0.0254     1  easier control\n",
      "[easier control]\n",
      "0.0254     4  the fastfin system\n",
      "[the fastfin system, the fastfin system, the fastfin system, the fastfin system]\n",
      "0.0254     1  operator members\n",
      "[operator members]\n",
      "0.0254     1  more comfort\n",
      "[more comfort]\n",
      "0.0254     2  hot high conditions\n",
      "[hot high conditions, hot and high conditions]\n",
      "0.0254     1  the new bearingless main rotor design\n",
      "[the new bearingless main rotor design]\n",
      "0.0253     1  a shipborne rotary wing tactical unmanned aerial vehicle\n",
      "[a shipborne rotary wing tactical unmanned aerial vehicle]\n",
      "0.0253     1  radar and optronic systems\n",
      "[radar and optronic systems]\n",
      "0.0253     1  the big four western helicopter oems\n",
      "[the big four western helicopter oems]\n",
      "0.0253     1  its vsr700 demonstrator tactical vehicle\n",
      "[its vsr700 demonstrator tactical vehicle]\n",
      "0.0253     1  such key avionics\n",
      "[such key avionics]\n",
      "0.0253     1  the five bladed h145 helicopter\n",
      "[the five bladed h145 helicopter]\n",
      "0.0253     2  the first production model\n",
      "[the first production model, the first production model]\n",
      "0.0252     1  specific military equipment\n",
      "[specific military equipment]\n",
      "0.0252    15  operators\n",
      "[operators, operators, operators, operators, operator, operators, operators, operators, operators, operators, operators, the operator, the operators, the operator, the operators]\n",
      "0.0252     1  the company s helicopter zero dynamic integration test bed\n",
      "[the company s helicopter zero dynamic integration test bed]\n",
      "0.0251     1  video streams\n",
      "[video streams]\n",
      "0.0251     1  sar operations\n",
      "[sar operations]\n",
      "0.0251     2  the 6t class helicopter\n",
      "[the 6t class helicopter, the 6t class helicopter]\n",
      "0.0250     1  high degree\n",
      "[high degree]\n",
      "0.0250     1  the system investment\n",
      "[the system investment]\n",
      "0.0250     1  our highly developed helicopter autopilot\n",
      "[our highly developed helicopter autopilot]\n",
      "0.0249    11  cabri g2\n",
      "[cabri g2, cabri g2, cabri g2, cabri g2, cabri g2, cabri g2, cabri g2, the cabri g2, the cabri g2, the cabri g2, the cabri g2]\n",
      "0.0249     2  ems roles\n",
      "[ems roles, ems roles]\n",
      "0.0249     1  the h160 fuselage tail boom\n",
      "[the h160 fuselage tail boom]\n",
      "0.0248     1  six uh 72a lakota helicopters\n",
      "[six uh 72a lakota helicopters]\n",
      "0.0248     1  other dynamic components\n",
      "[other dynamic components]\n",
      "0.0248     5  service\n",
      "[service, service, service, the service, those service]\n",
      "0.0247     1  low vibration levels\n",
      "[low vibration levels]\n",
      "0.0246     3  worldwide operations\n",
      "[worldwide operations, worldwide operations, worldwide operations]\n",
      "0.0246     1  its avds system\n",
      "[its avds system]\n",
      "0.0245    16  ems\n",
      "[ems, ems, ems, ems, ems, ems, ems, ems, ems, ems, ems, ems, ems, ems, ems, ems]\n",
      "0.0245     2  oil and gas customers\n",
      "[oil and gas customers, oil and gas customers]\n",
      "0.0245     3  cabin windows\n",
      "[cabin windows, cabin windows, cabin windows]\n",
      "0.0244     1  the first test campaign\n",
      "[the first test campaign]\n",
      "0.0244     1  h135 light twins\n",
      "[h135 light twins]\n",
      "0.0244     1  other key stakeholders\n",
      "[other key stakeholders]\n",
      "0.0244     1  commercial rotorcraft services\n",
      "[commercial rotorcraft services]\n",
      "0.0243     2  a fully unmanned autonomous flight\n",
      "[a fully unmanned autonomous flight, a fully unmanned autonomous flight]\n",
      "0.0243     1  the 525 flight test program\n",
      "[the 525 flight test program]\n",
      "0.0243     1  the new medium sized frigate requirements\n",
      "[the new medium sized frigate requirements]\n",
      "0.0242     1  video monitoring\n",
      "[video monitoring]\n",
      "0.0242     1  three previous prototype aircraft\n",
      "[three previous prototype aircraft]\n",
      "0.0242     1  shipborne operations\n",
      "[shipborne operations]\n",
      "0.0242     1  manned unmanned teaming mumt\n",
      "[manned unmanned teaming mumt]\n",
      "0.0242     1  fastfin operators\n",
      "[fastfin operators]\n",
      "0.0241     1  other assets\n",
      "[other assets]\n",
      "0.0241     1  public service\n",
      "[public service]\n",
      "0.0241     4  video\n",
      "[video, video, the video, the video]\n",
      "0.0241     2  generous cabin volume\n",
      "[generous cabin volume, generous cabin volume]\n",
      "0.0241     1  more than 1,000 flight hours\n",
      "[more than 1,000 flight hours]\n",
      "0.0241     1  other sectors\n",
      "[other sectors]\n",
      "0.0241     4  a prototype aircraft\n",
      "[a prototype aircraft, a prototype aircraft, a prototype aircraft, the three prototype aircraft]\n",
      "0.0240     1  its h160 model\n",
      "[its h160 model]\n",
      "0.0240     1  vehicle opv demonstrator\n",
      "[vehicle opv demonstrator]\n",
      "0.0240     1  around a decade.airbus helicopters\n",
      "[around a decade.airbus helicopters]\n",
      "0.0240     1  axis control\n",
      "[axis control]\n",
      "0.0240     1  pilot training\n",
      "[pilot training]\n",
      "0.0240     2  service ceiling\n",
      "[service ceiling, service ceiling]\n",
      "0.0239     1  french industry sector\n",
      "[french industry sector]\n",
      "0.0239     2  the h160 final assembly line fal\n",
      "[the h160 final assembly line fal, the h160 final assembly line fal]\n",
      "0.0239     2  potential future performance increases\n",
      "[potential future performance increases, potential future performance increases]\n",
      "0.0238     1  the h160 team\n",
      "[the h160 team]\n",
      "0.0238     8  the system\n",
      "[the system, the system, the systems, the system, the system, the system, the system, two systems]\n",
      "0.0238     1  the unmanned vsr700\n",
      "[the unmanned vsr700]\n",
      "0.0237     1  regional agencies large platform , fixed and rotary wing surveillance aircraft platforms\n",
      "[regional agencies large platform , fixed and rotary wing surveillance aircraft platforms]\n",
      "0.0237     1  rotor blades\n",
      "[rotor blades]\n",
      "0.0236     1  the new medium sized frigates\n",
      "[the new medium sized frigates]\n",
      "0.0235     2  airborne vehicle\n",
      "[airborne vehicle, airborne vehicle]\n",
      "0.0235     7  pilots\n",
      "[pilots, the pilot, two pilots, the pilot, a pilot, the pilot, our pilots]\n",
      "0.0235     1  other cutting edge products\n",
      "[other cutting edge products]\n",
      "0.0235     1  autopilot testing\n",
      "[autopilot testing]\n",
      "0.0234     1  high power settings\n",
      "[high power settings]\n",
      "0.0234     1  paris based naval group\n",
      "[paris based naval group]\n",
      "0.0234     1  the h160 benefit\n",
      "[the h160 benefit]\n",
      "0.0234     3  pilot workload\n",
      "[pilot workload, pilot workload, pilot workload]\n",
      "0.0233     1  an unmanned cabri g2 prototype\n",
      "[an unmanned cabri g2 prototype]\n",
      "0.0233     1  istres air base\n",
      "[istres air base]\n",
      "0.0233     1  the civil aircraft\n",
      "[the civil aircraft]\n",
      "0.0232     1  the vip configured aircraft\n",
      "[the vip configured aircraft]\n",
      "0.0231     1  french industry\n",
      "[french industry]\n",
      "0.0230     1  marignane france\n",
      "[marignane france]\n",
      "0.0230     1  critical operational capability\n",
      "[critical operational capability]\n",
      "0.0230     5  oil\n",
      "[oil, oil, oil, oil, oil]\n",
      "0.0230     2  the h160 cabin\n",
      "[the h160 cabin, the h160 cabin]\n",
      "0.0229     1  h licopt res guimbal\n",
      "[h licopt res guimbal]\n",
      "0.0229     1  our client s flight operations\n",
      "[our client s flight operations]\n",
      "0.0229     1  naval integration\n",
      "[naval integration]\n",
      "0.0228     1  the demanding regulatory and safety systems\n",
      "[the demanding regulatory and safety systems]\n",
      "0.0228     2  testing\n",
      "[testing, testing]\n",
      "0.0227     1  the next automatically and quickly airbus helicopters\n",
      "[the next automatically and quickly airbus helicopters]\n",
      "0.0226     1  maintenance man hours\n",
      "[maintenance man hours]\n",
      "0.0225     2  the actual vsr700 prototype\n",
      "[the actual vsr700 prototype, the actual vsr700 prototype]\n",
      "0.0225     1  other events\n",
      "[other events]\n",
      "0.0224     1  the newest avionics solutions\n",
      "[the newest avionics solutions]\n",
      "0.0223     1  offshore oil and gas operations\n",
      "[offshore oil and gas operations]\n",
      "0.0223     1  licopt res guimbal\n",
      "[licopt res guimbal]\n",
      "0.0223     2  the other years\n",
      "[the other years, the other years]\n",
      "0.0223     1  maturity testing\n",
      "[maturity testing]\n",
      "0.0222     1  snow testing\n",
      "[snow testing]\n",
      "0.0222     1  performance levels\n",
      "[performance levels]\n",
      "0.0222     1  military agencies\n",
      "[military agencies]\n",
      "0.0222     1  lower emissions\n",
      "[lower emissions]\n",
      "0.0221     1  a prototype vsr700\n",
      "[a prototype vsr700]\n",
      "0.0221     2  a cold weather test campaign\n",
      "[a cold weather test campaign, a cold weather test campaign]\n",
      "0.0220     1  the system s low operational cost\n",
      "[the system s low operational cost]\n",
      "0.0220     1  high intensity care\n",
      "[high intensity care]\n",
      "0.0220     1  a concept aircraft\n",
      "[a concept aircraft]\n",
      "0.0219     3  the first operator\n",
      "[the first operator, the first operator, the first operator]\n",
      "0.0219     1  such leading avionics\n",
      "[such leading avionics]\n",
      "0.0218     8  ships\n",
      "[ships, a ship, its ship, the ship, the ship, the ships, these ships, the ships]\n",
      "0.0218     1  istar intelligence surveillance target acquisition and reconnaissance missions\n",
      "[istar intelligence surveillance target acquisition and reconnaissance missions]\n",
      "0.0218     1  missions intelligence , surveillance targeting and reconnaissance istar vsr700 istar\n",
      "[missions intelligence , surveillance targeting and reconnaissance istar vsr700 istar]\n",
      "0.0217     1  successful drop testing\n",
      "[successful drop testing]\n",
      "0.0217     1  the vsr700 program\n",
      "[the vsr700 program]\n",
      "0.0217     1  anti submarine warfare\n",
      "[anti submarine warfare]\n",
      "0.0217     2  maximum range\n",
      "[maximum range, a maximum range]\n",
      "0.0217     1  a 13 hour ferry flight\n",
      "[a 13 hour ferry flight]\n",
      "0.0217    12  french\n",
      "[french, french, french, french, french, french, french, french, french, french, french, french]\n",
      "0.0216     2  markets\n",
      "[markets, market]\n",
      "0.0216     2  last year s bookings\n",
      "[last year 's bookings, last year 's bookings]\n",
      "0.0216     1  an ideal aircraft\n",
      "[an ideal aircraft]\n",
      "0.0216     1  offshore energy companies\n",
      "[offshore energy companies]\n",
      "0.0216     1  the new drone\n",
      "[the new drone]\n",
      "0.0215     3  helicopt res guimbal\n",
      "[helicopt res guimbal, helicopt res guimbal, helicopt res guimbal]\n",
      "0.0215     4  the coming years\n",
      "[the coming years, the coming years, the coming years, the coming years]\n",
      "0.0214     2  its military customer\n",
      "[its military customer, its military customer]\n",
      "0.0214     2  the vsr700 drone\n",
      "[the vsr700 drone, the vsr700 drone]\n",
      "0.0214     1  res guimbal\n",
      "[res guimbal]\n",
      "0.0213     1  an interim aircraft\n",
      "[an interim aircraft]\n",
      "0.0213     1  heli expo\n",
      "[heli expo]\n",
      "0.0213     3  the global launch customer\n",
      "[the global launch customer, the global launch customer, the global launch customer]\n",
      "0.0213     1  easa certification\n",
      "[easa certification]\n",
      "0.0213     1  vislink technologies\n",
      "[vislink technologies]\n",
      "0.0213     4  expo\n",
      "[expo, expo, expo, expo 2019]\n",
      "0.0212     1  istar intelligence surveillance\n",
      "[istar intelligence surveillance]\n",
      "0.0212     2  performance\n",
      "[performance, its performance]\n",
      "0.0212    26  hour\n",
      "[hour, one hour, 10 hours, 10 hours, one hour, 20 hours, 13 hour, 20 hours, 13 hour, 20 hours, 13 hour, 10 hours, 10 hours, over 20 hours, over 20 hours, over 20 hours, around 8 hours, around eight hours, a three hour, around 8 hours, around eight hours, a three hour, up to 10 hours, up to 10 hours, up to 10 hours, up to 10 hours]\n",
      "0.0212     1  the vsr700 platform\n",
      "[the vsr700 platform]\n",
      "0.0211     1  helicopteres guimbal\n",
      "[helicopteres guimbal]\n",
      "0.0211     1  military application\n",
      "[military application]\n",
      "0.0211     1  ceo bruno guimbal\n",
      "[ceo bruno guimbal]\n",
      "0.0210     1  medical swiveling seats\n",
      "[medical swiveling seats]\n",
      "0.0210     2  the new regulatory standards\n",
      "[the new regulatory standards, the new regulatory standards]\n",
      "0.0209     1  major component assemblies mcas\n",
      "[major component assemblies mcas]\n",
      "0.0209     1  the target s defensive range\n",
      "[the target s defensive range]\n",
      "0.0208     1  multiple platforms\n",
      "[multiple platforms]\n",
      "0.0208     2  bruno guimbal\n",
      "[bruno guimbal, bruno guimbal]\n",
      "0.0208     2  guimbal\n",
      "[guimbal, guimbal]\n",
      "0.0207     1  the system s performance benefits\n",
      "[the system s performance benefits]\n",
      "0.0207     1  its proven civil certified cabri g2 platform\n",
      "[its proven civil certified cabri g2 platform]\n",
      "0.0206     1  a first prototype\n",
      "[a first prototype]\n",
      "0.0206     1  real time\n",
      "[real time]\n",
      "0.0206     1  the tsm 2020 transport management system\n",
      "[the tsm 2020 transport management system]\n",
      "0.0205     3  the new model\n",
      "[the new model, the new model, the new model]\n",
      "0.0205     5  gas\n",
      "[gas, gas, gas, gas, gas]\n",
      "0.0205     2  last month\n",
      "[last month, last month]\n",
      "0.0205     1  major , high capability sensors\n",
      "[major , high capability sensors]\n",
      "0.0204     1  g n rale de l armement dga\n",
      "[g n rale de l armement dga]\n",
      "0.0204     4  oil and gas market\n",
      "[oil and gas market, oil and gas market, the oil and gas market, the oil and gas market]\n",
      "0.0204     1  its new d3 variant\n",
      "[its new d3 variant]\n",
      "0.0203     1  integrated service and control panel\n",
      "[integrated service and control panel]\n",
      "0.0203     1  the anti torque system s effectiveness\n",
      "[the anti torque system s effectiveness]\n",
      "0.0203     1  the vsr700 equipment\n",
      "[the vsr700 equipment]\n",
      "0.0203     1  this new addition\n",
      "[this new addition]\n",
      "0.0203     1  the new generation\n",
      "[the new generation]\n",
      "0.0203     1  man hours\n",
      "[man hours]\n",
      "0.0202     1  a comprehensive aerial based video transmission solution\n",
      "[a comprehensive aerial based video transmission solution]\n",
      "0.0201     1  real noise issues\n",
      "[real noise issues]\n",
      "0.0201     1  two new h175 super mediums\n",
      "[two new h175 super mediums]\n",
      "0.0201     4  faa certification\n",
      "[faa certification, faa certification, faa certification, faa certification]\n",
      "0.0201     1  efficient integration\n",
      "[efficient integration]\n",
      "0.0201     1  its new fleet\n",
      "[its new fleet]\n",
      "0.0201     3  fuel consumption\n",
      "[fuel consumption, fuel consumption, a fuel consumption]\n",
      "0.0201     2  babcock s bases\n",
      "[babcock s bases, babcock s bases]\n",
      "0.0201     1  key racer components\n",
      "[key racer components]\n",
      "0.0201     4  programs\n",
      "[programs, program, this program, the program]\n",
      "0.0201     1  multiple viewing platforms\n",
      "[multiple viewing platforms]\n",
      "0.0201     1  the vsr700 programme\n",
      "[the vsr700 programme]\n",
      "0.0200     1  the h160 s safety\n",
      "[the h160 s safety]\n",
      "0.0200     1  our new and returning customers\n",
      "[our new and returning customers]\n",
      "0.0200     1  the new variant\n",
      "[the new variant]\n",
      "0.0200     1  a new level\n",
      "[a new level]\n",
      "0.0200     1  operating performance and safety margins\n",
      "[operating performance and safety margins]\n",
      "0.0200     1  navies requirements\n",
      "[navies requirements]\n",
      "0.0200     1  us army aviation\n",
      "[us army aviation]\n",
      "0.0199     1  surveillance\n",
      "[surveillance]\n",
      "0.0199     1  the new embedded hoist\n",
      "[the new embedded hoist]\n",
      "0.0199     1  a new version\n",
      "[a new version]\n",
      "0.0199     1  successful sea trials\n",
      "[successful sea trials]\n",
      "0.0199     1  a test pilot\n",
      "[a test pilot]\n",
      "0.0198     1  a 30 minute flight\n",
      "[a 30 minute flight]\n",
      "0.0198     1  program milestones\n",
      "[program milestones]\n",
      "0.0198     1  next generation challenges\n",
      "[next generation challenges]\n",
      "0.0198     2  the new ach160\n",
      "[the new ach160, a new ach160]\n",
      "0.0198     1  a new canted fenestron\n",
      "[a new canted fenestron]\n",
      "0.0197     6  g2\n",
      "[g2, g2, g2, g2, g2, g2]\n",
      "0.0197     1  the uk s national police air service\n",
      "[the uk s national police air service]\n",
      "0.0197     2  sea trials\n",
      "[sea trials, sea trials]\n",
      "0.0197     1  the uk s national police air service fleet.hai\n",
      "[the uk s national police air service fleet.hai]\n",
      "0.0196     1  medical stowage racks\n",
      "[medical stowage racks]\n",
      "0.0195     1  its production line\n",
      "[its production line]\n",
      "0.0195     1  a rotor safety challenge certificate\n",
      "[a rotor safety challenge certificate]\n",
      "0.0195     1  this new type\n",
      "[this new type]\n",
      "0.0195    10  a safety pilot\n",
      "[a safety pilot, a safety pilot, a safety pilot, a safety pilot, a safety pilot, a safety pilot, a safety pilot, a safety pilot, the safety pilot, a safety pilot]\n",
      "0.0195     1  additional txi installs\n",
      "[additional txi installs]\n",
      "0.0195     1  its rotor safety challenge\n",
      "[its rotor safety challenge]\n",
      "0.0195     1  this new product\n",
      "[this new product]\n",
      "0.0194     1  h 145 customers\n",
      "[h 145 customers]\n",
      "0.0194     1  the new rockwell\n",
      "[the new rockwell]\n",
      "0.0194     4  oil and gas sales\n",
      "[oil and gas sales, oil and gas sales, oil and gas sales, oil and gas sales]\n",
      "0.0193     1  its well proven civil base vehicle\n",
      "[its well proven civil base vehicle]\n",
      "0.0193     4  capabilities\n",
      "[capabilities, capabilities, our capabilities, our capability]\n",
      "0.0193     1  blr aerospace president mike carpenter\n",
      "[blr aerospace president mike carpenter]\n",
      "0.0192     1  the blue edge main rotor blades\n",
      "[the blue edge main rotor blades]\n",
      "0.0192     1  narcotics surveillance interdiction\n",
      "[narcotics surveillance interdiction]\n",
      "0.0192     1  this contract.aircraft vsr700\n",
      "[this contract.aircraft vsr700]\n",
      "0.0191     3  stretcher capability\n",
      "[stretcher capability, stretcher capability, stretcher capability]\n",
      "0.0191     1  a vsr700 optionally piloted vehicle opv demonstrator\n",
      "[a vsr700 optionally piloted vehicle opv demonstrator]\n",
      "0.0191     1  sdam navy\n",
      "[sdam navy]\n",
      "0.0191     1  cost targets\n",
      "[cost targets]\n",
      "0.0191     1  the french navy ships\n",
      "[the french navy ships]\n",
      "0.0190     1  viewing platforms\n",
      "[viewing platforms]\n",
      "0.0190     1  our h125 customers\n",
      "[our h125 customers]\n",
      "0.0190     1  two safran arriel 2e engines\n",
      "[two safran arriel 2e engines]\n",
      "0.0190     3  a five blade system\n",
      "[a five blade system, a five blade system, a five blade system]\n",
      "0.0189     3  safran\n",
      "[safran, safran, safran]\n",
      "0.0189     3  sensors\n",
      "[sensors, sensors, sensors]\n",
      "0.0189     1  major assemblies\n",
      "[major assemblies]\n",
      "0.0189     2  swiss air rega\n",
      "[swiss air rega, swiss air rega]\n",
      "0.0189     1  naval personnel\n",
      "[naval personnel]\n",
      "0.0189     6  drones\n",
      "[drones, drones, drones, a drone, the drone, the drone]\n",
      "0.0188     1  a french navy air defense frigate\n",
      "[a french navy air defense frigate]\n",
      "0.0188     1  safran aneto turboshafts\n",
      "[safran aneto turboshafts]\n",
      "0.0188     1  a premium support services program\n",
      "[a premium support services program]\n",
      "0.0188     2  the past year\n",
      "[the past year, the past year]\n",
      "0.0188     1  the year celebration\n",
      "[the year celebration]\n",
      "0.0188     1  a french navy air defence\n",
      "[a french navy air defence]\n",
      "0.0187     1  an undisclosed canadian customer\n",
      "[an undisclosed canadian customer]\n",
      "0.0186     1  the first five year\n",
      "[the first five year]\n",
      "0.0186     1  the us foreign military sales fms programme\n",
      "[the us foreign military sales fms programme]\n",
      "0.0186     1  the initial production\n",
      "[the initial production]\n",
      "0.0186     1  a european customer\n",
      "[a european customer]\n",
      "0.0186     2  its specific engine installation\n",
      "[its specific engine installation, its specific engine installation]\n",
      "0.0186     1  s new\n",
      "[s new]\n",
      "0.0186     3  availability.the first h160\n",
      "[availability.the first h160, the first h160, its first h160]\n",
      "0.0186     7  certification\n",
      "[certification, certification, certification, certification, certification, certification, the certification]\n",
      "0.0185     1  full compatibility\n",
      "[full compatibility]\n",
      "0.0184     5  time\n",
      "[time, time, time, time, the time]\n",
      "0.0184     1  multiple options\n",
      "[multiple options]\n",
      "0.0184     1  anti pollution\n",
      "[anti pollution]\n",
      "0.0183     1  the production landing gear\n",
      "[the production landing gear]\n",
      "0.0183     3  final assembly\n",
      "[final assembly, final assembly, our final assembly]\n",
      "0.0183     1  design changes\n",
      "[design changes]\n",
      "0.0183     1  last fall\n",
      "[last fall]\n",
      "0.0182     1  the first garmin\n",
      "[the first garmin]\n",
      "0.0181     2  optical reconnaissance instruments\n",
      "[optical reconnaissance instruments, optical reconnaissance instruments]\n",
      "0.0181     1  the system s flexibility\n",
      "[the system s flexibility]\n",
      "0.0181     2  the earth s curvature\n",
      "[the earth s curvature, the earth s curvature]\n",
      "0.0181     7  sales\n",
      "[sales, sales, sales, sales, sales, the sale, 68 sales]\n",
      "0.0181     5  line\n",
      "[line, line, line, the line, the line]\n",
      "0.0181    11  orders\n",
      "[orders, order, orders, orders, orders, orders, orders, 15 orders, 15 orders, the 2018 orders, the 2018 orders]\n",
      "0.0180     1  working groups\n",
      "[working groups]\n",
      "0.0180     1  key roi analysis information\n",
      "[key roi analysis information]\n",
      "0.0180     1  anti terrorism\n",
      "[anti terrorism]\n",
      "0.0180     1  greater useful load\n",
      "[greater useful load]\n",
      "0.0180     1  the first ach160\n",
      "[the first ach160]\n",
      "0.0180     3  us army\n",
      "[us army, us army, worldwide.the us army]\n",
      "0.0180     1  the 700 kg vertivision surveillance rotorcraft vsr700\n",
      "[the 700 kg vertivision surveillance rotorcraft vsr700]\n",
      "0.0180     3  its production process\n",
      "[its production process, its production process, its production process]\n",
      "0.0179     2  naval and military requirements\n",
      "[naval and military requirements, military and naval requirements]\n",
      "0.0179     1  its recently completed vip ec130b4 aircraft\n",
      "[its recently completed vip ec130b4 aircraft]\n",
      "0.0179     2  the norwegian air ambulance services\n",
      "[the norwegian air ambulance services, the norwegian air ambulance services]\n",
      "0.0179     1  the production configuration\n",
      "[the production configuration]\n",
      "0.0178     2  this first step\n",
      "[this first step, this first step]\n",
      "0.0178     1  modern technology\n",
      "[modern technology]\n",
      "0.0178     1  both civil and military customers\n",
      "[both civil and military customers]\n",
      "0.0178     1  citation needed trials\n",
      "[citation needed trials]\n",
      "0.0178     1  various sessions\n",
      "[various sessions]\n",
      "0.0177     1  additional payload\n",
      "[additional payload]\n",
      "0.0177     2  the first aw139\n",
      "[the first aw139, the first aw139]\n",
      "0.0177     5  integration\n",
      "[integration, the integration, the integration, the integration, the integration]\n",
      "0.0177     2  imt vislink\n",
      "[imt vislink, imt vislink]\n",
      "0.0177     1  its high quality sensors\n",
      "[its high quality sensors]\n",
      "0.0177     1  naval application\n",
      "[naval application]\n",
      "0.0176     1  touchscreen display units\n",
      "[touchscreen display units]\n",
      "0.0176     1  uas integration\n",
      "[uas integration]\n",
      "0.0176     1  ip diversity receivers\n",
      "[ip diversity receivers]\n",
      "0.0176     1  the cabri g2 platform\n",
      "[the cabri g2 platform]\n",
      "0.0176     1  its production facilities\n",
      "[its production facilities]\n",
      "0.0175     2  search and rescue operations\n",
      "[search and rescue operations, search and rescue operations]\n",
      "0.0175     1  new , long awaited civil models\n",
      "[new , long awaited civil models]\n",
      "0.0175     1  this year s heli expo convention\n",
      "[this year s heli expo convention]\n",
      "0.0175     1  the h160 s development\n",
      "[the h160 s development]\n",
      "0.0175     4  bernard fujarski\n",
      "[bernard fujarski, bernard fujarski, bernard fujarski, bernard fujarski]\n",
      "0.0174     3  this test campaign\n",
      "[this test campaign, this test campaign, the test campaign]\n",
      "0.0174     3  babcock scandinavian airambulance\n",
      "[babcock scandinavian airambulance, babcock scandinavian airambulance, babcock scandinavian airambulance]\n",
      "0.0174     2  larger , more capable aircraft\n",
      "[larger , more capable aircraft, larger , more capable aircraft]\n",
      "0.0174     3  the test site\n",
      "[the test site, the test site, the test site]\n",
      "0.0174     1  air medical group\n",
      "[air medical group]\n",
      "0.0174     1  search and rescue sar vsr700 search and rescue search and rescue sar\n",
      "[search and rescue sar vsr700 search and rescue search and rescue sar]\n",
      "0.0174     1  the austrian camcopter s\n",
      "[the austrian camcopter s]\n",
      "0.0173     1  support and operations costs\n",
      "[support and operations costs]\n",
      "0.0173     1  this year s heli expo\n",
      "[this year s heli expo]\n",
      "0.0173     1  the h160 s construction\n",
      "[the h160 s construction]\n",
      "0.0173     1  extended periods\n",
      "[extended periods]\n",
      "0.0173     1  more than 70 years\n",
      "[more than 70 years]\n",
      "0.0173     4  the diesel engine\n",
      "[the diesel engine, the diesel engine, a diesel engine, a diesel engine]\n",
      "0.0173     1  continued fuselage and empennage fatigue testing\n",
      "[continued fuselage and empennage fatigue testing]\n",
      "0.0172     3  navy\n",
      "[navy, navy, navy]\n",
      "0.0172     1  a roport s\n",
      "[a roport s]\n",
      "0.0172     1  different sites\n",
      "[different sites]\n",
      "0.0171     1  additional fms deals\n",
      "[additional fms deals]\n",
      "0.0171     1  the crow s\n",
      "[the crow s]\n",
      "0.0171     1  garmin g5000h avionics\n",
      "[garmin g5000h avionics]\n",
      "0.0171     1  the initial tests\n",
      "[the initial tests]\n",
      "0.0171     1  industry support\n",
      "[industry support]\n",
      "0.0171     1  some hems cabin concepts\n",
      "[some hems cabin concepts]\n",
      "0.0171     4  southern france\n",
      "[southern france, southern france, southern france, southern france]\n",
      "0.0170     1  the heli expo trade show\n",
      "[the heli expo trade show]\n",
      "0.0170     1  the aircraft s empty weight\n",
      "[the aircraft s empty weight]\n",
      "0.0170     1  noise complaints hotlines\n",
      "[noise complaints hotlines]\n",
      "0.0170     1  some real high end analysis\n",
      "[some real high end analysis]\n",
      "0.0170     1  oil and gas revenues\n",
      "[oil and gas revenues]\n",
      "0.0170     1  free ip stream\n",
      "[free ip stream]\n",
      "0.0169    29  france\n",
      "[france, france, france, france, france, france, france, france, france, france, france, france, france, france, france, france, france, france, france, france, france, france, france, france, france, france, france, france, france]\n",
      "0.0169     1  board frigates\n",
      "[board frigates]\n",
      "0.0169     1  flexible outfitting solutions\n",
      "[flexible outfitting solutions]\n",
      "0.0168     1  the vsr700 s optical sensors\n",
      "[the vsr700 s optical sensors]\n",
      "0.0168     3  the test team\n",
      "[the test team, the test team, the test team]\n",
      "0.0168     1  mission and equipment package\n",
      "[mission and equipment package]\n",
      "0.0168     1  airborne units\n",
      "[airborne units]\n",
      "0.0168     1  various standard streaming formats\n",
      "[various standard streaming formats]\n",
      "0.0167     1  advanced airflow management\n",
      "[advanced airflow management]\n",
      "0.0167     1  local law enforcement agencies\n",
      "[local law enforcement agencies]\n",
      "0.0167     2  ample artificial and natural cabin lighting\n",
      "[ample artificial and natural cabin lighting, ample artificial and natural cabin lighting]\n",
      "0.0167     1  a much larger aircraft\n",
      "[a much larger aircraft]\n",
      "0.0167     1  direct operating costs\n",
      "[direct operating costs]\n",
      "0.0167     1  more than 1,000 flying hours\n",
      "[more than 1,000 flying hours]\n",
      "0.0166     1  dynamic components\n",
      "[dynamic components]\n",
      "0.0166     2  french shipbuilder naval group\n",
      "[french shipbuilder naval group, french shipbuilder naval group]\n",
      "0.0166     2  wider input\n",
      "[wider input, wider input]\n",
      "0.0165     1  a long range faa reauthorization bill\n",
      "[a long range faa reauthorization bill]\n",
      "0.0165     2  flat approach angle\n",
      "[flat approach angle, flat approach angle]\n",
      "0.0165     1  combat training center\n",
      "[combat training center]\n",
      "0.0165     1  naval group\n",
      "[naval group]\n",
      "0.0164     1  the optionally piloted vsr700 demonstrator\n",
      "[the optionally piloted vsr700 demonstrator]\n",
      "0.0164     1  the ongoing heli expo\n",
      "[the ongoing heli expo]\n",
      "0.0164     1  touchscreen displays\n",
      "[touchscreen displays]\n",
      "0.0164     9  manufacturers\n",
      "[manufacturers, the manufacturer, the manufacturer, the manufacturer, the manufacturer, the manufacturer, the manufacturer, the manufacturer, the manufacturer]\n",
      "0.0164     1  the end of next year\n",
      "[the end of next year]\n",
      "0.0164     1  de risking studies\n",
      "[de risking studies]\n",
      "0.0163     3  executive vip layouts\n",
      "[executive vip layouts, executive vip layouts, executive vip layouts]\n",
      "0.0163     1  president ceo\n",
      "[president ceo]\n",
      "0.0163     1  our reliable , accurate and rapidly deployable video communications systems\n",
      "[our reliable , accurate and rapidly deployable video communications systems]\n",
      "0.0163     1  the all composite aircraft\n",
      "[the all composite aircraft]\n",
      "0.0163     1  dare county north carolina medflight\n",
      "[dare county north carolina medflight]\n",
      "0.0162     1  a fully digital , multi channel system\n",
      "[a fully digital , multi channel system]\n",
      "0.0162     1  several sessions\n",
      "[several sessions]\n",
      "0.0162     1  s captains\n",
      "[s captains]\n",
      "0.0162     1  the heli expo exhibition\n",
      "[the heli expo exhibition]\n",
      "0.0162     1  display\n",
      "[display]\n",
      "0.0162     6  babcock\n",
      "[babcock, babcock, babcock, babcock, babcock, babcock]\n",
      "0.0162     2  variable inlet guided vanes\n",
      "[variable inlet guided vanes, variable inlet guided vanes]\n",
      "0.0162     1  the medium market\n",
      "[the medium market]\n",
      "0.0162     1  personnel cargo transport\n",
      "[personnel cargo transport]\n",
      "0.0161     2  site specialisation\n",
      "[site specialisation, site specialisation]\n",
      "0.0161     1  assembly\n",
      "[assembly]\n",
      "0.0161     1  fuel savings\n",
      "[fuel savings]\n",
      "0.0160     1  its low noise signature\n",
      "[its low noise signature]\n",
      "0.0160     5  noise\n",
      "[noise, noise, noise, noise, noise]\n",
      "0.0160     5  us\n",
      "[us, us, us, us, the us]\n",
      "0.0160     1  pure assembly\n",
      "[pure assembly]\n",
      "0.0160     2  trials\n",
      "[trials, trials]\n",
      "0.0160     3  the aerial vehicle\n",
      "[the aerial vehicle, the aerial vehicle, the aerial vehicle]\n",
      "0.0160     1  the aircraft s livery\n",
      "[the aircraft s livery]\n",
      "0.0159    20  fujarski\n",
      "[fujarski, fujarski, fujarski, fujarski, fujarski, fujarski, fujarski, fujarski, fujarski, fujarski, fujarski, fujarski, fujarski, fujarski, fujarski, fujarski, fujarski, fujarski, fujarski, fujarski]\n",
      "0.0159     1  the first five year faa reauthorization\n",
      "[the first five year faa reauthorization]\n",
      "0.0159     3  useful load\n",
      "[useful load, useful load, a useful load]\n",
      "0.0159     1  available right pedal margin\n",
      "[available right pedal margin]\n",
      "0.0158     1  a light , single engine\n",
      "[a light , single engine]\n",
      "0.0158     4  r gis antomarchi\n",
      "[r gis antomarchi, r gis antomarchi, r gis antomarchi, r gis antomarchi]\n",
      "0.0157     1  the air vehicle\n",
      "[the air vehicle]\n",
      "0.0157     1  its h145 medium twin\n",
      "[its h145 medium twin]\n",
      "0.0157     1  the increased performance\n",
      "[the increased performance]\n",
      "0.0157     1  the other general aviation associations\n",
      "[the other general aviation associations]\n",
      "0.0157     1  a conventional main rotor\n",
      "[a conventional main rotor]\n",
      "0.0157     1  small corvettes\n",
      "[small corvettes]\n",
      "0.0157     2  arrano powerplants\n",
      "[arrano powerplants, arrano powerplants]\n",
      "0.0156     1  multiple payloads\n",
      "[multiple payloads]\n",
      "0.0156     1  maritime land radar\n",
      "[maritime land radar]\n",
      "0.0156     1  traditional sar assets\n",
      "[traditional sar assets]\n",
      "0.0155     2  sites\n",
      "[sites, the site]\n",
      "0.0155     1  nearby hotel rooms\n",
      "[nearby hotel rooms]\n",
      "0.0155     1  a full tactical load\n",
      "[a full tactical load]\n",
      "0.0155     1  a seven year development process\n",
      "[a seven year development process]\n",
      "0.0155     2  specific attention\n",
      "[specific attention, specific attention]\n",
      "0.0155     1  ach managing director frederic lemos\n",
      "[ach managing director frederic lemos]\n",
      "0.0155     5  target\n",
      "[target, a target, a target, a target, a target]\n",
      "0.0154     2  matt zuccaro\n",
      "[matt zuccaro, matt zuccaro]\n",
      "0.0154     1  a public services version\n",
      "[a public services version]\n",
      "0.0154     1  charter and tour operations\n",
      "[charter and tour operations]\n",
      "0.0154     1  harsh conditions\n",
      "[harsh conditions]\n",
      "0.0153     2  hil deliveries\n",
      "[hil deliveries, hil deliveries]\n",
      "0.0153     2  a manned cabri g2\n",
      "[a manned cabri g2, a manned cabri g2]\n",
      "0.0153     2  sessions\n",
      "[sessions, six sessions]\n",
      "0.0152     2  the core missions\n",
      "[the core missions, its core mission]\n",
      "0.0152     6  14th december\n",
      "[14th december, 14th december, 14th december, 14th december, the 14th december, the 14th december]\n",
      "0.0152    16  march\n",
      "[march, march, march, march, march, march, march, march, march, march 2015, march 2018, march 2018, march 2019, march 7, march 5, march 6]\n",
      "0.0152     1  the safety procedures\n",
      "[the safety procedures]\n",
      "0.0152    16  zuccaro\n",
      "[zuccaro, zuccaro, zuccaro, zuccaro, zuccaro, zuccaro, zuccaro, zuccaro, zuccaro, zuccaro, zuccaro, zuccaro, zuccaro, zuccaro, zuccaro, zuccaro]\n",
      "0.0152     1  regulatory standards\n",
      "[regulatory standards]\n",
      "0.0152     2  the civil cabri g2\n",
      "[the civil cabri g2, the civil cabri g2]\n",
      "0.0152     1  electronic glass cockpit instrumentation\n",
      "[electronic glass cockpit instrumentation]\n",
      "0.0152     4  size\n",
      "[size, size, the size, the size]\n",
      "0.0152     1  the airborne surveillance industry\n",
      "[the airborne surveillance industry]\n",
      "0.0151     1  very demanding missions\n",
      "[very demanding missions]\n",
      "0.0151     1  operating environments\n",
      "[operating environments]\n",
      "0.0151     1  l ger hil\n",
      "[l ger hil]\n",
      "0.0151     1  it.the direction g n rale de l armement\n",
      "[it.the direction g n rale de l armement]\n",
      "0.0150    12  atlanta\n",
      "[atlanta, atlanta, atlanta, atlanta, atlanta, atlanta, atlanta, atlanta, atlanta, atlanta, atlanta, atlanta]\n",
      "0.0150     1  primary tail structure\n",
      "[primary tail structure]\n",
      "0.0150     1  floor space\n",
      "[floor space]\n",
      "0.0150     1  risk reduction studies\n",
      "[risk reduction studies]\n",
      "0.0150    10  the french navy\n",
      "[the french navy, the french navy, the french navy, the french navy, the french navy, the french navy, the french navy, the french navy, the french navy, the french navy]\n",
      "0.0150     2  the ems segment\n",
      "[the ems segment, the ems segment]\n",
      "0.0150     1  digital autopilots\n",
      "[digital autopilots]\n",
      "0.0149     1  the vessel drone integration\n",
      "[the vessel drone integration]\n",
      "0.0149     1  upstate new york\n",
      "[upstate new york]\n",
      "0.0149     1  shore support\n",
      "[shore support]\n",
      "0.0149     1  the mistral class amphibious assault ships\n",
      "[the mistral class amphibious assault ships]\n",
      "0.0148     1  maintenance\n",
      "[maintenance]\n",
      "0.0148     1  its certification program\n",
      "[its certification program]\n",
      "0.0148     1  north carolina\n",
      "[north carolina]\n",
      "0.0148     1  rough seas\n",
      "[rough seas]\n",
      "0.0148     2  cruise power\n",
      "[cruise power, cruise power]\n",
      "0.0148     2  ciras x6\n",
      "[ciras x6, ciras x6]\n",
      "0.0147     1  transport canada tc\n",
      "[transport canada tc]\n",
      "0.0147     1  the increased performance , safety and stability benefits\n",
      "[the increased performance , safety and stability benefits]\n",
      "0.0147     2  hems\n",
      "[hems, hems]\n",
      "0.0147     1  those prospective us army orders\n",
      "[those prospective us army orders]\n",
      "0.0146     1  different surface\n",
      "[different surface]\n",
      "0.0146     1  the additional performances\n",
      "[the additional performances]\n",
      "0.0146     5  head\n",
      "[head, head, head, head, head]\n",
      "0.0146     1  north american\n",
      "[north american]\n",
      "0.0146     2  new york\n",
      "[new york, new york]\n",
      "0.0146     2  17th december\n",
      "[17th december, 17th december]\n",
      "0.0146     2  quick restarts\n",
      "[quick restarts, quick restarts]\n",
      "0.0146     1  the final assembly line\n",
      "[the final assembly line]\n",
      "0.0146     1  an anti submarine warfare asw barrier\n",
      "[an anti submarine warfare asw barrier]\n",
      "0.0146     3  a five year period\n",
      "[a five year period, a five year period, a five year period]\n",
      "0.0145     1  the hai heli expo\n",
      "[the hai heli expo]\n",
      "0.0145     2  easy loading\n",
      "[easy loading, easy loading]\n",
      "0.0145     1  cockpit awareness\n",
      "[cockpit awareness]\n",
      "0.0145     1  exceptionally low sound levels\n",
      "[exceptionally low sound levels]\n",
      "0.0145     2  speed\n",
      "[speed, speed]\n",
      "0.0145     1  inter agency pursuit coordination\n",
      "[inter agency pursuit coordination]\n",
      "0.0145     1  many features\n",
      "[many features]\n",
      "0.0145     1  receivers\n",
      "[receivers]\n",
      "0.0145     1  north dakota\n",
      "[north dakota]\n",
      "0.0144     2  a highly productive test program\n",
      "[a highly productive test program, a highly productive test program]\n",
      "0.0144     1  retrofit options\n",
      "[retrofit options]\n",
      "0.0143     2  seas\n",
      "[seas, sea]\n",
      "0.0143     2  a french navy vessel\n",
      "[a french navy vessel, a french navy vessel]\n",
      "0.0143     4  las vegas\n",
      "[las vegas, las vegas, las vegas, las vegas]\n",
      "0.0143     1  the us naval test pilot school\n",
      "[the us naval test pilot school]\n",
      "0.0143     1  top speed\n",
      "[top speed]\n",
      "0.0143     2  growth room\n",
      "[growth room, growth room]\n",
      "0.0143     1  the five year bill\n",
      "[the five year bill]\n",
      "0.0143     4  options\n",
      "[options, the option, an option, its options]\n",
      "0.0143     1  global navies\n",
      "[global navies]\n",
      "0.0142     2  the existing civilian market\n",
      "[the existing civilian market, the existing civilian market]\n",
      "0.0142     2  components\n",
      "[components, 19 components]\n",
      "0.0142     2  a few years ago\n",
      "[a few years ago, a few years ago]\n",
      "0.0142     1  the chinese ministry of transport s\n",
      "[the chinese ministry of transport s]\n",
      "0.0142     1  700 kilogram vertivision surveillance rotorcraft\n",
      "[700 kilogram vertivision surveillance rotorcraft]\n",
      "0.0142     1  our 3d design capabilities\n",
      "[our 3d design capabilities]\n",
      "0.0142     2  the french armed forces\n",
      "[the french armed forces, the three french armed forces]\n",
      "0.0142     9  december\n",
      "[december, december, december, december, december, december, december 14, december 2015, december 13]\n",
      "0.0142     1  sonobuoy data\n",
      "[sonobuoy data]\n",
      "0.0141     2  new zealand\n",
      "[new zealand, new zealand]\n",
      "0.0141     4  ralph setz\n",
      "[ralph setz, ralph setz, ralph setz, ralph setz]\n",
      "0.0141     5  delivery\n",
      "[delivery, delivery, delivery, deliveries, delivery]\n",
      "0.0141     1  this year s venue\n",
      "[this year s venue]\n",
      "0.0141     1  good news\n",
      "[good news]\n",
      "0.0141     1  its 70 year heritage\n",
      "[its 70 year heritage]\n",
      "0.0141     1  tail booms\n",
      "[tail booms]\n",
      "0.0140     1  an hd video wall\n",
      "[an hd video wall]\n",
      "0.0140     1  a low acoustic footprint\n",
      "[a low acoustic footprint]\n",
      "0.0140     1  command centers\n",
      "[command centers]\n",
      "0.0140     1  the programme design authority\n",
      "[the programme design authority]\n",
      "0.0140     1  expo convention\n",
      "[expo convention]\n",
      "0.0139     2  its estimated maximum cruise speed\n",
      "[its estimated maximum cruise speed, its estimated maximum cruise speed]\n",
      "0.0139     1  rear fuselage\n",
      "[rear fuselage]\n",
      "0.0139     1  ip satellite\n",
      "[ip satellite]\n",
      "0.0139     1  tremendous interest\n",
      "[tremendous interest]\n",
      "0.0139     1  factory installations\n",
      "[factory installations]\n",
      "0.0139     2  regis antomarchi\n",
      "[regis antomarchi, regis antomarchi]\n",
      "0.0139     3  frigates\n",
      "[frigates, a frigate, a frigate]\n",
      "0.0139     1  existing logistical footprint\n",
      "[existing logistical footprint]\n",
      "0.0139     1  newly signed up customers\n",
      "[newly signed up customers]\n",
      "0.0139     7  easa\n",
      "[easa, easa, easa, easa, easa, easa, easa]\n",
      "0.0139     1  the french armament directorate direction\n",
      "[the french armament directorate direction]\n",
      "0.0138     2  txi\n",
      "[txi, the txi]\n",
      "0.0138     1  such a high quality avionics improvement\n",
      "[such a high quality avionics improvement]\n",
      "0.0138     1  a unique automatic deck landing capacity\n",
      "[a unique automatic deck landing capacity]\n",
      "0.0138     1  continual improvement\n",
      "[continual improvement]\n",
      "0.0138     1  major warships\n",
      "[major warships]\n",
      "0.0138     1  investment returns\n",
      "[investment returns]\n",
      "0.0137     1  ifr approvals\n",
      "[ifr approvals]\n",
      "0.0137     2  ship borne uavs\n",
      "[ship borne uavs, ship borne uavs]\n",
      "0.0137     1  avionics\n",
      "[avionics]\n",
      "0.0137     6  antomarchi\n",
      "[antomarchi, antomarchi, antomarchi, antomarchi, antomarchi, antomarchi]\n",
      "0.0137     4  airframe\n",
      "[airframe, the airframe, the airframe, the airframe]\n",
      "0.0137     1  numerous advisory committees\n",
      "[numerous advisory committees]\n",
      "0.0137     1  side\n",
      "[side]\n",
      "0.0137     3  exceptionally low temperatures\n",
      "[exceptionally low temperatures, exceptionally low temperatures, exceptionally low temperatures]\n",
      "0.0137     1  the executive market\n",
      "[the executive market]\n",
      "0.0137     1  panel layout possibilities\n",
      "[panel layout possibilities]\n",
      "0.0137     1  their key capabilities\n",
      "[their key capabilities]\n",
      "0.0137     5  interest\n",
      "[interest, interest, interest, interest, the interest]\n",
      "0.0137     9  place\n",
      "[place, place, place, place, place, place, place, place, place]\n",
      "0.0136     2  the oil and gas sector\n",
      "[the oil and gas sector, the oil and gas sector]\n",
      "0.0136     1  the rotorcraft market\n",
      "[the rotorcraft market]\n",
      "0.0136     1  the received video\n",
      "[the received video]\n",
      "0.0136     2  this market segment\n",
      "[this market segment, this market segment]\n",
      "0.0136     1  laurence b jat\n",
      "[laurence b jat]\n",
      "0.0136     1  all the different civil versions oil\n",
      "[all the different civil versions oil]\n",
      "0.0135     1  the rotary wing uav\n",
      "[the rotary wing uav]\n",
      "0.0135     4  more than one hour\n",
      "[more than one hour, more than 10 hours, more than one hour, more than 10 hours]\n",
      "0.0135     1  ec130b4 t2 series\n",
      "[ec130b4 t2 series]\n",
      "0.0135     1  six single executive seats\n",
      "[six single executive seats]\n",
      "0.0135     1  two ge aviation ct7 2f1 engines\n",
      "[two ge aviation ct7 2f1 engines]\n",
      "0.0135     1  the current market\n",
      "[the current market]\n",
      "0.0135     5  its cabin\n",
      "[its cabin, its cabin, the cabin, its cabin, the cabin]\n",
      "0.0135    14  hai\n",
      "[hai, hai, hai, hai, hai, hai, hai, hai, hai, hai, hai, hai, hai, hai]\n",
      "0.0135     1  lighting devices\n",
      "[lighting devices]\n",
      "0.0134     3  support\n",
      "[support, the support, the support]\n",
      "0.0134     1  jump seat\n",
      "[jump seat]\n",
      "0.0134     5  patients\n",
      "[patients, patients, the patient, the patient, the patient]\n",
      "0.0134     1  associated technical risks\n",
      "[associated technical risks]\n",
      "0.0134    10  h160s\n",
      "[h160s, h160s, h160s, h160, h160, h160, h160, an h160, an h160, an h160]\n",
      "0.0134     1  a technology demonstrator\n",
      "[a technology demonstrator]\n",
      "0.0134     2  mini mobilcmdr\n",
      "[mini mobilcmdr, mini mobilcmdr]\n",
      "0.0134     2  situational awareness\n",
      "[situational awareness, situational awareness]\n",
      "0.0133     1  various manoeuvres\n",
      "[various manoeuvres]\n",
      "0.0133     3  extremely cold conditions\n",
      "[extremely cold conditions, extremely cold conditions, extremely cold conditions]\n",
      "0.0133     1  only room\n",
      "[only room]\n",
      "0.0133     1  possible problems\n",
      "[possible problems]\n",
      "0.0133     1  the controls\n",
      "[the controls]\n",
      "0.0132     1  a key requirement\n",
      "[a key requirement]\n",
      "0.0132     2  terms\n",
      "[terms, terms]\n",
      "0.0132     1  intended use\n",
      "[intended use]\n",
      "0.0132     8  addition\n",
      "[addition, addition, addition, addition, addition, addition, addition, the addition]\n",
      "0.0132     1  yellowknife nwt canada\n",
      "[yellowknife nwt canada]\n",
      "0.0132     2  user fees\n",
      "[user fees, that user fees]\n",
      "0.0132     1  uniform attach points\n",
      "[uniform attach points]\n",
      "0.0132     1  mobile units\n",
      "[mobile units]\n",
      "0.0131     1  its accelerated development program\n",
      "[its accelerated development program]\n",
      "0.0131     4  output\n",
      "[output, output, output, output]\n",
      "0.0131     3  imt\n",
      "[imt, imt, imt]\n",
      "0.0131     3  weight\n",
      "[weight, weight, weight]\n",
      "0.0131     2  four assembly lines\n",
      "[four assembly lines, the assembly line]\n",
      "0.0131     1  the european aviation safety agency easa\n",
      "[the european aviation safety agency easa]\n",
      "0.0131     1  less manpower\n",
      "[less manpower]\n",
      "0.0131     2  b jat\n",
      "[b jat, b jat]\n",
      "0.0130     1  optical identification\n",
      "[optical identification]\n",
      "0.0130     1  college football hall\n",
      "[college football hall]\n",
      "0.0129     1  a full size\n",
      "[a full size]\n",
      "0.0129     7  way\n",
      "[way, way, the way, the way, the way, the way, also the way]\n",
      "0.0129     1  its assets i.e. naval helicopter\n",
      "[its assets i.e. naval helicopter]\n",
      "0.0129     2  vibrations\n",
      "[vibrations, no vibration]\n",
      "0.0129     1  one key regulatory initiative\n",
      "[one key regulatory initiative]\n",
      "0.0128     1  a sole source requirement notice\n",
      "[a sole source requirement notice]\n",
      "0.0128     1  the blue edge blades\n",
      "[the blue edge blades]\n",
      "0.0128     1  a turn key solution\n",
      "[a turn key solution]\n",
      "0.0128     1  a compelling market case\n",
      "[a compelling market case]\n",
      "0.0127     4  the us navy\n",
      "[the us navy, the us navy, the us navy, the us navy]\n",
      "0.0127     2  alouette iii\n",
      "[alouette iii, alouette iii]\n",
      "0.0127     4  segments\n",
      "[segments, segments, the segment, this segment]\n",
      "0.0127     1  the helionix digital avionics suite\n",
      "[the helionix digital avionics suite]\n",
      "0.0127     2  the eventual market\n",
      "[the eventual market, the eventual market]\n",
      "0.0127     1  any ship captain\n",
      "[any ship captain]\n",
      "0.0127     1  that company s fleet modernization program\n",
      "[that company s fleet modernization program]\n",
      "0.0126     2  an autonomous mode\n",
      "[an autonomous mode, an autonomous mode]\n",
      "0.0126     1  optional incubator\n",
      "[optional incubator]\n",
      "0.0126     2  the longer term\n",
      "[the longer term, the longer term]\n",
      "0.0126     4  a second prototype\n",
      "[a second prototype, the second prototype, the second prototype, support.the second prototype]\n",
      "0.0126     1  the sdam program\n",
      "[the sdam program]\n",
      "0.0126     1  the familiar helionix avionics suite\n",
      "[the familiar helionix avionics suite]\n",
      "0.0126     1  seat\n",
      "[seat]\n",
      "0.0126     1  its super medium 525 relentless twin\n",
      "[its super medium 525 relentless twin]\n",
      "0.0125     1  illegal immigrants\n",
      "[illegal immigrants]\n",
      "0.0125     1  a full floor\n",
      "[a full floor]\n",
      "0.0125     1  the reduced rotor diameter\n",
      "[the reduced rotor diameter]\n",
      "0.0125     1  myriad issues\n",
      "[myriad issues]\n",
      "0.0125     1  downlink transmitters\n",
      "[downlink transmitters]\n",
      "0.0124     1  the gearbox housing , wing cradle composite side panels\n",
      "[the gearbox housing , wing cradle composite side panels]\n",
      "0.0124     8  bell\n",
      "[bell, bell, bell, bell, bell, bell, bell, bell]\n",
      "0.0124     1  the pilot and maintenance technician shortage\n",
      "[the pilot and maintenance technician shortage]\n",
      "0.0124     1  digital mode\n",
      "[digital mode]\n",
      "0.0124     2  european approval\n",
      "[european approval, european approval]\n",
      "0.0124     2  national training center\n",
      "[national training center, national training center]\n",
      "0.0123     2  principal subcontractors\n",
      "[principal subcontractors, their principal subcontractors]\n",
      "0.0123     1  a ship or naval force\n",
      "[a ship or naval force]\n",
      "0.0123     1  the imt elink intelligent aggregation algorithm iaa\n",
      "[the imt elink intelligent aggregation algorithm iaa]\n",
      "0.0123     6  part\n",
      "[part, part, part, part, part, part]\n",
      "0.0122     1  the niche market\n",
      "[the niche market]\n",
      "0.0122     2  clients\n",
      "[clients, clients]\n",
      "0.0122     1  if necessary , shore based assets\n",
      "[if necessary , shore based assets]\n",
      "0.0122     1  five bladed rotor\n",
      "[five bladed rotor]\n",
      "0.0122     2  max cruise 155kt\n",
      "[max cruise 155kt, max cruise 155kt]\n",
      "0.0121     2  borne uavs\n",
      "[borne uavs, borne uavs]\n",
      "0.0121     1  an advanced tailboom aerodynamic cowling atac\n",
      "[an advanced tailboom aerodynamic cowling atac]\n",
      "0.0121     1  the program design authority\n",
      "[the program design authority]\n",
      "0.0121     1  a european naval defense firm\n",
      "[a european naval defense firm]\n",
      "0.0121     7  canada\n",
      "[canada, canada, canada, canada, canada, canada, canada]\n",
      "0.0121     1  the military airbase\n",
      "[the military airbase]\n",
      "0.0121     1  a single point interface\n",
      "[a single point interface]\n",
      "0.0121     1  g500h txi 10.6 inch lcd\n",
      "[g500h txi 10.6 inch lcd]\n",
      "0.0120     1  final inspection\n",
      "[final inspection]\n",
      "0.0120     1  march 2018 babcock\n",
      "[march 2018 babcock]\n",
      "0.0120     1  mechanical electrical interfaces\n",
      "[mechanical electrical interfaces]\n",
      "0.0120     1  a single or multiple receive site applications\n",
      "[a single or multiple receive site applications]\n",
      "0.0120     4  board\n",
      "[board, board, board, board]\n",
      "0.0120     3  the helionix avionics suite\n",
      "[the helionix avionics suite, the helionix avionics suite, the helionix avionics suite]\n",
      "0.0120     1  the prototype builders\n",
      "[the prototype builders]\n",
      "0.0120     2  donauw rth\n",
      "[donauw rth, donauw rth]\n",
      "0.0120     3  radar\n",
      "[radar, radar, radar]\n",
      "0.0120     1  16 passengers utility seating\n",
      "[16 passengers utility seating]\n",
      "0.0120     4  the end of this year\n",
      "[the end of this year, an end of the year, the end of this year, the end of this year]\n",
      "0.0119     1  the working conditions\n",
      "[the working conditions]\n",
      "0.0119     1  a much lower operating cost\n",
      "[a much lower operating cost]\n",
      "0.0119     1  installation\n",
      "[installation]\n",
      "0.0119     1  significant inroads\n",
      "[significant inroads]\n",
      "0.0119     1  the leasing companies\n",
      "[the leasing companies]\n",
      "0.0119     3  navies\n",
      "[navies, navies, navies]\n",
      "0.0119     1  measures\n",
      "[measures]\n",
      "0.0118     2  annual\n",
      "[annual, annual]\n",
      "0.0118     1  actionable intelligence\n",
      "[actionable intelligence]\n",
      "0.0118     1  the future intermediate size\n",
      "[the future intermediate size]\n",
      "0.0118     1  counter smuggling\n",
      "[counter smuggling]\n",
      "0.0118     2  security\n",
      "[security, the security]\n",
      "0.0118     1  a number nearby attractions\n",
      "[a number nearby attractions]\n",
      "0.0118     1  ownership experience\n",
      "[ownership experience]\n",
      "0.0118     1  its initial ground\n",
      "[its initial ground]\n",
      "0.0117     1  its certification process\n",
      "[its certification process]\n",
      "0.0117     1  educational and professional development sessions\n",
      "[educational and professional development sessions]\n",
      "0.0117     1  aftermarket and factory installation options\n",
      "[aftermarket and factory installation options]\n",
      "0.0117     1  group\n",
      "[group]\n",
      "0.0117     1  olivier gensse\n",
      "[olivier gensse]\n",
      "0.0117     4  fort rucker\n",
      "[fort rucker, fort rucker, fort rucker, fort rucker]\n",
      "0.0116     2  garmin\n",
      "[garmin, garmin]\n",
      "0.0116     4  sdam\n",
      "[sdam, sdam, sdam, the sdam]\n",
      "0.0116     1  quality\n",
      "[quality]\n",
      "0.0116     5  faa\n",
      "[faa, faa, faa, faa, faa]\n",
      "0.0116     1  the demanding requirements\n",
      "[the demanding requirements]\n",
      "0.0116     1  fennec\n",
      "[fennec]\n",
      "0.0116     1  an electronic warfare environment\n",
      "[an electronic warfare environment]\n",
      "0.0116     1  fishery protection\n",
      "[fishery protection]\n",
      "0.0116     2  both passenger utility\n",
      "[both passenger utility, both passenger utility]\n",
      "0.0116     2  360 degree patient access\n",
      "[360 degree patient access, 360 degree patient access]\n",
      "0.0116     1  fewer resources\n",
      "[fewer resources]\n",
      "0.0116     3  door\n",
      "[door, door, door]\n",
      "0.0115     2  the industrial project management\n",
      "[the industrial project management, the industrial project management]\n",
      "0.0115     1  stiff competition\n",
      "[stiff competition]\n",
      "0.0115     1  eurotec s avionics and design manager\n",
      "[eurotec s avionics and design manager]\n",
      "0.0115     1  multifunctional cabinet\n",
      "[multifunctional cabinet]\n",
      "0.0115     2  the principal technologies\n",
      "[the principal technologies, the principal technologies]\n",
      "0.0115     2  technological bricks\n",
      "[technological bricks, technological bricks]\n",
      "0.0115     3  a double sweep design\n",
      "[a double sweep design, a double sweep design, a double sweep design]\n",
      "0.0115     1  15 less fuel burn\n",
      "[15 less fuel burn]\n",
      "0.0114     1  investment roi\n",
      "[investment roi]\n",
      "0.0114     1  the different technology\n",
      "[the different technology]\n",
      "0.0114     3  the main objective\n",
      "[the main objective, the main objective, the main objective]\n",
      "0.0114     2  users\n",
      "[users, users]\n",
      "0.0114     1  landing\n",
      "[landing]\n",
      "0.0114     1  a secure ip network\n",
      "[a secure ip network]\n",
      "0.0113     2  hospital helipads\n",
      "[hospital helipads, hospital helipads]\n",
      "0.0113     1  considerable success\n",
      "[considerable success]\n",
      "0.0113     1  the future.imt vislink booth c4338\n",
      "[the future.imt vislink booth c4338]\n",
      "0.0113     1  the eve of this year\n",
      "[the eve of this year]\n",
      "0.0113     8  three prototypes\n",
      "[three prototypes, three prototypes, the prototype, the prototype, the three prototypes, the three prototypes, the three prototypes, the three prototypes]\n",
      "0.0113     2  the next generation\n",
      "[the next generation, the next generation]\n",
      "0.0113     1  neighborly forum\n",
      "[neighborly forum]\n",
      "0.0113     1  operational autonomy\n",
      "[operational autonomy]\n",
      "0.0113     1  dare county\n",
      "[dare county]\n",
      "0.0112     3  plans\n",
      "[plans, our plan, our plan]\n",
      "0.0112     3  power\n",
      "[power, the power, the power]\n",
      "0.0112     4  survivors\n",
      "[survivors, survivors, survivors, survivors]\n",
      "0.0112    15  the company\n",
      "[the company, the company, the company, the company, the company, the company, the company, the company, the company, the company, the company, the company, their company, the two companies, the two companies]\n",
      "0.0112     4  armies\n",
      "[armies, army, the army, the army]\n",
      "0.0112     5  lapland\n",
      "[lapland, lapland, lapland, lapland, lapland]\n",
      "0.0112     2  aix\n",
      "[aix, aix]\n",
      "0.0112     1  stability\n",
      "[stability]\n",
      "0.0112     1  carbon fibre\n",
      "[carbon fibre]\n",
      "0.0111     1  the leading solution\n",
      "[the leading solution]\n",
      "0.0111     2  the programme bernard fujarski\n",
      "[the programme bernard fujarski, the programme bernard fujarski]\n",
      "0.0111     2  the federal aviation administration faa\n",
      "[the federal aviation administration faa, the federal aviation administration faa]\n",
      "0.0111     1  h125\n",
      "[h125]\n",
      "0.0111     1  crx6\n",
      "[crx6]\n",
      "0.0111     1  a world wide network\n",
      "[a world wide network]\n",
      "0.0111     1  virtual simulation\n",
      "[virtual simulation]\n",
      "0.0111     1  the european aviation safety agency\n",
      "[the european aviation safety agency]\n",
      "0.0111     1  the last one\n",
      "[the last one]\n",
      "0.0111     1  algorithm iaa\n",
      "[algorithm iaa]\n",
      "0.0111     1  the vehicle\n",
      "[the vehicle]\n",
      "0.0111     3  a utility configuration\n",
      "[a utility configuration, a utility configuration, a utility configuration]\n",
      "0.0110     1  the best receivers\n",
      "[the best receivers]\n",
      "0.0110     1  cities anaheim\n",
      "[cities anaheim]\n",
      "0.0110     1  a maximum capacity\n",
      "[a maximum capacity]\n",
      "0.0110     1  the integrated automatic functions\n",
      "[the integrated automatic functions]\n",
      "0.0110     2  the same time\n",
      "[the same time, the same time]\n",
      "0.0110     1  flexible implementation\n",
      "[flexible implementation]\n",
      "0.0110     1  coastal watch\n",
      "[coastal watch]\n",
      "0.0110     1  part 107 ground school\n",
      "[part 107 ground school]\n",
      "0.0110     1  its aw609 civil tiltrotor\n",
      "[its aw609 civil tiltrotor]\n",
      "0.0109    13  gensse\n",
      "[gensse, gensse, gensse, gensse, gensse, gensse, gensse, gensse, gensse, gensse, gensse, gensse, gensse]\n",
      "0.0109     1  eurocopter x4\n",
      "[eurocopter x4]\n",
      "0.0109     1  legislative and regulatory initiatives\n",
      "[legislative and regulatory initiatives]\n",
      "0.0109     1  the safe integration\n",
      "[the safe integration]\n",
      "0.0108     1  neutral or friendly sea traffic\n",
      "[neutral or friendly sea traffic]\n",
      "0.0108     3  questions\n",
      "[questions, just a question, just a question]\n",
      "0.0108     1  personnel\n",
      "[personnel]\n",
      "0.0108     1  all connected remote receivers\n",
      "[all connected remote receivers]\n",
      "0.0108     1  northern finland\n",
      "[northern finland]\n",
      "0.0108     1  authorities\n",
      "[authorities]\n",
      "0.0108     1  the main parties\n",
      "[the main parties]\n",
      "0.0108     1  altitudes\n",
      "[altitudes]\n",
      "0.0107     2  h125 singles\n",
      "[h125 singles, h125 singles]\n",
      "0.0107     1  extra payload\n",
      "[extra payload]\n",
      "0.0107     1  monitoring\n",
      "[monitoring]\n",
      "0.0107     2  the air\n",
      "[the air, our air]\n",
      "0.0107     1  legislative agenda\n",
      "[legislative agenda]\n",
      "0.0107     1  a single source\n",
      "[a single source]\n",
      "0.0107     6  the us army\n",
      "[the us army, the us army, the us army, the us army, the us army, the us army]\n",
      "0.0107     1  a very high level\n",
      "[a very high level]\n",
      "0.0107     2  south america\n",
      "[south america, south america]\n",
      "0.0107     1  ifr\n",
      "[ifr]\n",
      "0.0106     1  strong synergies\n",
      "[strong synergies]\n",
      "0.0106     1  a significantly higher category\n",
      "[a significantly higher category]\n",
      "0.0106     1  a small segment\n",
      "[a small segment]\n",
      "0.0106     5  avds\n",
      "[avds, avds, avds, avds, avds]\n",
      "0.0106     1  civilian forum\n",
      "[civilian forum]\n",
      "0.0106     1  today , the blue edge blades\n",
      "[today , the blue edge blades]\n",
      "0.0106     1  specific and dynamic animation\n",
      "[specific and dynamic animation]\n",
      "0.0106     1  continued weakness\n",
      "[continued weakness]\n",
      "0.0106     1  significant overcapacity\n",
      "[significant overcapacity]\n",
      "0.0105     2  ring methodology\n",
      "[ring methodology, this ring methodology]\n",
      "0.0105     1  a maximum endurance\n",
      "[a maximum endurance]\n",
      "0.0105     1  wired ethernet\n",
      "[wired ethernet]\n",
      "0.0105     2  10.6 inch txi\n",
      "[10.6 inch txi, the 10.6 inch txi]\n",
      "0.0105     1  locales\n",
      "[locales]\n",
      "0.0105     1  an optionally piloted vehicle opv\n",
      "[an optionally piloted vehicle opv]\n",
      "0.0105     1  the continued success\n",
      "[the continued success]\n",
      "0.0105     2  orlando\n",
      "[orlando, orlando]\n",
      "0.0105     1  the company s marketing director\n",
      "[the company s marketing director]\n",
      "0.0104     3  its serial configuration\n",
      "[its serial configuration, its serial configuration, its serial configuration]\n",
      "0.0104     2  construction\n",
      "[construction, then construction]\n",
      "0.0104     1  the support side\n",
      "[the support side]\n",
      "0.0104     1  handling qualities.there\n",
      "[handling qualities.there]\n",
      "0.0104     1  data link\n",
      "[data link]\n",
      "0.0104     1  s light\n",
      "[s light]\n",
      "0.0104     1  an unlimited number\n",
      "[an unlimited number]\n",
      "0.0104     4  a ground station\n",
      "[a ground station, the ground station, the ground station, the ground station]\n",
      "0.0104     3  dispatches\n",
      "[dispatches, dispatches, the dispatch]\n",
      "0.0103     1  no small measure\n",
      "[no small measure]\n",
      "0.0103     1  a minimal number\n",
      "[a minimal number]\n",
      "0.0103     1  device\n",
      "[device]\n",
      "0.0103     1  the platform s certification\n",
      "[the platform s certification]\n",
      "0.0103     1  transport\n",
      "[transport]\n",
      "0.0103     1  bankruptcy filings\n",
      "[bankruptcy filings]\n",
      "0.0103     5  ach160\n",
      "[ach160, ach160, ach160, ach160, an ach160]\n",
      "0.0103     1  a box wing\n",
      "[a box wing]\n",
      "0.0102     2  bigger and bigger machines\n",
      "[bigger and bigger machines, bigger and bigger machines]\n",
      "0.0102     1  an intense lobbying campaign\n",
      "[an intense lobbying campaign]\n",
      "0.0102     1  wildfire suppression\n",
      "[wildfire suppression]\n",
      "0.0102     4  leonardo\n",
      "[leonardo, leonardo, leonardo, leonardo]\n",
      "0.0102     1  a target special demands\n",
      "[a target special demands]\n",
      "0.0102     1  an embedded rescue hoist\n",
      "[an embedded rescue hoist]\n",
      "0.0102     1  frederic lemos\n",
      "[frederic lemos]\n",
      "0.0102     1  the nearly 40 safety sessions\n",
      "[the nearly 40 safety sessions]\n",
      "0.0102     1  ceo\n",
      "[ceo]\n",
      "0.0102     1  the precise number\n",
      "[the precise number]\n",
      "0.0102     2  adam boyko\n",
      "[adam boyko, adam boyko]\n",
      "0.0102     2  long island\n",
      "[long island, long island]\n",
      "0.0102     1  the optimal assembly sequence\n",
      "[the optimal assembly sequence]\n",
      "0.0102     2  a strong ifr machine\n",
      "[a strong ifr machine, a strong ifr machine]\n",
      "0.0101     2  an anticipated range\n",
      "[an anticipated range, an anticipated range]\n",
      "0.0101     3  10 to 15 percent better fuel consumption\n",
      "[10 to 15 percent better fuel consumption, 10 to 15 percent better fuel consumption, 10 to 15 percent better fuel consumption]\n",
      "0.0101    10  more than 1,100h\n",
      "[more than 1,100h, more than 1,100h, more than 1,000, more than 1,000, more than 1,000, more than 40, more than 1,000, more than 1,000, more than 306, more than 700]\n",
      "0.0101     2  the atlanta convention center\n",
      "[the atlanta convention center, the atlanta convention center]\n",
      "0.0101     1  nine d3 component retrofits\n",
      "[nine d3 component retrofits]\n",
      "0.0101     1  vortex generators\n",
      "[vortex generators]\n",
      "0.0101     1  the more than 700 annual exhibitors\n",
      "[the more than 700 annual exhibitors]\n",
      "0.0101     1  precision hover\n",
      "[precision hover]\n",
      "0.0100     1  the company s longstanding commitment\n",
      "[the company s longstanding commitment]\n",
      "0.0100     1  the specific configuration\n",
      "[the specific configuration]\n",
      "0.0100     2  chris emerson\n",
      "[chris emerson, chris emerson]\n",
      "0.0100     2  vip\n",
      "[vip, vip]\n",
      "0.0100     1  further modifications\n",
      "[further modifications]\n",
      "0.0100     2  particular appeal\n",
      "[particular appeal, particular appeal]\n",
      "0.0100     1  several vsr700s\n",
      "[several vsr700s]\n",
      "0.0100     1  a single pc\n",
      "[a single pc]\n",
      "0.0099     1  european\n",
      "[european]\n",
      "0.0099     1  15 kg per hour\n",
      "[15 kg per hour]\n",
      "0.0099     1  dga\n",
      "[dga]\n",
      "0.0099     1  hostile intent\n",
      "[hostile intent]\n",
      "0.0099     4  today\n",
      "[today, today, today, today]\n",
      "0.0099     5  finland\n",
      "[finland, finland, finland, finland, finland]\n",
      "0.0099     1  confined areas\n",
      "[confined areas]\n",
      "0.0098     1  this second campaign\n",
      "[this second campaign]\n",
      "0.0098     1  the rotorcraft industry\n",
      "[the rotorcraft industry]\n",
      "0.0098     1  capital expenditures\n",
      "[capital expenditures]\n",
      "0.0098     1  a maximum take\n",
      "[a maximum take]\n",
      "0.0098     1  features\n",
      "[features]\n",
      "0.0098     1  yaw axis\n",
      "[yaw axis]\n",
      "0.0098     1  the best endurance\n",
      "[the best endurance]\n",
      "0.0098     1  an aviation rulemaking committee\n",
      "[an aviation rulemaking committee]\n",
      "0.0098     3  a wide opening\n",
      "[a wide opening, its wide opening, a wide opening]\n",
      "0.0098     1  a ship s asw activity\n",
      "[a ship s asw activity]\n",
      "0.0098     3  suppliers\n",
      "[suppliers, suppliers, suppliers]\n",
      "0.0098     1  the display upgrade\n",
      "[the display upgrade]\n",
      "0.0097     1  the h licopt\n",
      "[the h licopt]\n",
      "0.0097     1  workload\n",
      "[workload]\n",
      "0.0097     1  parameters\n",
      "[parameters]\n",
      "0.0097     3  the technologies\n",
      "[the technologies, the technology, anywhere technology]\n",
      "0.0097     1  the new tsm\n",
      "[the new tsm]\n",
      "0.0097     2  the freezing conditions\n",
      "[the freezing conditions, the freezing conditions]\n",
      "0.0097     1  an additional layer\n",
      "[an additional layer]\n",
      "0.0097     1  further.blr aerospace booth\n",
      "[further.blr aerospace booth]\n",
      "0.0097     1  refugees\n",
      "[refugees]\n",
      "0.0097     1  a large maritime zone\n",
      "[a large maritime zone]\n",
      "0.0097     1  a multifunction display\n",
      "[a multifunction display]\n",
      "0.0097     1  bart brainerd\n",
      "[bart brainerd]\n",
      "0.0097     5  the requirements\n",
      "[the requirements, the requirements, their requirements, the requirements, those requirements]\n",
      "0.0096     1  seamless and secure transmission\n",
      "[seamless and secure transmission]\n",
      "0.0096     5  opv\n",
      "[opv, opv, the opv, the opv, the opv]\n",
      "0.0096     3  conventions\n",
      "[conventions, convention, the convention]\n",
      "0.0096     2  unloading\n",
      "[unloading, unloading]\n",
      "0.0096     2  istres\n",
      "[istres, the istres]\n",
      "0.0096     2  an initial commitment\n",
      "[an initial commitment, an initial commitment]\n",
      "0.0096     1  each remote receiver\n",
      "[each remote receiver]\n",
      "0.0096     2  sar\n",
      "[sar, sar]\n",
      "0.0096     2  temperatures\n",
      "[temperatures, temperatures]\n",
      "0.0096     1  networking opportunities\n",
      "[networking opportunities]\n",
      "0.0096     4  the next decade\n",
      "[the next decade, the next decade, the next decade, the next decade]\n",
      "0.0096     1  all deployed assets\n",
      "[all deployed assets]\n",
      "0.0096     2  the three day expo\n",
      "[the three day expo, the three day expo]\n",
      "0.0095     1  our improvement plan\n",
      "[our improvement plan]\n",
      "0.0095     1  eurotec s breadth\n",
      "[eurotec s breadth]\n",
      "0.0095     1  its development programme\n",
      "[its development programme]\n",
      "0.0095     1  aerospace\n",
      "[aerospace]\n",
      "0.0095     8  a number\n",
      "[a number, a number, the number, a number, the numbers, a number, the numbers, a number]\n",
      "0.0095     3  the platform\n",
      "[the platform, the platform, the platform]\n",
      "0.0095     3  thales\n",
      "[thales, thales, thales]\n",
      "0.0094     1  the offshore industry\n",
      "[the offshore industry]\n",
      "0.0094     3  work\n",
      "[work, their work, their work]\n",
      "0.0094     6  america\n",
      "[america, america, america, america, the america, the america]\n",
      "0.0094     1  a critical tool\n",
      "[a critical tool]\n",
      "0.0094     1  a wide array\n",
      "[a wide array]\n",
      "0.0094     2  john payne\n",
      "[john payne, john payne]\n",
      "0.0094     1  axel aloccio\n",
      "[axel aloccio]\n",
      "0.0094     1  the ideal size\n",
      "[the ideal size]\n",
      "0.0094     1  the original manufacturer\n",
      "[the original manufacturer]\n",
      "0.0094     1  a retrofit option\n",
      "[a retrofit option]\n",
      "0.0094     1  zero flapping noise\n",
      "[zero flapping noise]\n",
      "0.0094     2  a large pool\n",
      "[a large pool, a large pool]\n",
      "0.0094     1  an unbroken data stream\n",
      "[an unbroken data stream]\n",
      "0.0093     1  the ship s horizon\n",
      "[the ship s horizon]\n",
      "0.0093     2  its compact size\n",
      "[its compact size, its compact size]\n",
      "0.0093     1  the best volume\n",
      "[the best volume]\n",
      "0.0093     1  odd ones\n",
      "[odd ones]\n",
      "0.0093     2  the necessary instruments\n",
      "[the necessary instruments, the necessary instruments]\n",
      "0.0093     3  h155\n",
      "[h155, h155, h155]\n",
      "0.0093     1  structure validation\n",
      "[structure validation]\n",
      "0.0093     5  second\n",
      "[second, second, second, second, second]\n",
      "0.0092     1  the regulators session\n",
      "[the regulators session]\n",
      "0.0092     6  the base\n",
      "[the base, the base, the base, the base, the base, the base]\n",
      "0.0092     1  dauphin\n",
      "[dauphin]\n",
      "0.0092     1  mike carpenter\n",
      "[mike carpenter]\n",
      "0.0092     1  the company s facility\n",
      "[the company s facility]\n",
      "0.0092     3  a range\n",
      "[a range, a range, a range]\n",
      "0.0092     2  its internal target\n",
      "[its internal target, its internal target]\n",
      "0.0092     1  hdmi and sdi outputs\n",
      "[hdmi and sdi outputs]\n",
      "0.0092     2  president\n",
      "[president, president]\n",
      "0.0092     1  neighboring\n",
      "[neighboring]\n",
      "0.0092     1  all receiver channels\n",
      "[all receiver channels]\n",
      "0.0091     1  shipborne\n",
      "[shipborne]\n",
      "0.0091     1  an advanced version\n",
      "[an advanced version]\n",
      "0.0091     1  this 700 kg drone\n",
      "[this 700 kg drone]\n",
      "0.0091     1  the correct target\n",
      "[the correct target]\n",
      "0.0091     1  a significant improvement\n",
      "[a significant improvement]\n",
      "0.0091     1  about a half dozen noise initiatives\n",
      "[about a half dozen noise initiatives]\n",
      "0.0090     3  360 degree access\n",
      "[360 degree access, 360 degree access, 360 degree access]\n",
      "0.0090     1  the show floor\n",
      "[the show floor]\n",
      "0.0090     6  germany\n",
      "[germany, germany, germany, germany, germany, germany]\n",
      "0.0090     1  corporate , private , fire utility\n",
      "[corporate , private , fire utility]\n",
      "0.0090     1  charter\n",
      "[charter]\n",
      "0.0089     1  the development phase\n",
      "[the development phase]\n",
      "0.0089     3  scandinavian\n",
      "[scandinavian, scandinavian, scandinavian]\n",
      "0.0089     2  the manufacturer s upper rate\n",
      "[the manufacturer 's upper rate, the manufacturer 's upper rate]\n",
      "0.0088     2  its 155 knot cruise speed\n",
      "[its 155 knot cruise speed, its 150 knot cruise speed]\n",
      "0.0088     1  the final phase\n",
      "[the final phase]\n",
      "0.0088     1  mature manufacturing\n",
      "[mature manufacturing]\n",
      "0.0088     1  a local , native resolution hd decoder\n",
      "[a local , native resolution hd decoder]\n",
      "0.0088     2  ian parker\n",
      "[ian parker, ian parker]\n",
      "0.0088     2  its design\n",
      "[its design, the design]\n",
      "0.0088     1  a good thing\n",
      "[a good thing]\n",
      "0.0088     1  challenging crosswinds\n",
      "[challenging crosswinds]\n",
      "0.0088     1  accessibility\n",
      "[accessibility]\n",
      "0.0088     2  a demonstrator\n",
      "[a demonstrator, the demonstrator]\n",
      "0.0088     1  a member category\n",
      "[a member category]\n",
      "0.0087     1  the biomechanical and sensor feedback\n",
      "[the biomechanical and sensor feedback]\n",
      "0.0087     2  burbank\n",
      "[burbank, burbank]\n",
      "0.0087     1  the g500h txi\n",
      "[the g500h txi]\n",
      "0.0087     1  aw139\n",
      "[aw139]\n",
      "0.0087     1  severe retrenchment\n",
      "[severe retrenchment]\n",
      "0.0087     4  earth\n",
      "[earth, earth, earth, the earth]\n",
      "0.0087     1  pusher propellers\n",
      "[pusher propellers]\n",
      "0.0087     2  the demonstration project\n",
      "[the demonstration project, the demonstration project]\n",
      "0.0087     1  the ground\n",
      "[the ground]\n",
      "0.0086     2  the royal thai army\n",
      "[the royal thai army, the royal thai army]\n",
      "0.0086     1  very positive data\n",
      "[very positive data]\n",
      "0.0086     1  the executive interior\n",
      "[the executive interior]\n",
      "0.0086     1  a multifunctional adapter plate\n",
      "[a multifunctional adapter plate]\n",
      "0.0086     1  their business models\n",
      "[their business models]\n",
      "0.0086     1  identification\n",
      "[identification]\n",
      "0.0086     2  helicopteres\n",
      "[helicopteres, helicopteres]\n",
      "0.0086     1  the best signal\n",
      "[the best signal]\n",
      "0.0085     1  the dramatic improvements\n",
      "[the dramatic improvements]\n",
      "0.0085     1  blr\n",
      "[blr]\n",
      "0.0085     1  the safe environment\n",
      "[the safe environment]\n",
      "0.0085     1  its initial appearance\n",
      "[its initial appearance]\n",
      "0.0085     1  another hai focus\n",
      "[another hai focus]\n",
      "0.0085     2  the short term\n",
      "[the short term, the short term]\n",
      "0.0085     1  comfort\n",
      "[comfort]\n",
      "0.0085     1  protocols\n",
      "[protocols]\n",
      "0.0085     1  the equipment list\n",
      "[the equipment list]\n",
      "0.0085     1  events\n",
      "[events]\n",
      "0.0085     3  72a\n",
      "[72a, 72a, the uh 72a]\n",
      "0.0085     1  a solution\n",
      "[a solution]\n",
      "0.0084     1  the visible tip\n",
      "[the visible tip]\n",
      "0.0084     1  the good news\n",
      "[the good news]\n",
      "0.0084     1  complement\n",
      "[complement]\n",
      "0.0084     3  paris\n",
      "[paris, paris, paris]\n",
      "0.0084     1  inroads\n",
      "[inroads]\n",
      "0.0084     2  gazelle\n",
      "[gazelle, gazelle]\n",
      "0.0084     1  all composite construction\n",
      "[all composite construction]\n",
      "0.0084     1  yesterday 17 december\n",
      "[yesterday 17 december]\n",
      "0.0084     1  the shop floor\n",
      "[the shop floor]\n",
      "0.0084     1  attempts\n",
      "[attempts]\n",
      "0.0084     2  compliance\n",
      "[compliance, compliance]\n",
      "0.0084     1  advantage\n",
      "[advantage]\n",
      "0.0083     2  texas\n",
      "[texas, texas]\n",
      "0.0083     1  corvettes\n",
      "[corvettes]\n",
      "0.0083     2  contacts\n",
      "[contacts, contacts]\n",
      "0.0083     1  a major advantage\n",
      "[a major advantage]\n",
      "0.0083     1  manoeuvres\n",
      "[manoeuvres]\n",
      "0.0083     4  april\n",
      "[april, april, april, april]\n",
      "0.0083     3  the campaign\n",
      "[the campaign, the campaign, the campaign]\n",
      "0.0083     1  a bespoke vip interior\n",
      "[a bespoke vip interior]\n",
      "0.0083     1  exhibitors\n",
      "[exhibitors]\n",
      "0.0083     1  opportunities\n",
      "[opportunities]\n",
      "0.0082     1  interior\n",
      "[interior]\n",
      "0.0082     1  methodology\n",
      "[methodology]\n",
      "0.0082     2  maturity\n",
      "[maturity, the maturity]\n",
      "0.0082     2  boyko\n",
      "[boyko, boyko]\n",
      "0.0082     1  a flat attitude\n",
      "[a flat attitude]\n",
      "0.0082     1  crisp 10.6 inch\n",
      "[crisp 10.6 inch]\n",
      "0.0082     2  cooperation\n",
      "[cooperation, cooperation]\n",
      "0.0082     1  the opening members reception\n",
      "[the opening members reception]\n",
      "0.0082     1  the final steps\n",
      "[the final steps]\n",
      "0.0082     1  70th\n",
      "[70th]\n",
      "0.0082     9  a variety\n",
      "[a variety, a variety, a variety, a variety, a variety, a variety, a variety, a variety, a variety]\n",
      "0.0082     3  fact\n",
      "[fact, fact, the fact]\n",
      "0.0082     1  a standing room\n",
      "[a standing room]\n",
      "0.0081     1  both local and international law enforcement\n",
      "[both local and international law enforcement]\n",
      "0.0081     1  the x4 concept\n",
      "[the x4 concept]\n",
      "0.0081     2  a two minute quick start\n",
      "[a two minute quick start, a two minute quick start]\n",
      "0.0081     1  an integral asset\n",
      "[an integral asset]\n",
      "0.0081     2  helionix\n",
      "[helionix, helionix]\n",
      "0.0080     2  columbus\n",
      "[columbus, columbus]\n",
      "0.0080     1  complaints\n",
      "[complaints]\n",
      "0.0080     1  smartphones\n",
      "[smartphones]\n",
      "0.0080     1  any vertical takeoff\n",
      "[any vertical takeoff]\n",
      "0.0080     1  the armed forces\n",
      "[the armed forces]\n",
      "0.0080     1  asuw\n",
      "[asuw]\n",
      "0.0080     1  future.imt\n",
      "[future.imt]\n",
      "0.0080     1  an essential role\n",
      "[an essential role]\n",
      "0.0080     1  focus\n",
      "[focus]\n",
      "0.0080     1  a cellular network\n",
      "[a cellular network]\n",
      "0.0079     1  the current leader\n",
      "[the current leader]\n",
      "0.0079     6  the coming months\n",
      "[the coming months, the coming months, the coming months, the coming months, the coming months, the coming months]\n",
      "0.0079    12  95 percent\n",
      "[95 percent, 95 percent, 10 percent, 100 percent, 25 percent, up to 30 percent, 10 to 15 percent, 25 to 30 percent, 10 to 15 percent, up to 30 percent, 25 to 30 percent, 10 to 15 percent]\n",
      "0.0079     2  the japan coast guard\n",
      "[the japan coast guard, the japan coast guard]\n",
      "0.0079     1  very hostile environments\n",
      "[very hostile environments]\n",
      "0.0079     3  metadata\n",
      "[metadata, metadata, metadata]\n",
      "0.0079     1  our industrial strategy\n",
      "[our industrial strategy]\n",
      "0.0078     2  california\n",
      "[california, california]\n",
      "0.0078     1  a better view\n",
      "[a better view]\n",
      "0.0078     1  a better idea\n",
      "[a better idea]\n",
      "0.0078     1  its respective category\n",
      "[its respective category]\n",
      "0.0078     2  tasks\n",
      "[tasks, two tasks]\n",
      "0.0078     2  the national guard\n",
      "[the national guard, the national guard]\n",
      "0.0078     1  upgrade\n",
      "[upgrade]\n",
      "0.0078     2  the industrial ramp\n",
      "[the industrial ramp, the industrial ramp]\n",
      "0.0078     1  fleet.hai\n",
      "[fleet.hai]\n",
      "0.0078     1  a great response\n",
      "[a great response]\n",
      "0.0078     1  the eurotec team\n",
      "[the eurotec team]\n",
      "0.0078     1  absenteeism\n",
      "[absenteeism]\n",
      "0.0078     8  may\n",
      "[may, may, may, may, may 2017, may 2017, may 2017, may 2017]\n",
      "0.0078     1  the reconstructed stream\n",
      "[the reconstructed stream]\n",
      "0.0078     1  simulators\n",
      "[simulators]\n",
      "0.0078     1  a bell representative\n",
      "[a bell representative]\n",
      "0.0078     3  72as\n",
      "[72as, 72as, 72as]\n",
      "0.0077     2  a payload capacity\n",
      "[a payload capacity, a payload capacity]\n",
      "0.0077     2  none\n",
      "[none, none]\n",
      "0.0077     2  warships\n",
      "[warships, warships]\n",
      "0.0077     1  the automotive sector\n",
      "[the automotive sector]\n",
      "0.0077     1  3x3 liter bottles\n",
      "[3x3 liter bottles]\n",
      "0.0077     1  the lateral drive shafts\n",
      "[the lateral drive shafts]\n",
      "0.0077     1  things\n",
      "[things]\n",
      "0.0077     2  maximum\n",
      "[maximum, a maximum]\n",
      "0.0077     1  the annual military\n",
      "[the annual military]\n",
      "0.0077     1  a 10 percent increase\n",
      "[a 10 percent increase]\n",
      "0.0077     1  any network connection\n",
      "[any network connection]\n",
      "0.0077     3  the h155 family\n",
      "[the h155 family, the h155 family, the h155 family]\n",
      "0.0077     1  a beneficial environment\n",
      "[a beneficial environment]\n",
      "0.0077     1  the standard procedures\n",
      "[the standard procedures]\n",
      "0.0077     1  periscopes\n",
      "[periscopes]\n",
      "0.0077     1  c4338\n",
      "[c4338]\n",
      "0.0076     1  the uas committee meeting\n",
      "[the uas committee meeting]\n",
      "0.0076     1  this early phase\n",
      "[this early phase]\n",
      "0.0076     1  their crossover training\n",
      "[their crossover training]\n",
      "0.0076     4  88 square feet\n",
      "[88 square feet, 88 square feet, about one million square feet, about one million square feet]\n",
      "0.0076     1  the technical risks\n",
      "[the technical risks]\n",
      "0.0076     1  the 10.6 inch horizontal format\n",
      "[the 10.6 inch horizontal format]\n",
      "0.0076     2  emerson\n",
      "[emerson, emerson]\n",
      "0.0076     1  regard\n",
      "[regard]\n",
      "0.0076     1  aeronautics\n",
      "[aeronautics]\n",
      "0.0076     1  the number one priority\n",
      "[the number one priority]\n",
      "0.0075     1  yaw\n",
      "[yaw]\n",
      "0.0075     1  demand\n",
      "[demand]\n",
      "0.0075     1  observers\n",
      "[observers]\n",
      "0.0075     1  fame\n",
      "[fame]\n",
      "0.0075     1  h135\n",
      "[h135]\n",
      "0.0075     1  a competitive environment\n",
      "[a competitive environment]\n",
      "0.0075     1  the equipment\n",
      "[the equipment]\n",
      "0.0075     1  the reauthorization bill\n",
      "[the reauthorization bill]\n",
      "0.0075     1  the possible rewrite\n",
      "[the possible rewrite]\n",
      "0.0075     1  the annual meet\n",
      "[the annual meet]\n",
      "0.0075     1  bart\n",
      "[bart]\n",
      "0.0075     1  their student load\n",
      "[their student load]\n",
      "0.0075     1  firehawk\n",
      "[firehawk]\n",
      "0.0075     1  a tailboom strake\n",
      "[a tailboom strake]\n",
      "0.0074     1  simplicity\n",
      "[simplicity]\n",
      "0.0074     1  b424\n",
      "[b424]\n",
      "0.0074     1  five work stations\n",
      "[five work stations]\n",
      "0.0074     1  a great crowd\n",
      "[a great crowd]\n",
      "0.0074     1  hcare\n",
      "[hcare]\n",
      "0.0074     2  request\n",
      "[request, a request]\n",
      "0.0073     1  sailors\n",
      "[sailors]\n",
      "0.0073     1  the same unit\n",
      "[the same unit]\n",
      "0.0073     4  decades\n",
      "[decades, decades, decades, decades]\n",
      "0.0073     1  very little difference\n",
      "[very little difference]\n",
      "0.0073     1  its sole source\n",
      "[its sole source]\n",
      "0.0073     2  albacete\n",
      "[albacete, albacete]\n",
      "0.0073     1  the legislative people\n",
      "[the legislative people]\n",
      "0.0073     1  the fastfin\n",
      "[the fastfin]\n",
      "0.0073     1  the leonardo aw139\n",
      "[the leonardo aw139]\n",
      "0.0073     1  as350\n",
      "[as350]\n",
      "0.0072     1  testing.airbus\n",
      "[testing.airbus]\n",
      "0.0072     1  an annual attendance\n",
      "[an annual attendance]\n",
      "0.0072     1  its fuselage\n",
      "[its fuselage]\n",
      "0.0072     5  7 inch\n",
      "[7 inch, 10.6 inch, 10.6 inch, 7 inch, the 10.6 inch]\n",
      "0.0072     1  refining\n",
      "[refining]\n",
      "0.0072     1  an existing b4\n",
      "[an existing b4]\n",
      "0.0072     1  a crucial question\n",
      "[a crucial question]\n",
      "0.0072     1  crx2\n",
      "[crx2]\n",
      "0.0072     2  marseille\n",
      "[marseille, marseille]\n",
      "0.0072     3  june\n",
      "[june, june 2015, june 2017]\n",
      "0.0072     1  t\n",
      "[t]\n",
      "0.0072     1  shape\n",
      "[shape]\n",
      "0.0072     1  an early stage\n",
      "[an early stage]\n",
      "0.0072     1  electro\n",
      "[electro]\n",
      "0.0072     1  exploration\n",
      "[exploration]\n",
      "0.0072     1  the as350 series\n",
      "[the as350 series]\n",
      "0.0072     3  an all composite airframe\n",
      "[an all composite airframe, an all composite airframe, an all composite airframe]\n",
      "0.0072     4  fujarksi\n",
      "[fujarksi, fujarksi, fujarksi, fujarksi]\n",
      "0.0072     1  robots\n",
      "[robots]\n",
      "0.0072     1  a completion center\n",
      "[a completion center]\n",
      "0.0071     1  the special needs\n",
      "[the special needs]\n",
      "0.0071     1  aland\n",
      "[aland]\n",
      "0.0071     2  helitech\n",
      "[helitech, helitech 2018]\n",
      "0.0071     2  1,300 shaft horsepower\n",
      "[1,300 shaft horsepower, 1,300 shaft horsepower]\n",
      "0.0071     1  many more farther reaching and restrictive measures\n",
      "[many more farther reaching and restrictive measures]\n",
      "0.0071     1  ct7\n",
      "[ct7]\n",
      "0.0071     1  aix les milles\n",
      "[aix les milles]\n",
      "0.0071     1  staff\n",
      "[staff]\n",
      "0.0071     1  nest\n",
      "[nest]\n",
      "0.0071     1  a potential threat\n",
      "[a potential threat]\n",
      "0.0071     1  the university of north dakota\n",
      "[the university of north dakota]\n",
      "0.0071     3  a lengthy series\n",
      "[a lengthy series, a lengthy series, a lengthy series]\n",
      "0.0070     1  a focal point\n",
      "[a focal point]\n",
      "0.0070     1  the regional government\n",
      "[the regional government]\n",
      "0.0070     1  notepads\n",
      "[notepads]\n",
      "0.0070     1  d3\n",
      "[d3]\n",
      "0.0070     8  the end\n",
      "[the end, an end, an end, the end, the end, the end, the end, the end of 2019]\n",
      "0.0070     1  connectivity\n",
      "[connectivity]\n",
      "0.0070     1  first\n",
      "[first]\n",
      "0.0070     1  as much similarity\n",
      "[as much similarity]\n",
      "0.0070     2  ac3\n",
      "[ac3, ac3]\n",
      "0.0070     1  austrian\n",
      "[austrian]\n",
      "0.0070     1  departments\n",
      "[departments]\n",
      "0.0070     1  images\n",
      "[images]\n",
      "0.0070     1  means\n",
      "[means]\n",
      "0.0070     1  mass\n",
      "[mass]\n",
      "0.0070     1  an integrated suite\n",
      "[an integrated suite]\n",
      "0.0069     1  h175\n",
      "[h175]\n",
      "0.0069     1  assessment\n",
      "[assessment]\n",
      "0.0069     4  his team\n",
      "[his team, the team, the team, the team]\n",
      "0.0069     1  subsidiaries\n",
      "[subsidiaries]\n",
      "0.0069     2  a two stage centrifugal compressor\n",
      "[a two stage centrifugal compressor, a two stage centrifugal compressor]\n",
      "0.0069     1  filtering\n",
      "[filtering]\n",
      "0.0069     1  workshops\n",
      "[workshops]\n",
      "0.0069     3  vsr\n",
      "[vsr, the vsr, vsr 700]\n",
      "0.0069     1  present\n",
      "[present]\n",
      "0.0069     1  the management\n",
      "[the management]\n",
      "0.0069     1  onera\n",
      "[onera]\n",
      "0.0069     2  yuma\n",
      "[yuma, yuma]\n",
      "0.0069     1  lcd\n",
      "[lcd]\n",
      "0.0069     1  its istar role\n",
      "[its istar role]\n",
      "0.0069     2  efficiency\n",
      "[efficiency, efficiencies]\n",
      "0.0068     1  hold\n",
      "[hold]\n",
      "0.0068     2  hundreds\n",
      "[hundreds, hundreds]\n",
      "0.0068     1  an impressive return\n",
      "[an impressive return]\n",
      "0.0068     3  reserves\n",
      "[reserves, reserves, the reserve]\n",
      "0.0068     8  37 degrees\n",
      "[37 degrees, 360 degree, 360 degree, 360 degree, 360 degree, 360 degree, 37 degrees, 120 degrees]\n",
      "0.0068     1  a militarised version\n",
      "[a militarised version]\n",
      "0.0068     3  setz\n",
      "[setz, setz, setz]\n",
      "0.0068     1  the latest upgrade\n",
      "[the latest upgrade]\n",
      "0.0068     1  calls\n",
      "[calls]\n",
      "0.0068     1  a sar payload\n",
      "[a sar payload]\n",
      "0.0068     2  the industry\n",
      "[the industry, the industry]\n",
      "0.0068     1  gearboxes\n",
      "[gearboxes]\n",
      "0.0068     3  a baggage compartment\n",
      "[a baggage compartment, a baggage compartment, a baggage compartment]\n",
      "0.0068     2  an asset\n",
      "[an asset, an asset]\n",
      "0.0068     1  coo\n",
      "[coo]\n",
      "0.0068     3  mcas\n",
      "[mcas, the mcas, the mcas]\n",
      "0.0068     1  their complex shape\n",
      "[their complex shape]\n",
      "0.0068     3  the programme\n",
      "[the programme, the programme, the programme]\n",
      "0.0068     1  an up to 18 percent increase\n",
      "[an up to 18 percent increase]\n",
      "0.0068     1  run\n",
      "[run]\n",
      "0.0068    16  5,670kg\n",
      "[5,670kg, 15 kg, 3,800 kg, 150kg, 5,670kg, 700 kg, 3,800 kg, 150kg, around 250 kg, around 250 kg, around 250 kg, around 250 kg, up to 250 kg, up to 150 kg, up to 250 kg, up to 150 kg]\n",
      "0.0067     2  the sector\n",
      "[the sector, the sector]\n",
      "0.0067     1  operations.what\n",
      "[operations.what]\n",
      "0.0067     2  august\n",
      "[august, august]\n",
      "0.0067     1  as much innovation\n",
      "[as much innovation]\n",
      "0.0067     1  ec145\n",
      "[ec145]\n",
      "0.0067     1  that environment\n",
      "[that environment]\n",
      "0.0067     1  8 12 executive vip\n",
      "[8 12 executive vip]\n",
      "0.0067     1  greater or more detailed coverage\n",
      "[greater or more detailed coverage]\n",
      "0.0067     2  the difficult situation\n",
      "[the difficult situation, the difficult situation]\n",
      "0.0067     1  elements\n",
      "[elements]\n",
      "0.0066     1  2e\n",
      "[2e]\n",
      "0.0066     2  dallas\n",
      "[dallas, dallas]\n",
      "0.0066     1  its capacity\n",
      "[its capacity]\n",
      "0.0066     3  a smoother ride\n",
      "[a smoother ride, a smoother ride, a smoother ride]\n",
      "0.0066     1  its extended endurance\n",
      "[its extended endurance]\n",
      "0.0066     1  goals\n",
      "[goals]\n",
      "0.0066     5  a period\n",
      "[a period, a period, a period, this period, a period]\n",
      "0.0066     3  a contract\n",
      "[a contract, the contract, the contract]\n",
      "0.0066     2  155kts\n",
      "[155kts, 155kts]\n",
      "0.0065     1  h160.airbus\n",
      "[h160.airbus]\n",
      "0.0065     1  front\n",
      "[front]\n",
      "0.0065     2  finland s finnhems\n",
      "[finland s finnhems, finland s finnhems]\n",
      "0.0065     1  monday\n",
      "[monday]\n",
      "0.0065     1  prospects\n",
      "[prospects]\n",
      "0.0065     1  the ukrainian ministry\n",
      "[the ukrainian ministry]\n",
      "0.0065     3  the month\n",
      "[the month, the month, only eight months]\n",
      "0.0065     1  c305\n",
      "[c305]\n",
      "0.0065     1  up to 18 percent\n",
      "[up to 18 percent]\n",
      "0.0065     1  excess\n",
      "[excess]\n",
      "0.0065     2  the arrano\n",
      "[the arrano, the arrano]\n",
      "0.0065     2  the cockpit\n",
      "[the cockpit, the cockpit]\n",
      "0.0065     3  their class\n",
      "[their class, its class, their class]\n",
      "0.0064     1  legacy\n",
      "[legacy]\n",
      "0.0064     6  a fleet\n",
      "[a fleet, a fleet, the fleet, a fleet, a fleet, the fleets]\n",
      "0.0064     1  its dispatch reliability\n",
      "[its dispatch reliability]\n",
      "0.0064     1  an ideal complement\n",
      "[an ideal complement]\n",
      "0.0064     3  the study\n",
      "[the study, no studies, a study]\n",
      "0.0064     1  technician\n",
      "[technician]\n",
      "0.0064     1  commanders\n",
      "[commanders]\n",
      "0.0064     1  amplification\n",
      "[amplification]\n",
      "0.0064     1  these increases\n",
      "[these increases]\n",
      "0.0064     1  the vertical fin\n",
      "[the vertical fin]\n",
      "0.0064     1  a 100 percent payback\n",
      "[a 100 percent payback]\n",
      "0.0064     2  stez\n",
      "[stez, stez]\n",
      "0.0064     1  ge\n",
      "[ge]\n",
      "0.0064     1  3d\n",
      "[3d]\n",
      "0.0064     2  the septuagenarian association\n",
      "[the septuagenarian association, the septuagenarian association]\n",
      "0.0063     1  a game changer\n",
      "[a game changer]\n",
      "0.0063     6  450 nautical miles\n",
      "[450 nautical miles, 100 nautical miles, 450 nautical miles, 450 nautical miles, 100 nautical miles, 450 nautical miles]\n",
      "0.0063     1  an excellent trade\n",
      "[an excellent trade]\n",
      "0.0063     4  spain\n",
      "[spain, spain, spain, spain]\n",
      "0.0063     1  data\n",
      "[data]\n",
      "0.0063     2  these issues\n",
      "[these issues, these issues]\n",
      "0.0063     1  ease\n",
      "[ease]\n",
      "0.0063     1  versionairbus\n",
      "[versionairbus]\n",
      "0.0063     1  third\n",
      "[third]\n",
      "0.0063     1  place.airbus\n",
      "[place.airbus]\n",
      "0.0063     1  a clear and reliable picture\n",
      "[a clear and reliable picture]\n",
      "0.0063     1  its 70th anniversary\n",
      "[its 70th anniversary]\n",
      "0.0063     1  a seamless , economical retrofit\n",
      "[a seamless , economical retrofit]\n",
      "0.0063     1  part.airbus\n",
      "[part.airbus]\n",
      "0.0063     1  a plug and play concept\n",
      "[a plug and play concept]\n",
      "0.0063     1  the usual standards\n",
      "[the usual standards]\n",
      "0.0062     1  audio\n",
      "[audio]\n",
      "0.0062     1  brainerd\n",
      "[brainerd]\n",
      "0.0062     2  arizona\n",
      "[arizona, arizona]\n",
      "0.0062     1  automation\n",
      "[automation]\n",
      "0.0062     1  the variant\n",
      "[the variant]\n",
      "0.0062     4  europe\n",
      "[europe, europe, europe, europe]\n",
      "0.0062     1  fleet\n",
      "[fleet]\n",
      "0.0062     1  a 12 passenger interior\n",
      "[a 12 passenger interior]\n",
      "0.0062     1  advancements\n",
      "[advancements]\n",
      "0.0062     1  the president s budget\n",
      "[the president s budget]\n",
      "0.0062     1  a direct competitor\n",
      "[a direct competitor]\n",
      "0.0062     1  exactly the same way\n",
      "[exactly the same way]\n",
      "0.0062     5  a handful\n",
      "[a handful, a handful, a handful, a handful, a handful]\n",
      "0.0062     1  antennas\n",
      "[antennas]\n",
      "0.0062     1  an h225 acquisition\n",
      "[an h225 acquisition]\n",
      "0.0062     1  h145\n",
      "[h145]\n",
      "0.0061     1  deployment\n",
      "[deployment]\n",
      "0.0061     1  anticipation\n",
      "[anticipation]\n",
      "0.0061     1  provence\n",
      "[provence]\n",
      "0.0061     1  canadian\n",
      "[canadian]\n",
      "0.0061     1  all day on march 5\n",
      "[all day on march 5]\n",
      "0.0061     2  accidents\n",
      "[accidents, the accident]\n",
      "0.0061     1  proposal\n",
      "[proposal]\n",
      "0.0061     1  our members\n",
      "[our members]\n",
      "0.0060     1  all work instructions\n",
      "[all work instructions]\n",
      "0.0060     2  the project\n",
      "[the project, the project]\n",
      "0.0060     1  a continued focus\n",
      "[a continued focus]\n",
      "0.0060     1  movie\n",
      "[movie]\n",
      "0.0060     1  the simultaneous use\n",
      "[the simultaneous use]\n",
      "0.0060     1  favor\n",
      "[favor]\n",
      "0.0060     1  a formidable deterrent\n",
      "[a formidable deterrent]\n",
      "0.0060     1  attendees\n",
      "[attendees]\n",
      "0.0060    13  661 pounds\n",
      "[661 pounds, 12,500 pounds, 661 pounds, 12,500 pounds, 661 pounds, 661 pounds, 12,500 pounds, 661 pounds, 12,500 pounds, 661 pounds, 20,500 pound, some 330 pounds, some 330 pounds]\n",
      "0.0060     4  all phases\n",
      "[all phases, this phase, this phase, all phases]\n",
      "0.0060     6  20,000 feet\n",
      "[20,000 feet, 20,000 feet, 14,000 feet, 20,000 feet, 20,000 feet, 14,000 feet]\n",
      "0.0060     1  participation\n",
      "[participation]\n",
      "0.0060     1  the international community\n",
      "[the international community]\n",
      "0.0060     1  the ukrainian ministry of interior\n",
      "[the ukrainian ministry of interior]\n",
      "0.0060     1  this demonstration\n",
      "[this demonstration]\n",
      "0.0059     1  one important difference\n",
      "[one important difference]\n",
      "0.0059     1  68 filed patents\n",
      "[68 filed patents]\n",
      "0.0059     1  the process\n",
      "[the process]\n",
      "0.0059     1  30min\n",
      "[30min]\n",
      "0.0059     4  155 knots\n",
      "[155 knots, 160 knots, 250 knots, 160 knots]\n",
      "0.0059     2  mississippi\n",
      "[mississippi, mississippi]\n",
      "0.0059     1  an expanded array\n",
      "[an expanded array]\n",
      "0.0059     6  two minute\n",
      "[two minute, two minute, 30 minute, 30 minute, only five minutes, only five minutes]\n",
      "0.0059     4  a lot\n",
      "[a lot, a lot, a lot, a lot]\n",
      "0.0059     2  the 21st century\n",
      "[the 21st century, the 21st century]\n",
      "0.0058     1  value\n",
      "[value]\n",
      "0.0058     1  eurotec\n",
      "[eurotec]\n",
      "0.0058     1  bay\n",
      "[bay]\n",
      "0.0058     3  a majority\n",
      "[a majority, a majority, the majority]\n",
      "0.0058     3  its endurance\n",
      "[its endurance, an endurance, an endurance]\n",
      "0.0058     2  a competition\n",
      "[a competition, that competition]\n",
      "0.0058     2  tenders\n",
      "[tenders, tenders]\n",
      "0.0058     1  opportunties\n",
      "[opportunties]\n",
      "0.0058     1  the initiatives\n",
      "[the initiatives]\n",
      "0.0058     1  persistence\n",
      "[persistence]\n",
      "0.0058     1  redundancy\n",
      "[redundancy]\n",
      "0.0058     1  a trusted and valued partner\n",
      "[a trusted and valued partner]\n",
      "0.0058     1  the company.a leader\n",
      "[the company.a leader]\n",
      "0.0057     1  play\n",
      "[play]\n",
      "0.0057     1  destroyers\n",
      "[destroyers]\n",
      "0.0057     5  every day\n",
      "[every day, all day, every day, just 40 days, just 40 days]\n",
      "0.0057     1  highly dangerous engagements\n",
      "[highly dangerous engagements]\n",
      "0.0057     1  an extra 12 passengers\n",
      "[an extra 12 passengers]\n",
      "0.0057     2  february\n",
      "[february, february]\n",
      "0.0057     1  the excellent behavior\n",
      "[the excellent behavior]\n",
      "0.0056     2  the need\n",
      "[the need, the needs]\n",
      "0.0056     1  the return\n",
      "[the return]\n",
      "0.0056     1  a newly awarded contract\n",
      "[a newly awarded contract]\n",
      "0.0056     1  the challenge\n",
      "[the challenge]\n",
      "0.0056     1  the uas committee\n",
      "[the uas committee]\n",
      "0.0056     1  a rapidly growing field\n",
      "[a rapidly growing field]\n",
      "0.0056     1  a central location\n",
      "[a central location]\n",
      "0.0056     2  the truth\n",
      "[the truth, the truth]\n",
      "0.0056     1  a shoot\n",
      "[a shoot]\n",
      "0.0056     1  the hip\n",
      "[the hip]\n",
      "0.0055     1  the actual flying\n",
      "[the actual flying]\n",
      "0.0055     2  track\n",
      "[track, track]\n",
      "0.0055     1  decade.airbus\n",
      "[decade.airbus]\n",
      "0.0055     1  problem.airbus\n",
      "[problem.airbus]\n",
      "0.0055     2  marignane\n",
      "[marignane, marignane]\n",
      "0.0055     1  the programme s achievements\n",
      "[the programme s achievements]\n",
      "0.0055     1  contested and highly agile battlefields\n",
      "[contested and highly agile battlefields]\n",
      "0.0055     1  selects\n",
      "[selects]\n",
      "0.0054     2  as little as 21 months\n",
      "[as little as 21 months, as little as 21 months]\n",
      "0.0054     2  november\n",
      "[november, november 2019]\n",
      "0.0054     2  the 4 axis autopilot\n",
      "[the 4 axis autopilot, a 4 axis autopilot]\n",
      "0.0054     4  the region\n",
      "[the region, the region, the region, the region]\n",
      "0.0054     1  two stages\n",
      "[two stages]\n",
      "0.0054     1  the bill\n",
      "[the bill]\n",
      "0.0054     1  h225\n",
      "[h225]\n",
      "0.0054     2  any enhancements\n",
      "[any enhancements, any enhancements]\n",
      "0.0053     1  the curvature\n",
      "[the curvature]\n",
      "0.0053     1  their success\n",
      "[their success]\n",
      "0.0053     1  the highly modified helicopteres\n",
      "[the highly modified helicopteres]\n",
      "0.0053     1  one station\n",
      "[one station]\n",
      "0.0053     2  our objective\n",
      "[our objective, our objective]\n",
      "0.0053     1  release\n",
      "[release]\n",
      "0.0052     1  the forum\n",
      "[the forum]\n",
      "0.0052     1  our approach\n",
      "[our approach]\n",
      "0.0052     2  georgia\n",
      "[georgia, georgia]\n",
      "0.0052     1  all the essential work\n",
      "[all the essential work]\n",
      "0.0052     1  a simplified path\n",
      "[a simplified path]\n",
      "0.0052     1  the helicopteres\n",
      "[the helicopteres]\n",
      "0.0052     2  29 regulations\n",
      "[29 regulations, those two regulations]\n",
      "0.0052     3  a pair\n",
      "[a pair, a pair, a pair]\n",
      "0.0052     1  12 to 15 additional uh 72as\n",
      "[12 to 15 additional uh 72as]\n",
      "0.0052     1  the heliexpo conference\n",
      "[the heliexpo conference]\n",
      "0.0052     2  as little as 30 minutes\n",
      "[as little as 30 minutes, as little as 30 minutes]\n",
      "0.0051     1  the x4\n",
      "[the x4]\n",
      "0.0051     1  its plate\n",
      "[its plate]\n",
      "0.0051     2  the payload\n",
      "[the payload, the payload]\n",
      "0.0051     1  its ready portability\n",
      "[its ready portability]\n",
      "0.0051     1  istar\n",
      "[istar]\n",
      "0.0051     2  a shortage\n",
      "[a shortage, a shortage]\n",
      "0.0051     1  a more formal process\n",
      "[a more formal process]\n",
      "0.0051     1  the vessel\n",
      "[the vessel]\n",
      "0.0051     1  the 30min exercise\n",
      "[the 30min exercise]\n",
      "0.0051     6  as little as 40 days\n",
      "[as little as 40 days, as little as 40 days, as little as 40 days, as little as 40 days, as little as 40 days, as little as 40 days]\n",
      "0.0050     1  the iceberg\n",
      "[the iceberg]\n",
      "0.0050     1  these cycles\n",
      "[these cycles]\n",
      "0.0050     1  the association\n",
      "[the association]\n",
      "0.0050     2  july\n",
      "[july, july]\n",
      "0.0050     2  amgh\n",
      "[amgh, amgh]\n",
      "0.0050     1  the several hundred people\n",
      "[the several hundred people]\n",
      "0.0049     1  its factory\n",
      "[its factory]\n",
      "0.0049     1  others\n",
      "[others]\n",
      "0.0049     1  hand\n",
      "[hand]\n",
      "0.0049     1  the 20,500 pound 525 features\n",
      "[the 20,500 pound 525 features]\n",
      "0.0049     1  defects\n",
      "[defects]\n",
      "0.0049     1  keeping\n",
      "[keeping]\n",
      "0.0049     1  date\n",
      "[date]\n",
      "0.0048     1  the show\n",
      "[the show]\n",
      "0.0048     3  any problems\n",
      "[any problems, no problems, any problems]\n",
      "0.0048     2  1,300shp 970kw\n",
      "[1,300shp 970kw, 1,300shp 970kw]\n",
      "0.0048     1  as many as 40,600 mechanics\n",
      "[as many as 40,600 mechanics]\n",
      "0.0048     1  the situation\n",
      "[the situation]\n",
      "0.0048     1  the use\n",
      "[the use]\n",
      "0.0048     3  an area\n",
      "[an area, an area, the area]\n",
      "0.0048     5  460nm\n",
      "[460nm, 560 nm, 560 nm, at least 400 nm, at least 400 nm]\n",
      "0.0047     1  several hundred\n",
      "[several hundred]\n",
      "0.0047     1  the hil\n",
      "[the hil]\n",
      "0.0047     1  these hotlines\n",
      "[these hotlines]\n",
      "0.0047     2  that deal\n",
      "[that deal, that deal]\n",
      "0.0047     1  the lakota\n",
      "[the lakota]\n",
      "0.0046     2  a price\n",
      "[a price, the price]\n",
      "0.0046     1  the uas\n",
      "[the uas]\n",
      "0.0046     4  the behaviour\n",
      "[the behaviour, the behaviour, the behaviour, the behaviour]\n",
      "0.0046     1  the signatures\n",
      "[the signatures]\n",
      "0.0046     3  no people\n",
      "[no people, two people, around 18,000 people]\n",
      "0.0046     3  the modifications\n",
      "[the modifications, such a modification, such a modification]\n",
      "0.0046     2  the mcas\n",
      "[the mcas, the mcas]\n",
      "0.0045     1  a drawer\n",
      "[a drawer]\n",
      "0.0045     1  the cabri\n",
      "[the cabri]\n",
      "0.0045     4  the ability\n",
      "[the ability, the ability, the ability, the ability]\n",
      "0.0045     1  around 700 kg 1,500 lb\n",
      "[around 700 kg 1,500 lb]\n",
      "0.0045     1  the type\n",
      "[the type]\n",
      "0.0045     1  an error\n",
      "[an error]\n",
      "0.0045     3  early 2011\n",
      "[early 2011, early 2020, early 2020]\n",
      "0.0044     2  this radius\n",
      "[this radius, this radius]\n",
      "0.0044     1  the breadth\n",
      "[the breadth]\n",
      "0.0044     2  the button\n",
      "[the button, the button]\n",
      "0.0044     2  its venues\n",
      "[its venues, s venue]\n",
      "0.0043     1  as little as 24 weeks\n",
      "[as little as 24 weeks]\n",
      "0.0043     1  the fal\n",
      "[the fal]\n",
      "0.0043     1  this expertise\n",
      "[this expertise]\n",
      "0.0043     1  the state\n",
      "[the state]\n",
      "0.0043     1  the uav\n",
      "[the uav]\n",
      "0.0043     1  the horizon\n",
      "[the horizon]\n",
      "0.0043     1  a specialist\n",
      "[a specialist]\n",
      "0.0042     1  the rewrite\n",
      "[the rewrite]\n",
      "0.0042     2  the arranos\n",
      "[the arranos, the arranos]\n",
      "0.0042     1  the willingness\n",
      "[the willingness]\n",
      "0.0042     1  its intent\n",
      "[its intent]\n",
      "0.0042     1  some locations\n",
      "[some locations]\n",
      "0.0042     1  a heritage\n",
      "[a heritage]\n",
      "0.0042     1  this milestone\n",
      "[this milestone]\n",
      "0.0042     1  the dauphin\n",
      "[the dauphin]\n",
      "0.0042     1  the mechanics\n",
      "[the mechanics]\n",
      "0.0042     1  the upgrade\n",
      "[the upgrade]\n",
      "0.0041     2  the lack\n",
      "[the lack, the lack]\n",
      "0.0041     1  about a half dozen\n",
      "[about a half dozen]\n",
      "0.0041     1  our philosophy\n",
      "[our philosophy]\n",
      "0.0041     1  a statement\n",
      "[a statement]\n",
      "0.0041     1  the hdx\n",
      "[the hdx]\n",
      "0.0041     1  around a decade.continued weakness\n",
      "[around a decade.continued weakness]\n",
      "0.0041     2  discussions\n",
      "[discussions, discussions]\n",
      "0.0041     2  1s\n",
      "[1s, and uh 1s]\n",
      "0.0041     1  obligations\n",
      "[obligations]\n",
      "0.0041     1  the basis\n",
      "[the basis]\n",
      "0.0041     1  only 60 operating\n",
      "[only 60 operating]\n",
      "0.0040     1  the career\n",
      "[the career]\n",
      "0.0040     2  its activity\n",
      "[its activity, the activity]\n",
      "0.0040     2  the chopper\n",
      "[the chopper, the chopper]\n",
      "0.0040     1  a mix\n",
      "[a mix]\n",
      "0.0040     1  the name\n",
      "[the name]\n",
      "0.0040     1  re interarm\n",
      "[re interarm]\n",
      "0.0040     2  the past\n",
      "[the past, the past]\n",
      "0.0040     1  the communities\n",
      "[the communities]\n",
      "0.0039     3  four or eight passengers\n",
      "[four or eight passengers, four or eight passengers, four or eight passengers]\n",
      "0.0039     2  this gap\n",
      "[this gap, this gap]\n",
      "0.0039     2  our expectations\n",
      "[our expectations, our expectations]\n",
      "0.0039     1  a consortium\n",
      "[a consortium]\n",
      "0.0039     3  as many as 20\n",
      "[as many as 20, as many as 20, as many as 40,600]\n",
      "0.0039     1  the exercise\n",
      "[the exercise]\n",
      "0.0039     1  my observations\n",
      "[my observations]\n",
      "0.0038     2  the marketplace\n",
      "[the marketplace, the marketplace]\n",
      "0.0038     1  an effort\n",
      "[an effort]\n",
      "0.0038     1  not only thanks\n",
      "[not only thanks]\n",
      "0.0038     1  the conformity\n",
      "[the conformity]\n",
      "0.0038     1  both parties\n",
      "[both parties]\n",
      "0.0038     1  even the ergonomic aspects\n",
      "[even the ergonomic aspects]\n",
      "0.0038     1  the skills\n",
      "[the skills]\n",
      "0.0038     1  the threat\n",
      "[the threat]\n",
      "0.0037     1  the university\n",
      "[the university]\n",
      "0.0037     3  the south\n",
      "[the south, the south, the south of]\n",
      "0.0037     1  the job\n",
      "[the job]\n",
      "0.0037     1  the fatal 2016 crash\n",
      "[the fatal 2016 crash]\n",
      "0.0037     1  a winner\n",
      "[a winner]\n",
      "0.0037     1  this week\n",
      "[this week]\n",
      "0.0036     2  the airframer\n",
      "[the airframer, the airframer]\n",
      "0.0036     1  the photo\n",
      "[the photo]\n",
      "0.0036     1  january 2016\n",
      "[january 2016]\n",
      "0.0036     1  a breakthrough\n",
      "[a breakthrough]\n",
      "0.0036     2  that schedule\n",
      "[that schedule, that schedule]\n",
      "0.0036     2  the racer\n",
      "[the racer, the racer]\n",
      "0.0035     1  the world\n",
      "[the world]\n",
      "0.0035     2  the h\n",
      "[the h, the h]\n",
      "0.0035     1  a multitude\n",
      "[a multitude]\n",
      "0.0035     1  another look\n",
      "[another look]\n",
      "0.0035     1  the outcomes\n",
      "[the outcomes]\n",
      "0.0034     1  the update\n",
      "[the update]\n",
      "0.0034     1  any difficulties\n",
      "[any difficulties]\n",
      "0.0034     2  the summer\n",
      "[the summer, the summer]\n",
      "0.0034     2  some cases\n",
      "[some cases, exactly the case]\n",
      "0.0034     1  the course\n",
      "[the course]\n",
      "0.0034     1  a barrel\n",
      "[a barrel]\n",
      "0.0034     2  its limits\n",
      "[its limits, the limits]\n",
      "0.0034     1  eight countries\n",
      "[eight countries]\n",
      "0.0034     1  the future\n",
      "[the future]\n",
      "0.0033     2  my responsibility\n",
      "[my responsibility, a responsibility]\n",
      "0.0033     1  the guarantee\n",
      "[the guarantee]\n",
      "0.0033     2  five employees\n",
      "[five employees, the employees]\n",
      "0.0033     1  the go\n",
      "[the go]\n",
      "0.0033     1  a potential\n",
      "[a potential]\n",
      "0.0033     1  five workstations\n",
      "[five workstations]\n",
      "0.0032     1  only crowd\n",
      "[only crowd]\n",
      "0.0031     1  an incident\n",
      "[an incident]\n",
      "0.0031     1  the eve\n",
      "[the eve]\n",
      "0.0031     1  the preparation\n",
      "[the preparation]\n",
      "0.0031     1  the creation\n",
      "[the creation]\n",
      "0.0031     1  the airlines\n",
      "[the airlines]\n",
      "0.0031     1  the indices\n",
      "[the indices]\n",
      "0.0030     1  the suitability\n",
      "[the suitability]\n",
      "0.0030     1  no impact\n",
      "[no impact]\n",
      "0.0030     1  october 2017\n",
      "[october 2017]\n",
      "0.0028     1  a gathering\n",
      "[a gathering]\n",
      "0.0028     1  the internet\n",
      "[the internet]\n",
      "0.0028     1  its purpose\n",
      "[its purpose]\n",
      "0.0027     1  the forefront\n",
      "[the forefront]\n",
      "0.0027     4  about 100 km\n",
      "[about 100 km, about 100 km, about 100 km, about 100 km]\n",
      "0.0027     2  the uh 72a\n",
      "[the uh 72a, the uh 72a]\n",
      "0.0027     1  the height\n",
      "[the height]\n",
      "0.0027     1  a race\n",
      "[a race]\n",
      "0.0026     1  the tooling\n",
      "[the tooling]\n",
      "0.0026     1  the population\n",
      "[the population]\n",
      "0.0026     1  a laser\n",
      "[a laser]\n",
      "0.0026     1  the airspace\n",
      "[the airspace]\n",
      "0.0026     1  any science\n",
      "[any science]\n",
      "0.0026     1  our frustration\n",
      "[our frustration]\n",
      "0.0026     1  its entry\n",
      "[its entry]\n",
      "0.0026     2  the middle\n",
      "[the middle, the middle of the 2020s]\n",
      "0.0026     1  the developers\n",
      "[the developers]\n",
      "0.0026     1  this winter\n",
      "[this winter]\n",
      "0.0025     1  half the sound\n",
      "[half the sound]\n",
      "0.0022     1  the 169 hils\n",
      "[the 169 hils]\n",
      "0.0022     3  37 c\n",
      "[37 c, 37 c, 37 c]\n",
      "0.0022     1  the bridge\n",
      "[the bridge]\n",
      "0.0022     2  5 september\n",
      "[5 september, 5 september]\n",
      "0.0022     1  oh 58s\n",
      "[oh 58s]\n",
      "0.0022     1  a trainer\n",
      "[a trainer]\n",
      "0.0022     1  any delusion\n",
      "[any delusion]\n",
      "0.0022     1  the results\n",
      "[the results]\n",
      "0.0019     1  everyone s minds\n",
      "[everyone s minds]\n",
      "0.0015     1  up to 400 h160ms\n",
      "[up to 400 h160ms]\n",
      "0.0000   460  it\n",
      "[it, we, it, we, it, it, they, you, he, we, it, it, we, he, we, we, he, it, we, it, we, it, it, they, you, he, we, it, it, we, he, we, we, he, it, it, it, it, them, it, they, it, it, he, it, itself, it, who, us, us, we, we, we, we, we, them, we, we, everything, we, we, we, anything, they, they, we, it, we, it, it, she, we, we, we, us, it, us, we, it, we, it, we, we, it, it, it, it, them, it, it, it, we, we, it, it, we, they, he, we, we, he, it, he, we, it, us, he, us, it, it, it, it, it, they, they, it, it, it, them, it, what, it, they, it, it, it, them, who, they, they, it, them, us, it, it, who, it, they, they, we, he, he, he, he, he, i, he, we, we, something, i, we, i, i, we, we, we, we, he, i, we, them, he, he, everyone, he, you, them, it, we, we, it, we, we, them, we, it, it, they, i, they, they, it, they, it, it, it, it, them, it, they, it, it, it, them, it, it, it, we, we, it, we, we, we, he, we, he, we, we, we, he, we, it, it, us, we, they, we, them, he, he, themselves, he, us, he, we, we, we, we, he, nothing, he, it, we, what, we, it, us, what, who, they, they, he, we, he, we, what, he, he, we, we, we, we, we, it, it, it, who, it, it, what, it, it, we, we, it, 2018, 15, 6, 30, 2020, 2018, 2027 2028, three, 1,500, 2018, 15, 6, 30, 2020, 2018, 2027 2028, three, 1,500, three, one, 10, 2020, one, four, eight, 12, five, 1,300, two, 155, 155, at least 400, 68, 2018, 2017, first, 2018, 2020, 10, three, 68, half, zero, 12, 4, s, five, four, 30, five, four, one, one, two, about 1,000, four to five, one, five, one, 2026, 169, three, up to 400, 37, 35, three, one, 10, 2020, four, eight, 12, five, three, 2020, firstly, 2018, 2019, 2020, two, 2017, 2020, 2015, two, 12, 460, 15, 37, 35, 37, 35, only 60, about four, at least 400, 150, zero, three, 1,000, 2018, us, the 2020s, 2005, two, two, 100, 2017, one, 1airbus, 2018, two, 700, 2019.airbus, 2018, 700, two, one, two, one, 145, five, 145, 145, two, 145, 4, eight, two, 15, two, 12, 15, about 12, 2020, 2022, 2006, ec135, six, 2014, notice.as, three, four, 2019, 2014, three, one, 10, 2020, four, eight, 12, five, 1,300, two, 160, 250, 2,500, 525, four, two, two, 16, 8 12, 160, 525, 2016, ac4, six, 43, 21, 85, five, 10, nine, two, 19, 1948, around 18,000, roughly 60, s, one, nearly 40, six, one, 27, 29, two, 107, 7,600, 2020, 2020, 2020, five, one, 19]\n"
     ]
    }
   ],
   "source": [
    "for p in doc._.phrases:\n",
    "    print(\"{:.4f} {:5d}  {}\".format(p.rank, p.count, p.text))\n",
    "    print(p.chunks)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[[0, 31, set()],\n",
       " [31, 55, set()],\n",
       " [55, 87, set()],\n",
       " [87, 107, set()],\n",
       " [107, 123, set()],\n",
       " [123, 146, set()],\n",
       " [146, 182, set()],\n",
       " [182, 199, set()],\n",
       " [199, 231, set()],\n",
       " [231, 245, set()],\n",
       " [245, 266, set()],\n",
       " [266, 291, set()],\n",
       " [291, 317, set()],\n",
       " [317, 346, set()],\n",
       " [346, 361, set()],\n",
       " [361, 395, set()],\n",
       " [395, 408, set()],\n",
       " [408, 425, set()],\n",
       " [425, 449, set()],\n",
       " [449, 472, set()],\n",
       " [472, 493, set()],\n",
       " [493, 516, set()],\n",
       " [516, 547, set()],\n",
       " [547, 562, set()],\n",
       " [562, 599, set()],\n",
       " [599, 647, set()],\n",
       " [647, 671, set()],\n",
       " [671, 703, set()],\n",
       " [703, 723, set()],\n",
       " [723, 739, set()],\n",
       " [739, 762, set()],\n",
       " [762, 798, set()],\n",
       " [798, 815, set()],\n",
       " [815, 847, set()],\n",
       " [847, 861, set()],\n",
       " [861, 882, set()],\n",
       " [882, 907, set()],\n",
       " [907, 933, set()],\n",
       " [933, 962, set()],\n",
       " [962, 977, set()],\n",
       " [977, 1011, set()],\n",
       " [1011, 1024, set()],\n",
       " [1024, 1041, set()],\n",
       " [1041, 1065, set()],\n",
       " [1065, 1088, set()],\n",
       " [1088, 1109, set()],\n",
       " [1109, 1132, set()],\n",
       " [1132, 1163, set()],\n",
       " [1163, 1178, set()],\n",
       " [1178, 1215, set()],\n",
       " [1215, 1248, set()],\n",
       " [1248, 1268, set()],\n",
       " [1268, 1294, set()],\n",
       " [1294, 1306, set()],\n",
       " [1306, 1339, set()],\n",
       " [1339, 1359, set()],\n",
       " [1359, 1377, set()],\n",
       " [1377, 1392, set()],\n",
       " [1392, 1423, set()],\n",
       " [1423, 1446, set()],\n",
       " [1446, 1500, set()],\n",
       " [1500, 1543, set()],\n",
       " [1543, 1574, set()],\n",
       " [1574, 1593, set()],\n",
       " [1593, 1661, set()],\n",
       " [1661, 1709, set()],\n",
       " [1709, 1731, set()],\n",
       " [1731, 1803, set()],\n",
       " [1803, 1814, set()],\n",
       " [1814, 1833, set()],\n",
       " [1833, 1854, set()],\n",
       " [1854, 1875, set()],\n",
       " [1875, 1888, set()],\n",
       " [1888, 1946, set()],\n",
       " [1946, 1968, set()],\n",
       " [1968, 1998, set()],\n",
       " [1998, 2015, set()],\n",
       " [2015, 2029, set()],\n",
       " [2029, 2042, set()],\n",
       " [2042, 2067, set()],\n",
       " [2067, 2100, set()],\n",
       " [2100, 2128, set()],\n",
       " [2128, 2149, set()],\n",
       " [2149, 2153, set()],\n",
       " [2153, 2166, set()],\n",
       " [2166, 2181, set()],\n",
       " [2181, 2190, set()],\n",
       " [2190, 2235, set()],\n",
       " [2235, 2266, set()],\n",
       " [2266, 2291, set()],\n",
       " [2291, 2302, set()],\n",
       " [2302, 2335, set()],\n",
       " [2335, 2354, set()],\n",
       " [2354, 2378, set()],\n",
       " [2378, 2398, set()],\n",
       " [2398, 2423, set()],\n",
       " [2423, 2456, set()],\n",
       " [2456, 2476, set()],\n",
       " [2476, 2495, set()],\n",
       " [2495, 2512, set()],\n",
       " [2512, 2520, set()],\n",
       " [2520, 2541, set()],\n",
       " [2541, 2552, set()],\n",
       " [2552, 2559, set()],\n",
       " [2559, 2569, set()],\n",
       " [2569, 2578, set()],\n",
       " [2578, 2585, set()],\n",
       " [2585, 2617, set()],\n",
       " [2617, 2633, set()],\n",
       " [2633, 2676, set()],\n",
       " [2676, 2697, set()],\n",
       " [2697, 2709, set()],\n",
       " [2709, 2766, set()],\n",
       " [2766, 2776, set()],\n",
       " [2776, 2786, set()],\n",
       " [2786, 2797, set()],\n",
       " [2797, 2810, set()],\n",
       " [2810, 2817, set()],\n",
       " [2817, 2828, set()],\n",
       " [2828, 2839, set()],\n",
       " [2839, 2853, set()],\n",
       " [2853, 2873, set()],\n",
       " [2873, 2895, set()],\n",
       " [2895, 2917, set()],\n",
       " [2917, 2932, set()],\n",
       " [2932, 2940, set()],\n",
       " [2940, 2967, set()],\n",
       " [2967, 2974, set()],\n",
       " [2974, 2985, set()],\n",
       " [2985, 3004, set()],\n",
       " [3004, 3019, set()],\n",
       " [3019, 3026, set()],\n",
       " [3026, 3049, set()],\n",
       " [3049, 3061, set()],\n",
       " [3061, 3075, set()],\n",
       " [3075, 3081, set()],\n",
       " [3081, 3089, set()],\n",
       " [3089, 3114, set()],\n",
       " [3114, 3122, set()],\n",
       " [3122, 3125, set()],\n",
       " [3125, 3131, set()],\n",
       " [3131, 3157, set()],\n",
       " [3157, 3171, set()],\n",
       " [3171, 3189, set()],\n",
       " [3189, 3196, set()],\n",
       " [3196, 3203, set()],\n",
       " [3203, 3226, set()],\n",
       " [3226, 3237, set()],\n",
       " [3237, 3262, set()],\n",
       " [3262, 3292, set()],\n",
       " [3292, 3323, set()],\n",
       " [3323, 3348, set()],\n",
       " [3348, 3365, set()],\n",
       " [3365, 3391, set()],\n",
       " [3391, 3427, set()],\n",
       " [3427, 3448, set()],\n",
       " [3448, 3476, set()],\n",
       " [3476, 3496, set()],\n",
       " [3496, 3523, set()],\n",
       " [3523, 3537, set()],\n",
       " [3537, 3547, set()],\n",
       " [3547, 3557, set()],\n",
       " [3557, 3575, set()],\n",
       " [3575, 3601, set()],\n",
       " [3601, 3613, set()],\n",
       " [3613, 3647, set()],\n",
       " [3647, 3667, set()],\n",
       " [3667, 3696, set()],\n",
       " [3696, 3727, set()],\n",
       " [3727, 3750, set()],\n",
       " [3750, 3801, set()],\n",
       " [3801, 3828, set()],\n",
       " [3828, 3841, set()],\n",
       " [3841, 3853, set()],\n",
       " [3853, 3865, set()],\n",
       " [3865, 3884, set()],\n",
       " [3884, 3894, set()],\n",
       " [3894, 3920, set()],\n",
       " [3920, 3946, set()],\n",
       " [3946, 3957, set()],\n",
       " [3957, 3965, set()],\n",
       " [3965, 3976, set()],\n",
       " [3976, 3994, set()],\n",
       " [3994, 4025, set()],\n",
       " [4025, 4057, set()],\n",
       " [4057, 4065, set()],\n",
       " [4065, 4089, set()],\n",
       " [4089, 4113, set()],\n",
       " [4113, 4116, set()],\n",
       " [4116, 4127, set()],\n",
       " [4127, 4135, set()],\n",
       " [4135, 4146, set()],\n",
       " [4146, 4156, set()],\n",
       " [4156, 4165, set()],\n",
       " [4165, 4178, set()],\n",
       " [4178, 4184, set()],\n",
       " [4184, 4208, set()],\n",
       " [4208, 4238, set()],\n",
       " [4238, 4277, set()],\n",
       " [4277, 4318, set()],\n",
       " [4318, 4352, set()],\n",
       " [4352, 4373, set()],\n",
       " [4373, 4401, set()],\n",
       " [4401, 4429, set()],\n",
       " [4429, 4476, set()],\n",
       " [4476, 4507, set()],\n",
       " [4507, 4532, set()],\n",
       " [4532, 4549, set()],\n",
       " [4549, 4575, set()],\n",
       " [4575, 4611, set()],\n",
       " [4611, 4632, set()],\n",
       " [4632, 4660, set()],\n",
       " [4660, 4680, set()],\n",
       " [4680, 4707, set()],\n",
       " [4707, 4721, set()],\n",
       " [4721, 4760, set()],\n",
       " [4760, 4785, set()],\n",
       " [4785, 4819, set()],\n",
       " [4819, 4845, set()],\n",
       " [4845, 4856, set()],\n",
       " [4856, 4896, set()],\n",
       " [4896, 4934, set()],\n",
       " [4934, 4951, set()],\n",
       " [4951, 4963, set()],\n",
       " [4963, 5000, set()],\n",
       " [5000, 5058, set()],\n",
       " [5058, 5106, set()],\n",
       " [5106, 5128, set()],\n",
       " [5128, 5149, set()],\n",
       " [5149, 5177, set()],\n",
       " [5177, 5229, set()],\n",
       " [5229, 5265, set()],\n",
       " [5265, 5283, set()],\n",
       " [5283, 5315, set()],\n",
       " [5315, 5331, set()],\n",
       " [5331, 5368, set()],\n",
       " [5368, 5402, set()],\n",
       " [5402, 5444, set()],\n",
       " [5444, 5484, set()],\n",
       " [5484, 5501, set()],\n",
       " [5501, 5514, set()],\n",
       " [5514, 5531, set()],\n",
       " [5531, 5569, set()],\n",
       " [5569, 5612, set()],\n",
       " [5612, 5646, set()],\n",
       " [5646, 5668, set()],\n",
       " [5668, 5680, set()],\n",
       " [5680, 5717, set()],\n",
       " [5717, 5740, set()],\n",
       " [5740, 5752, set()],\n",
       " [5752, 5806, set()],\n",
       " [5806, 5865, set()],\n",
       " [5865, 5885, set()],\n",
       " [5885, 5912, set()],\n",
       " [5912, 5942, set()],\n",
       " [5942, 5960, set()],\n",
       " [5960, 5972, set()],\n",
       " [5972, 5992, set()],\n",
       " [5992, 6009, set()],\n",
       " [6009, 6030, set()],\n",
       " [6030, 6051, set()],\n",
       " [6051, 6072, set()],\n",
       " [6072, 6083, set()],\n",
       " [6083, 6104, set()],\n",
       " [6104, 6117, set()],\n",
       " [6117, 6118, set()],\n",
       " [6118, 6137, set()],\n",
       " [6137, 6170, set()],\n",
       " [6170, 6190, set()],\n",
       " [6190, 6230, set()],\n",
       " [6230, 6242, set()],\n",
       " [6242, 6262, set()],\n",
       " [6262, 6271, set()],\n",
       " [6271, 6293, set()],\n",
       " [6293, 6340, set()],\n",
       " [6340, 6376, set()],\n",
       " [6376, 6380, set()],\n",
       " [6380, 6384, set()],\n",
       " [6384, 6416, set()],\n",
       " [6416, 6439, set()],\n",
       " [6439, 6475, set()],\n",
       " [6475, 6507, set()],\n",
       " [6507, 6546, set()],\n",
       " [6546, 6564, set()],\n",
       " [6564, 6598, set()],\n",
       " [6598, 6633, set()],\n",
       " [6633, 6644, set()],\n",
       " [6644, 6671, set()],\n",
       " [6671, 6708, set()],\n",
       " [6708, 6736, set()],\n",
       " [6736, 6755, set()],\n",
       " [6755, 6781, set()],\n",
       " [6781, 6826, set()],\n",
       " [6826, 6848, set()],\n",
       " [6848, 6867, set()],\n",
       " [6867, 6890, set()],\n",
       " [6890, 6910, set()],\n",
       " [6910, 6925, set()],\n",
       " [6925, 6948, set()],\n",
       " [6948, 6981, set()],\n",
       " [6981, 6992, set()],\n",
       " [6992, 6993, set()],\n",
       " [6993, 7008, set()],\n",
       " [7008, 7029, set()],\n",
       " [7029, 7068, set()],\n",
       " [7068, 7074, set()],\n",
       " [7074, 7079, set()],\n",
       " [7079, 7101, set()],\n",
       " [7101, 7121, set()],\n",
       " [7121, 7138, set()],\n",
       " [7138, 7179, set()],\n",
       " [7179, 7202, set()],\n",
       " [7202, 7228, set()],\n",
       " [7228, 7246, set()],\n",
       " [7246, 7272, set()],\n",
       " [7272, 7316, set()],\n",
       " [7316, 7362, set()],\n",
       " [7362, 7396, set()],\n",
       " [7396, 7413, set()],\n",
       " [7413, 7437, set()],\n",
       " [7437, 7473, set()],\n",
       " [7473, 7515, set()],\n",
       " [7515, 7578, set()],\n",
       " [7578, 7611, set()],\n",
       " [7611, 7653, set()],\n",
       " [7653, 7656, set()],\n",
       " [7656, 7704, set()],\n",
       " [7704, 7722, set()],\n",
       " [7722, 7748, set()],\n",
       " [7748, 7763, set()],\n",
       " [7763, 7796, set()],\n",
       " [7796, 7828, set()],\n",
       " [7828, 7846, set()],\n",
       " [7846, 7874, set()],\n",
       " [7874, 7899, set()],\n",
       " [7899, 7913, set()],\n",
       " [7913, 7935, set()],\n",
       " [7935, 7962, set()],\n",
       " [7962, 7974, set()],\n",
       " [7974, 8011, set()],\n",
       " [8011, 8017, set()],\n",
       " [8017, 8043, set()],\n",
       " [8043, 8069, set()],\n",
       " [8069, 8103, set()],\n",
       " [8103, 8126, set()],\n",
       " [8126, 8169, set()],\n",
       " [8169, 8201, set()],\n",
       " [8201, 8218, set()],\n",
       " [8218, 8245, set()],\n",
       " [8245, 8292, set()],\n",
       " [8292, 8309, set()],\n",
       " [8309, 8334, set()],\n",
       " [8334, 8379, set()],\n",
       " [8379, 8416, set()],\n",
       " [8416, 8428, set()],\n",
       " [8428, 8465, set()],\n",
       " [8465, 8471, set()],\n",
       " [8471, 8494, set()],\n",
       " [8494, 8517, set()],\n",
       " [8517, 8532, set()],\n",
       " [8532, 8562, set()],\n",
       " [8562, 8576, set()],\n",
       " [8576, 8601, set()],\n",
       " [8601, 8623, set()],\n",
       " [8623, 8644, set()],\n",
       " [8644, 8656, set()],\n",
       " [8656, 8682, set()],\n",
       " [8682, 8709, set()],\n",
       " [8709, 8730, set()],\n",
       " [8730, 8752, set()],\n",
       " [8752, 8766, set()],\n",
       " [8766, 8788, set()],\n",
       " [8788, 8811, set()],\n",
       " [8811, 8824, set()],\n",
       " [8824, 8849, set()],\n",
       " [8849, 8868, set()],\n",
       " [8868, 8887, set()],\n",
       " [8887, 8896, set()],\n",
       " [8896, 8908, set()],\n",
       " [8908, 8932, set()],\n",
       " [8932, 8963, set()],\n",
       " [8963, 8988, set()],\n",
       " [8988, 8998, set()],\n",
       " [8998, 9005, set()],\n",
       " [9005, 9013, set()],\n",
       " [9013, 9026, set()],\n",
       " [9026, 9037, set()],\n",
       " [9037, 9054, set()],\n",
       " [9054, 9092, set()],\n",
       " [9092, 9099, set()],\n",
       " [9099, 9118, set()],\n",
       " [9118, 9139, set()],\n",
       " [9139, 9156, set()],\n",
       " [9156, 9171, set()],\n",
       " [9171, 9186, set()],\n",
       " [9186, 9211, set()],\n",
       " [9211, 9235, set()],\n",
       " [9235, 9257, set()],\n",
       " [9257, 9305, set()],\n",
       " [9305, 9321, set()],\n",
       " [9321, 9324, set()],\n",
       " [9324, 9351, set()],\n",
       " [9351, 9363, set()],\n",
       " [9363, 9377, set()],\n",
       " [9377, 9399, set()],\n",
       " [9399, 9416, set()],\n",
       " [9416, 9431, set()],\n",
       " [9431, 9458, set()],\n",
       " [9458, 9472, set()],\n",
       " [9472, 9522, set()],\n",
       " [9522, 9545, set()],\n",
       " [9545, 9569, set()],\n",
       " [9569, 9594, set()],\n",
       " [9594, 9626, set()],\n",
       " [9626, 9656, set()],\n",
       " [9656, 9702, set()],\n",
       " [9702, 9755, set()],\n",
       " [9755, 9785, set()],\n",
       " [9785, 9803, set()],\n",
       " [9803, 9842, set()],\n",
       " [9842, 9852, set()],\n",
       " [9852, 9875, set()],\n",
       " [9875, 9896, set()],\n",
       " [9896, 9923, set()],\n",
       " [9923, 9949, set()],\n",
       " [9949, 9982, set()],\n",
       " [9982, 10001, set()],\n",
       " [10001, 10025, set()],\n",
       " [10025, 10046, set()],\n",
       " [10046, 10075, set()],\n",
       " [10075, 10101, set()],\n",
       " [10101, 10121, set()],\n",
       " [10121, 10154, set()],\n",
       " [10154, 10171, set()],\n",
       " [10171, 10176, set()],\n",
       " [10176, 10185, set()],\n",
       " [10185, 10205, set()],\n",
       " [10205, 10222, set()],\n",
       " [10222, 10244, set()],\n",
       " [10244, 10256, set()],\n",
       " [10256, 10277, set()],\n",
       " [10277, 10279, set()],\n",
       " [10279, 10287, set()],\n",
       " [10287, 10300, set()],\n",
       " [10300, 10328, set()],\n",
       " [10328, 10344, set()],\n",
       " [10344, 10367, set()],\n",
       " [10367, 10383, set()],\n",
       " [10383, 10430, set()],\n",
       " [10430, 10451, set()],\n",
       " [10451, 10484, set()],\n",
       " [10484, 10492, set()],\n",
       " [10492, 10514, set()],\n",
       " [10514, 10541, set()],\n",
       " [10541, 10557, set()],\n",
       " [10557, 10575, set()],\n",
       " [10575, 10601, set()],\n",
       " [10601, 10613, set()],\n",
       " [10613, 10647, set()],\n",
       " [10647, 10667, set()],\n",
       " [10667, 10685, set()],\n",
       " [10685, 10716, set()],\n",
       " [10716, 10739, set()],\n",
       " [10739, 10793, set()],\n",
       " [10793, 10836, set()],\n",
       " [10836, 10867, set()],\n",
       " [10867, 10886, set()],\n",
       " [10886, 10905, set()],\n",
       " [10905, 10930, set()],\n",
       " [10930, 10943, set()],\n",
       " [10943, 10956, set()],\n",
       " [10956, 10972, set()],\n",
       " [10972, 11003, set()],\n",
       " [11003, 11019, set()],\n",
       " [11019, 11027, set()],\n",
       " [11027, 11055, set()],\n",
       " [11055, 11088, set()],\n",
       " [11088, 11107, set()],\n",
       " [11107, 11130, set()],\n",
       " [11130, 11154, set()],\n",
       " [11154, 11168, set()],\n",
       " [11168, 11189, set()],\n",
       " [11189, 11223, set()],\n",
       " [11223, 11245, set()],\n",
       " [11245, 11294, set()],\n",
       " [11294, 11313, set()],\n",
       " [11313, 11327, set()],\n",
       " [11327, 11389, set()],\n",
       " [11389, 11406, set()],\n",
       " [11406, 11437, set()],\n",
       " [11437, 11471, set()],\n",
       " [11471, 11490, set()],\n",
       " [11490, 11531, set()],\n",
       " [11531, 11603, set()],\n",
       " [11603, 11634, set()],\n",
       " [11634, 11659, set()],\n",
       " [11659, 11712, set()],\n",
       " [11712, 11760, set()],\n",
       " [11760, 11802, set()],\n",
       " [11802, 11822, set()],\n",
       " [11822, 11858, set()],\n",
       " [11858, 11872, set()],\n",
       " [11872, 11883, set()],\n",
       " [11883, 11936, set()],\n",
       " [11936, 11954, set()],\n",
       " [11954, 11974, set()],\n",
       " [11974, 11976, set()],\n",
       " [11976, 12010, set()],\n",
       " [12010, 12034, set()],\n",
       " [12034, 12050, set()],\n",
       " [12050, 12111, set()],\n",
       " [12111, 12120, set()],\n",
       " [12120, 12165, set()],\n",
       " [12165, 12186, set()],\n",
       " [12186, 12193, set()],\n",
       " [12193, 12201, set()],\n",
       " [12201, 12220, set()],\n",
       " [12220, 12257, set()],\n",
       " [12257, 12284, set()],\n",
       " [12284, 12319, set()],\n",
       " [12319, 12339, set()],\n",
       " [12339, 12366, set()],\n",
       " [12366, 12376, set()],\n",
       " [12376, 12407, set()],\n",
       " [12407, 12417, set()],\n",
       " [12417, 12435, set()],\n",
       " [12435, 12464, set()],\n",
       " [12464, 12473, set()],\n",
       " [12473, 12483, set()],\n",
       " [12483, 12499, set()],\n",
       " [12499, 12515, set()],\n",
       " [12515, 12535, set()],\n",
       " [12535, 12554, set()],\n",
       " [12554, 12559, set()],\n",
       " [12559, 12568, set()],\n",
       " [12568, 12588, set()],\n",
       " [12588, 12600, set()],\n",
       " [12600, 12629, set()],\n",
       " [12629, 12636, set()],\n",
       " [12636, 12654, set()],\n",
       " [12654, 12689, set()],\n",
       " [12689, 12707, set()],\n",
       " [12707, 12753, set()],\n",
       " [12753, 12763, set()],\n",
       " [12763, 12789, set()],\n",
       " [12789, 12811, set()],\n",
       " [12811, 12832, set()],\n",
       " [12832, 12843, set()],\n",
       " [12843, 12851, set()],\n",
       " [12851, 12876, set()],\n",
       " [12876, 12908, set()],\n",
       " [12908, 12916, set()],\n",
       " [12916, 12919, set()],\n",
       " [12919, 12949, set()],\n",
       " [12949, 12972, set()],\n",
       " [12972, 13002, set()],\n",
       " [13002, 13023, set()],\n",
       " [13023, 13036, set()],\n",
       " [13036, 13064, set()],\n",
       " [13064, 13081, set()],\n",
       " [13081, 13099, set()],\n",
       " [13099, 13124, set()],\n",
       " [13124, 13159, set()],\n",
       " [13159, 13209, set()],\n",
       " [13209, 13236, set()],\n",
       " [13236, 13279, set()],\n",
       " [13279, 13303, set()],\n",
       " [13303, 13336, set()],\n",
       " [13336, 13358, set()],\n",
       " [13358, 13384, set()],\n",
       " [13384, 13420, set()],\n",
       " [13420, 13433, set()],\n",
       " [13433, 13460, set()],\n",
       " [13460, 13480, set()],\n",
       " [13480, 13503, set()],\n",
       " [13503, 13534, set()],\n",
       " [13534, 13559, set()],\n",
       " [13559, 13580, set()],\n",
       " [13580, 13622, set()],\n",
       " [13622, 13635, set()],\n",
       " [13635, 13690, set()],\n",
       " [13690, 13715, set()],\n",
       " [13715, 13752, set()],\n",
       " [13752, 13811, set()],\n",
       " [13811, 13846, set()],\n",
       " [13846, 13877, set()],\n",
       " [13877, 13904, set()],\n",
       " [13904, 13931, set()],\n",
       " [13931, 13955, set()],\n",
       " [13955, 13982, set()],\n",
       " [13982, 14003, set()],\n",
       " [14003, 14031, set()],\n",
       " [14031, 14068, set()],\n",
       " [14068, 14093, set()],\n",
       " [14093, 14118, set()],\n",
       " [14118, 14138, set()]]"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sent_bounds = [ [s.start, s.end, set([])] for s in doc.sents ]\n",
    "sent_bounds"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0 airbus helicopters flight control system 0.07754052398700356\n",
      "  5588 5593\n",
      "  5569 5588 5593 5612\n",
      "  8145 8150\n",
      "  8126 8145 8150 8169\n",
      "1 airbus helicopters automatic flight control system 0.07411850373726805\n",
      "  5625 5631\n",
      "  5612 5625 5631 5646\n",
      "2 airbus helicopters site 0.06674427211808748\n",
      "  13681 13684\n",
      "  13635 13681 13684 13690\n",
      "3 airbus h145 helicopters 0.06647065341740242\n",
      "  3378 3381\n",
      "  3365 3378 3381 3391\n",
      "  4290 4293\n",
      "  4277 4290 4293 4318\n",
      "  4562 4565\n",
      "  4549 4562 4565 4575\n",
      "4 airbus corporate helicopters 0.06589264506183609\n",
      "  1818 1821\n",
      "  1814 1818 1821 1833\n"
     ]
    }
   ],
   "source": [
    "limit_phrases = 5\n",
    "\n",
    "phrase_id = 0\n",
    "unit_vector = []\n",
    "\n",
    "for p in doc._.phrases:\n",
    "    print(phrase_id, p.text, p.rank)\n",
    "    \n",
    "    unit_vector.append(p.rank)\n",
    "    \n",
    "    for chunk in p.chunks:\n",
    "        print(\" \", chunk.start, chunk.end)\n",
    "        \n",
    "        for sent_start, sent_end, sent_vector in sent_bounds:\n",
    "            if chunk.start >= sent_start and chunk.start <= sent_end:\n",
    "                print(\" \", sent_start, chunk.start, chunk.end, sent_end)\n",
    "                sent_vector.add(phrase_id)\n",
    "                break\n",
    "\n",
    "    phrase_id += 1\n",
    "\n",
    "    if phrase_id == limit_phrases:\n",
    "        break\n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "continued weakness in the oil and gas market has left airbus helicopters uncertain of how quickly it will be able to ramp up output of its new h160 medium twin.\n",
      "in 2018 , the airframer took 15 orders for the 6t class helicopter , which was in line with its internal target.\n",
      "our objective was to sell more , but the difficult situation in oil and gas market impacted sales of the h160 last year , says head of the programme bernard fujarski.\n",
      "airbus helicopters currently plans to produce 30 h160s annually , from around two years after first delivery in 2020.\n",
      "however , fujarski says the lack of oil and gas sales could impact that schedule.\n",
      "if we are not able to sell into oil and gas it will probably change our plan regarding the industrial ramp up.\n",
      "last year 's bookings included an initial commitment from launch customer babcock , but the operator has yet to decide whether those aircraft will be configured for offshore transport or emergency medical services ems missions.\n",
      "apart from that deal , none the 2018 orders were from the oil and gas sector.\n",
      "but fujarski is confident that oil and gas sales will emerge as operators look to replace a large pool of ageing aircraft , including leonardo helicopters aw139s and sikorsky s 76s.\n",
      "we believe it will come , it is just a question of when.\n",
      "in the short term the manufacturer is focusing specific attention on the sector to catch sales in this market segment.\n",
      "in addition , there has been growing interest from ems operators , says fujarski , as they look to larger , more capable aircraft.\n",
      "to tell you the truth , when the programme was launched , the ems segment was not really identified as a target , he says.\n",
      "but in in fact the operators are looking for bigger and bigger machines with more medical equipment , and the size of the h160 cabin is an asset.\n",
      "we are working on tenders that were beyond our expectations a few years ago.\n",
      "in the longer term , output should be closer to the manufacturer 's upper rate of 50 per year once it begins to build the h160m military variant for launch customer france.\n",
      "however , production of these aircraft will not begin until 2027 2028.\n",
      "until then , it will have to live with the existing civilian market , says fujarski.\n",
      "that is why we are working hard to develop segments such as oil and gas that have been so calm up to now.\n",
      "certification of the h160 is on track for late this year , with a handful of tests still to be wrapped up.\n",
      "in addition , european approval of the safran helicopter engines arrano powerplants should be achieved in april , fujarksi says.\n",
      "so far , the manufacturer has accumulated slightly more than 1,100h across three prototypes , against a target of 1,500 by certification.\n",
      "meanwhile , discussions are already under way with safran regarding potential future performance increases for the platform , says fujarski , largely driven by the requirements of its military customer.\n",
      "currently rated at 1,300shp 970kw , the arrano has growth room , he says.\n",
      "there are a number of technological bricks available that may increase the power available , and we will assess with safran in the coming years when we will push the button and introduce such a modification.\n",
      "but he cautions that any enhancements to the airframe or engine will not arrive for around a decade.continued weakness in the oil and gas market has left airbus helicopters uncertain of how quickly it will be able to ramp up output of its new h160 medium twin.\n",
      "in 2018 , the airframer took 15 orders for the 6t class helicopter , which was in line with its internal target.\n",
      "our objective was to sell more , but the difficult situation in oil and gas market impacted sales of the h160 last year , says head of the programme bernard fujarski.\n",
      "airbus helicopters currently plans to produce 30 h160s annually , from around two years after first delivery in 2020.\n",
      "however , fujarski says the lack of oil and gas sales could impact that schedule.\n",
      "if we are not able to sell into oil and gas it will probably change our plan regarding the industrial ramp up.\n",
      "last year 's bookings included an initial commitment from launch customer babcock , but the operator has yet to decide whether those aircraft will be configured for offshore transport or emergency medical services ems missions.\n",
      "apart from that deal , none the 2018 orders were from the oil and gas sector.\n",
      "but fujarski is confident that oil and gas sales will emerge as operators look to replace a large pool of ageing aircraft , including leonardo helicopters aw139s and sikorsky s 76s.\n",
      "we believe it will come , it is just a question of when.\n",
      "in the short term the manufacturer is focusing specific attention on the sector to catch sales in this market segment.\n",
      "in addition , there has been growing interest from ems operators , says fujarski , as they look to larger , more capable aircraft.\n",
      "to tell you the truth , when the programme was launched , the ems segment was not really identified as a target , he says.\n",
      "but in in fact the operators are looking for bigger and bigger machines with more medical equipment , and the size of the h160 cabin is an asset.\n",
      "we are working on tenders that were beyond our expectations a few years ago.\n",
      "in the longer term , output should be closer to the manufacturer 's upper rate of 50 per year once it begins to build the h160m military variant for launch customer france.\n",
      "however , production of these aircraft will not begin until 2027 2028.\n",
      "until then , it will have to live with the existing civilian market , says fujarski.\n",
      "that is why we are working hard to develop segments such as oil and gas that have been so calm up to now.\n",
      "certification of the h160 is on track for late this year , with a handful of tests still to be wrapped up.\n",
      "in addition , european approval of the safran helicopter engines arrano powerplants should be achieved in april , fujarksi says.\n",
      "so far , the manufacturer has accumulated slightly more than 1,100h across three prototypes , against a target of 1,500 by certification.\n",
      "meanwhile , discussions are already under way with safran regarding potential future performance increases for the platform , says fujarski , largely driven by the requirements of its military customer.\n",
      "currently rated at 1,300shp 970kw , the arrano has growth room , he says.\n",
      "there are a number of technological bricks available that may increase the power available , and we will assess with safran in the coming years when we will push the button and introduce such a modification.\n",
      "but he cautions that any enhancements to the airframe or engine will not arrive for around a decade.airbus helicopters flew the first production model of its new h160 medium twin in december.\n",
      "it is joining the three prototypes already in flight test , which have accumulated more than 1,000 flying hours.\n",
      "it is one of 10 pre serial production aircraft that the company plans to assemble in the coming months as it refines its production process.\n",
      "the helicopter will be delivered to launch customer babcock in 2020.\n",
      "when the h160 achieves full rate production , airbus expects to assemble one in as little as 40 days on the helicopter s new , dedicated production line in marignane , france.\n",
      "babcock plans to take delivery of a fleet of the aircraft for worldwide operations over a five year period.\n",
      "airbus said it expects easa and faa certification for the h160 by the end of this year.\n",
      "this winter , an h160 was dispatched to finland for additional cold weather testing.\n",
      "the h160 features the helionix avionics suite , an all composite airframe , flat floor cabin , oversize cabin windows , and a baggage compartment that can hold 661 pounds.\n",
      "its cabin can be configured to seat four or eight passengers in executive vip layouts , or 12 in a utility configuration.\n",
      "the h160 also incorporates a variety of new technologies , among them blue edge active tracking main rotor blades in a five blade system with a double sweep design that reduces noise and contributes to a smoother ride , and 10 to 15 percent better fuel consumption than the h155 family it replaces.\n",
      "the aircraft is powered by a pair of safran arrano engines 1,300 shaft horsepower each that feature a two stage centrifugal compressor and variable inlet guided vanes , which cut fuel consumption in all phases of flight , particularly at cruise power.\n",
      "they help propel the h160 to its estimated maximum cruise speed of 155 knots and service ceiling of 20,000 feet and give it an anticipated range of 450 nautical miles.\n",
      "airbus helicopters also maintains that the arranos will have lower maintenance costs than other engines in their class.\n",
      "ralph setz , airbus helicopters marketing director for helicopter ems hems , thinks the h160 is particularly well suited for long distance hems missions because of its 155 knot cruise speed , low cabin vibration , robust cabin air conditioning , flat approach angle , easy loading and unloading , ample artificial and natural cabin lighting , and generous cabin volume that facilitates 360 degree patient access.\n",
      "the helicopter 's dual safran arrano engines are also designed for a two minute quick start and quick restarts , features that will expedite dispatches , while the h160 s standard maximum takeoff weight of 12,500 pounds will enable it to use a majority of hospital helipads.\n",
      "setz thinks the eventual market for hems configured h160s could be as many as 20 per year into the next decade.\n",
      "the quick change cabin is of particular appeal to oil and gas customers such as h160 launch customer babcock , which plans to use its helicopters in both passenger utility and ems roles , he said , adding that the h160 is a strong ifr machine and will have a range in full ems livery of at least 400 nm with reserves , 25 to 30 percent more than an h145.\n",
      "the h160 is also finding favor in the executive market.\n",
      "earlier this year , airbus corporate helicopters ach announced the sale of an ach160 to a european customer.\n",
      "the helicopter will be operated by switzerland s lionsair and feature a bespoke vip interior designed by the huslig collective.\n",
      "ach managing director frederic lemos said , it is particularly pleasing to see the new ach160 continuing to win orders.\n",
      "across all airbus helicopters models , ach reported 68 sales in 2018.\n",
      "launched in 2017 , ach provides an end to end ownership experience backed by hcare first , a premium support services program aimed at the special needs of low hour operators looking for on demand availability.the first h160 to roll off the brand new airbus helicopters assembly line in marignane made its first flight on 14th december.\n",
      "the first h160 to roll off the new airbus helicopters assembly line in marignane made its first flight on 14th december.\n",
      "the aircraft performed a flight demonstration on 17th december in front of the h160 team in an end of the year celebration of the programme s achievements in 2018.\n",
      "airbus says that the helicopter is scheduled to be delivered to launch customer babcock in 2020.\n",
      "previously , the company had announced plans to build 10 pre production aircraft.\n",
      "airbus helicopters announced the h160 fuselage tail boom join up in july.\n",
      "the aircraft s livery features the signatures of the several hundred people working towards the platform s certification at the end of next year.\n",
      "airbus indicates that this first production aircraft will join the three prototypes , which have already accumulated over a 1,000 flight hours , in the final steps of the flight test campaign.\n",
      "the final phase of testing will be aimed at confirming that the modifications that have been introduced into the production configuration have no impact on the helicopter s\n",
      "handling qualities.there is as much innovation in the way the h160 is made as there is in the helicopter itself.\n",
      "ian parker reports.\n",
      "airbus helicopters calls its h160 model the first of the next generation.\n",
      "this applies to the way the aircraft is made as well as its design.\n",
      "there are 68 filed patents on the type.\n",
      "these include the blue edge main rotor blades , claimed to make half the sound with zero flapping noise , a new canted fenestron for greater useful load and a flat attitude , and new safran arrano engines giving fuel savings and lower emissions.\n",
      "the manufacturer also claims no vibration even at max cruise 155kt , the best volume per seat with a 12 passenger interior , and high capacity new generation air conditioning.\n",
      "the h160 is likely to be highly competitive in the medium market and has already had considerable success with both civil and military customers.\n",
      "operations are expected to start next year with customer babcock.\n",
      "airbus digital helicopter avionics suite , helionix , as well as the 4 axis autopilot , further contribute to the h160 s safety by significantly reducing pilot workload , says the company.\n",
      "along with the integrated automatic functions , helionix allows the pilot to concentrate on the mission at hand.\n",
      "the h160 has also been designed to facilitate ease of maintenance , giving it accessibility similar to that of a light twin helicopter.\n",
      "the aircraft s optimised accessibility has been praised by operators who have flown the h160 , says the manufacturer.\n",
      "all composite construction the all composite aircraft is made with advanced production techniques which not only benefit the manufacturer , but also the customer.\n",
      "the h160 has been designed to be assembled from major component assemblies mcas just like airbus commercial aircraft , begins laurence b jat , head of the h160 final assembly line fal.\n",
      "the mcas are modular and allow us to have a plug and play concept in the final assembly line.\n",
      "this gives a minimal number of tasks to be performed in the line which has five work stations.\n",
      "four are dedicated to pure assembly and the last one is for testing and final inspection.\n",
      "this lets us assemble an h160 quickly.\n",
      "the line will produce 30 aircraft a year of all the different civil versions oil and gas , ems , vip\n",
      "and we re already working on a public services version.\n",
      "our industrial strategy includes site specialisation.\n",
      "we are capitalising on our capabilities at different sites.\n",
      "the mcas have gone together without any problems.\n",
      "the maturity is already very high.\n",
      "we have used our 3d design capabilities on this aircraft and we have simulated a lot of things including the design of the tooling and also the way we assemble them.\n",
      "we used a lot of methodology coming from the automotive sector such as ring methodology.\n",
      "the fal has five workstations and the aircraft are moved from one to the next automatically and quickly airbus helicopters defines this as assembly of the first series aircraft by rigorously following the optimal assembly sequence , with the main parties present.\n",
      "the mcas are made in four assembly lines , one in spain , one in germany and two in france.\n",
      "this is in keeping with the airbus philosophy of site specialisation.\n",
      "the h160 s construction represents a new production method for airbus helicopters , with its fuselage manufactured at the company s facility in donauw rth in germany , tail booms in albacete , spain , and avionics and other dynamic components such as gearboxes and rotor blades at sites throughout france , including paris and marignane.\n",
      "final assembly of the helicopters takes place at marignane.\n",
      "we checked through virtual simulation that everything fitted together.\n",
      "even the ergonomic aspects were assessed in this early phase.\n",
      "thanks to this ring methodology , we have industrialised our aircraft better.\n",
      "we use specific and dynamic animation.\n",
      "we are looking for anything that can slow down production.\n",
      "the blue edge blades were first tested on an h155.\n",
      "today , the blue edge blades on the h160 benefit from mature manufacturing.\n",
      "they are mainly carbon fibre and characterised by their complex shape , but they are not difficult to manufacture.\n",
      "our approach means the aircraft is in final assembly for just 40 days which is very short , states b jat.\n",
      "also , the customer will be able to select the mission of the aircraft as little as 24 weeks before delivery.\n",
      "we have also reduced the number of components to about 1,000 and for similar aircraft\n",
      "it is four to five times more.\n",
      "the mcas are assembled equipped and tested and the conformity is checked so that there are no problems on the assembly line or the flight line.\n",
      "defects will have been caught earlier.\n",
      "we have a lot of automation in our final assembly.\n",
      "it takes only five minutes to move an aircraft from one station to the next with no people.\n",
      "in the past it took more than one hour with five employees for safety.\n",
      "our philosophy is faster , safer.\n",
      "airbus is using robots to install major assemblies in one hour , such as the cockpit , rear fuselage and avionics bay.\n",
      "the company is also improving the working conditions for the employees.\n",
      "one of the outcomes is that absenteeism is very low , she adds.\n",
      "we do not have accidents.\n",
      "all this goes towards reducing production time.\n",
      "all work instructions are in digital mode and we collect data to drive our improvement plan from any problems encountered on the shop floor.\n",
      "this is very important for continual improvement.\n",
      "the h licopt\n",
      "re interarm es l ger hil\n",
      "military h160m will be produced in exactly the same way and we want to keep as much similarity as possible with the civil aircraft.\n",
      "the airframe will be reinforced in some locations to carry specific military equipment.\n",
      "hil deliveries have been brought forward to 2026 , but this will not cause us any difficulties.\n",
      "it is good news for us.\n",
      "we will be ready for it.\n",
      "the 169 hils will replace the dauphin , gazelle , dauphin , fennec and alouette iii in the three french armed forces.\n",
      "up to 400 h160ms are expected to be sold worldwide.\n",
      "we are still in the development phase of the hil with the french armed forces to better specify their requirements , b jat says.\n",
      "but to be ready one year earlier for production is no problem.airbus helicopters has successfully completed the cold weather testing for certification of the h160 helicopter in northern finland.\n",
      "the first serial production h160 was deployed to rovaniemi in lapland last month , where the test team benefited from a period of exceptionally low temperatures down to 37 c 35\n",
      "f. the main objective of this test campaign was to confirm the behaviour of the h160 in extremely cold conditions with its serial configuration.\n",
      "the h160 has already performed a cold weather test campaign in canada with a prototype aircraft.\n",
      "operations took place from the base of babcock scandinavian airambulance , which flies airbus h145 helicopters for emergency medical services ems customers in the region.\n",
      "the campaign included over 20 hours of flight tests as well as a lengthy series of ground tests and a 13 hour flight from airbus helicopters marignane base in southern france to the test site.\n",
      "babcock is the global launch customer for the h160 and will be the first operator to receive the new model.\n",
      "the h160 is suitable for ems operations because it features a wide opening sliding door , roll on stretcher capability and 360 degree access to the patient.\n",
      "airbus helicopters head of h160 program , bernard fujarski , said , this was a highly productive test program.\n",
      "the colder the temperatures in which we can successfully fly and operate , the colder the temperatures in which our customers can carry out their work.\n",
      "we have been very happy with the freezing conditions in lapland and overall with\n",
      "the behaviour of h160.the first serial production airbus helicopters h160\n",
      "medium twin made its first flight on december 14.\n",
      "it will join the three prototypes , which have already accumulated more than 1,000 flight test hours.\n",
      "it is one of 10 pre serial production aircraft that the company plans to assemble in the coming months as it refines its production process.\n",
      "the helicopter will be delivered to launch customer babcock in 2020.\n",
      "when the helicopter achieves full rate production , airbus expects to assemble an h160 in as little as 40 days on the helicopter s new , dedicated production line in marignane , france.\n",
      "babcock plans to take delivery of a fleet of the aircraft for worldwide operations over a five year period.\n",
      "earlier this year airbus said it expected easa and faa certification for the h160 by the end of this year with customer deliveries slated to begin next year.\n",
      "the h160 features the helionix avionics suite , an all composite airframe , flat floor cabin , oversize cabin windows , and a baggage compartment that can hold 661 pounds.\n",
      "its cabin can be configured to seat four or eight passengers in executive vip layouts , or 12 in a utility configuration.\n",
      "the h160 also incorporates a variety of new technologies , among them blue edge active tracking main rotor blades in a five blade system with a double sweep design that reduces noise and contributes to a smoother ride , and 10 to 15 percent better fuel consumption than the h155 family\n",
      "it replaces.the first serial production h160 performed a flight demonstration at the airbus helicopters base in marignane yesterday 17 december after a seven year development process.\n",
      "three previous prototype aircraft have already accumulated more than 1,000 flight hours.\n",
      "the h160 will be delivered to launch customer babcock in 2020.\n",
      "the aircraft took its first test flight on the 14th december.\n",
      "babcock was first revealed as the h160 launch customer back in march at helitech 2018 in las vegas.\n",
      "the precise number of aircraft ordered was not revealed.\n",
      "babcock will be using the aircraft for ems and other critical service missions , firstly in europe , then deployed across babcock s bases worldwide.\n",
      "a second prototype of the h160 finished a year long demo tour displaying capabilities for a variety of markets and end users across the us.\n",
      "the h160 was first expected to start deliveries in 2018.\n",
      "but this was pushed back to 2019.\n",
      "now babcock will be receiving its first h160 in 2020.\n",
      "in early 2011 , the h160 was debuted as a concept aircraft under the name eurocopter x4.\n",
      "the helicopter was initially meant to be introduced in two stages , with an interim aircraft introduced in 2017 and an advanced version in 2020 which would feature further modifications.\n",
      "the h160 is a medium class helicopter and is considered as a direct competitor to leonardo s aw139 which has become the go to helicopter for offshore oil and gas operations.\n",
      "the first aw139 was delivered in 2015.\n",
      "the h160 seats two pilots and up to an extra 12 passengers , and has a maximum take of weight of 5,670kg.\n",
      "the aircraft cruises at 155kts and a maximum range of 460nm and promises 15 less fuel burn that current generation helicopter engines.\n",
      "h160 timeline 2011\n",
      "the h160 is first revealed as the x4 concept march 2015\n",
      "the x4 was renamed the h160 june 2015\n",
      "the first h160 prototype takes its first test flight december 2015\n",
      "the second prototype performed its initial ground run january 2016\n",
      "the second prototype took its maiden flight october 2017\n",
      "third h160 prototype revealed march 2018 babcock announced as launch customer march 2018\n",
      "airbus sells the first ach160 ,\n",
      "the airbus corporate versionairbus helicopters has successfully completed its certification program of cold weather testing of its latest h160 helicopter in northern finland.\n",
      "the company deployed the first serial aircraft to rovaniemi in lapland in february where the test team benefited from a period of exceptionally low temperatures down to 37 c 35\n",
      "f. the main objective of this second campaign was to confirm the excellent behavior of the h160 in extremely cold conditions with its serial configuration as the first test campaign in canada was performed with a prototype aircraft.\n",
      "operations took place from the base of babcock scandinavian airambulance , which flies airbus h145 helicopters for emergency medical services ems customers in the region , including finland s finnhems and the regional government of aland , also in finland.\n",
      "the campaign included over 20 hours of flight tests as well as a lengthy series of ground tests and a 13 hour ferry flight from airbus helicopters marignane base to the test site.\n",
      "babcock is the global launch customer for the h160 and will be the first operator to receive the new model.\n",
      "its new fleet of h160s is destined for ems and other critical service missions starting in europe and to be deployed progressively across babcock s bases worldwide.\n",
      "the h160 is an ideal aircraft for ems operations with its wide opening sliding door , roll on stretcher capability and 360 degree access to the patient.\n",
      "it features exceptionally low sound levels in the cabin as well as low vibration levels , providing a beneficial environment for high intensity care of patients over long distances.airbus helicopters has successfully completed the cold weather testing for certification of the h160 helicopter in northern finland.\n",
      "the first serial production h160 was deployed to rovaniemi in lapland last month , where the test team benefited from a period of exceptionally low temperatures down to 37 c 35\n",
      "f. the main objective of this test campaign was to confirm the behaviour of the h160 in extremely cold conditions with its serial configuration.\n",
      "the h160 has already performed a cold weather test campaign in canada with a prototype aircraft.\n",
      "operations took place from the base of babcock scandinavian airambulance , which flies airbus h145 helicopters for emergency medical services ems customers in the region.\n",
      "the campaign included over 20 hours of flight tests as well as a lengthy series of ground tests and a 13 hour flight from airbus helicopters marignane base in southern france to the test site.\n",
      "babcock is the global launch customer for the h160 and will be the first operator to receive the new model.\n",
      "the h160 is suitable for ems operations because it features a wide opening sliding door , roll on stretcher capability and 360 degree access to the patient.\n",
      "airbus helicopters head of h160 program , bernard fujarski , said , this was a highly productive test program.\n",
      "the colder the temperatures in which we can successfully fly and operate , the colder the temperatures in which our customers can carry out their work.\n",
      "we have been very happy with the freezing conditions in lapland and overall with\n",
      "the behaviour of h160.airbus helicopters is hoping to make significant inroads into the niche market for medium twin ems helicopters with its new h160 , said ralph setz , the company s marketing director for helicopter ems hems.\n",
      "airbus booth c305 is displaying a full size h160 mockup configured with an ems cabin at this year s heli expo convention in atlanta.\n",
      "setz acknowledges that the current market for medium sized hems twins is relatively skinny at present in the america , with only 60 operating currently , and about four times that number worldwide.\n",
      "nevertheless , setz is optimistic when it comes to growing the segment and making inroads against the current leader in it , the leonardo aw139.\n",
      "we see this segment growing by up to 30 percent.\n",
      "as more hospitals consolidate , the need to transport patients longer distances will grow and helicopters flying those missions will need to carry more equipment and personnel , and they will need more space and comfort , he said.\n",
      "setz thinks goals for its dispatch reliability 95 percent at maturity and reduced direct operating costs when compared to medium twins , with maintenance man hours like smaller light twins , will make a compelling market case.\n",
      "we are confident we can achieve this , setz said of the dispatch and cost targets.\n",
      "airbus has yet to publicly announce a price for the h160.\n",
      "setz pointed out that the h160 is a strong ifr machine and will have a range in full ems livery of at least 400 nm with reserves , 25 to 30 percent more than an h145.\n",
      "the h160 is particularly well suited for long distance hems missions because of its 150 knot cruise speed , low cabin vibration , robust cabin air conditioning , flat approach angle , easy loading and unloading , ample artificial and natural cabin lighting , and generous cabin volume that facilitates 360 degree patient access , he said.\n",
      "the helicopter 's dual safran arrano engines are also designed for a two minute quick start and quick restarts , features that will expedite dispatches , while the h160 s standard maximum takeoff weight of 12,500 pounds will enable it to use a majority of hospital helipads.\n",
      "setz thinks the eventual market for hems configured h160s could be as many as 20 per year into the next decade.\n",
      "dynamic components continue to undergo maturity testing on the company s helicopter zero dynamic integration test bed , he said.\n",
      "pilot training for the h160 also will be eased as the aircraft incorporates the familiar helionix avionics suite on its other aircraft and simulators are being readied.\n",
      "the equipment list includes a multifunctional adapter plate , side loading stretcher system , medical swiveling seats , jump seat , multifunctional cabinet with integrated service and control panel and lighting devices , medical stowage racks , strap down device with a drawer for 3x3 liter bottles , and optional incubator.\n",
      "airbus began talking to hems customers and suppliers early in the h160 s development to fashion flexible outfitting solutions that include uniform attach points and mechanical electrical interfaces and quick change cabins , setz said.\n",
      "some hems cabin concepts will be able to be changed out in as little as 30 minutes.\n",
      "as with the h135 and the h145 , airbus is offering h160 customers the option of integrating ems cabins into the initial production build by bringing suppliers to its production line.\n",
      "customers can also opt to have the equipment added post production at a completion center.\n",
      "the quick change cabin is of particular appeal to oil and gas customers such as h160 launch customer babcock , which plans to use its helicopters in both passenger utility and ems roles , stez said.\n",
      "airbus remains on target to certify the h160 in late 2019 , with the three prototype aircraft already accumulating 1,000 flight hours and the first pre production aircraft taking flight late last year.\n",
      "that aircraft was recently dispatched to finland for additional cold weather testing.airbus helicopters recently started autonomous flight trials of a vsr700 optionally piloted vehicle opv demonstrator , paving the way for a first flight of the actual vsr700 prototype in 2018.\n",
      "a light military rotary wing tactical unmanned aerial vehicle , the vsr700 is being developed jointly by airbus helicopters and helicopteres guimbal , the original manufacturer of the civil certified cabri g2 helicopter from which the vsr700 is derived.\n",
      "we are pleased to have achieved this milestone only eight months after starting work on the opv\n",
      "said regis antomarchi , head of the vsr700 programme at airbus helicopters.\n",
      "the opv is able to autonomously take off , hover and perform stabilised flight and manoeuvres.\n",
      "it will help us mature the technologies associated to autonomous flight and confirm the suitability of the cabri g2 platform for the vsr700 , ahead of the first flight of the prototype next year , he added.\n",
      "passing this first step of autonomous flights with a safety pilot onboard allows us to validate the integration of airbus helicopters flight control system with the aerial vehicle and its specific engine installation said bruno guimbal , president ceo of helicopteres guimbal.\n",
      "this phase of flight trials with a safety pilot will focus on refining airbus helicopters automatic flight control system aboard the opv , eventually leading to fully autonomous flights without a safety pilot.\n",
      "the vsr 700 flight control system is a fully digital , multi channel system with a very high level of redundancy.\n",
      "it takes advantage of airbus helicopters unique expertise in digital autopilots.\n",
      "sea trials of a manned cabri g2 have also recently taken place with the support of a french navy air defence frigate in order to assess the flight envelope of the vsr700 platform for shipborne operations.\n",
      "the vsr700 will be capable of carrying a wide array of mission equipment with a maximum capacity of up to 250 kg.\n",
      "depending on the mission , its endurance could exceed 10 hours.\n",
      "developed to meet navies requirements for a shipborne rotary wing tactical unmanned aerial vehicle and complement to manned helicopters , it could also be used in land based military operations to carry out istar intelligence surveillance target acquisition and reconnaissance missions , thanks to the vsr700 s optical sensors and maritime land radar.\n",
      "the vsr700 will have a much lower operating cost than a helicopter not only thanks to its well proven civil base vehicle and low consumption diesel engine , but also because it requires fewer resources and less manpower to operate and maintain it.the direction g n rale de l armement dga is exploring rotary wing unmanned aircraft systems.\n",
      "to do so , it has awarded a contract to a consortium comprising airbus helicopters and the naval group.\n",
      "according to airbus , the contract covers de risking studies of a tactical helicopter drone , then construction of a demonstrator that can operate aboard warships.\n",
      "the demonstration project , airbus continued , would lead to trials of the drone launch system , mission system and airborne vehicle , conducted from a french navy vessel.\n",
      "this program forms part of the preparation of the sdam navy airborne drone system , airbus said.\n",
      "its entry into service is expected to occur in the 2020s.\n",
      "airbus said the study would help select the principal technologies for the sdam and help identify associated technical risks.\n",
      "naval group has been working on naval integration of aerial drones since 2005 , airbus said.\n",
      "since naval group is a european naval defense firm , airbus said it feels the two companies complement each other.\n",
      "airbus brings to the project its vsr700 a drone based on the cabri g2 , designed specifically for military application.\n",
      "the drone can fly for more than 10 hours autonomously with a payload capacity of up to some 330 pounds.\n",
      "the manufacturer is aiming for a maiden flight this year.\n",
      "both parties are responsible for the industrial project management , and they are to act as the program design authority.\n",
      "they are to solicit wider input from french industry , as well.\n",
      "h\n",
      "licopt res guimbal , safran , thales and onera are principal subcontractors on this contract.aircraft vsr700 landing the vsr700\n",
      "is airbus tactical unmanned aerial system uas designed to fulfil the demanding requirements of global navies and those of armies in the 21st century s contested and highly agile battlefields and seas.\n",
      "the vsr700 offers the best endurance of any vertical takeoff landing unmanned aerial vehicle vuav in its class today.\n",
      "its performance enables it to carry a full tactical load of major , high capability sensors , while its compact size provides multiple options for its assets i.e. naval helicopter plus several vsr700s stationed on board frigates and destroyers.\n",
      "missions intelligence , surveillance targeting and reconnaissance istar vsr700 istar at sea\n",
      ", a ship is limited in its capacity to observe the region around it by the height of its ship\n",
      "mounted sensors and the curvature of the earth.\n",
      "while it can use its helicopter and , if necessary , shore based assets , these may not always be available.\n",
      "the airbus vsr700 is designed to be an integral asset which will extend the ship s horizon , using sensors equal in quality to those carried by naval helicopters , with the ability to target contacts if needed or survey them for extended periods of time.\n",
      "in its istar role , the vsr700 complements a ship or naval force by extending the ship s reach and freeing up the ship s helicopter for the core missions where it is best employed.\n",
      "anti submarine warfare asw\n",
      "vsr700 anti submarine warfare\n",
      "the vsr700 is capable of carrying and positioning an anti submarine warfare asw barrier to complement a ship s asw activity or that of a helicopter with manned unmanned teaming mumt.\n",
      "sonobuoy data can be relayed through the uas to ensure an unbroken data stream , no matter what the helicopter is doing.\n",
      "the vsr700 can also conduct radar and electro optical identification of periscopes using high performance , long range sensors , a formidable deterrent when coupled with its low noise signature and high degree of persistence.\n",
      "anti surface warfare asuw vsr700 anti surface anti surface warfare asuw is conducted in very hostile environments where a potential threat has to be distinguished from neutral or friendly sea traffic.\n",
      "hostile intent may have to be established through identification of the vessel and its activity , and a laser is often used to designate the threat as a target special demands for which the vsr700 is particularly suited.\n",
      "in asuw , full capability sensors keep the air vehicle outside of the target s defensive range.\n",
      "operating in an electronic warfare environment , the unmanned vsr700 ensures that the correct target is selected by using onboard high performance sensors preserving the security of naval personnel during highly dangerous engagements.\n",
      "maritime security vsr700 maritime security in maritime security missions , the ability to scan a large maritime zone , track the activity within it , identify contacts of interest and remain discreet is essential.\n",
      "navies operate independently and are often remote from shore support.\n",
      "they need to have their key capabilities integral to the ship , removing the need to rely on shore based aircraft , drones or other assets.\n",
      "the vsr700 brings to ships a major advantage in missions such as anti terrorism , anti pollution , counter smuggling , fishery protection , monitoring and assisting refugees or illegal immigrants , coastal watch and more.\n",
      "the vsr700 can carry high performance , long range sensors which enable it to remain undetected while monitoring events and to provide high quality data to authorities.\n",
      "search and rescue sar vsr700 search and rescue search and rescue sar is often a race against time.\n",
      "the ability to quickly and thoroughly search for survivors or the ships and aircraft that may contain survivors after an incident is a key requirement.\n",
      "with its extended endurance up to 10 hours with a sar payload almost twice that of a helicopter , its high quality sensors to find survivors in harsh conditions and its ready portability , the vsr700 is an ideal complement to traditional sar assets.\n",
      "the system s flexibility easily enables the use of multiple platforms to give greater or more detailed coverage in less time.airbus helicopters\n",
      "vsr700 demonstrator has completed a fully unmanned autonomous flight at istres air base in the south of france.\n",
      "its purpose was to establish compliance with the demanding regulatory and safety systems necessary for the future of unmanned aviation in france.\n",
      "during the 30min exercise the demonstrator successfully executed a variety of flight patterns before landing in an autonomous mode.\n",
      "the aircraft was piloted and monitored from a ground station located at the base.\n",
      "the vsr700 demonstrator has been flying autonomously since may 2017 with a safety pilot on board as part of its development programme.\n",
      "the diesel engine installed to meet naval and military requirements has been fine tuned during this period and the automatic flight control systems have been developed to meet the new regulatory standards.\n",
      "a prototype vsr700 will be rolled out later this year.\n",
      "photo\n",
      "the airbus helicopters vsr700 is based on the guimbal cabri g2 two seat helicopter.\n",
      "airbusthe airbus helicopters vsr700 in an unmanned reconnaissance helicopter currently being developed by airbus helicopters formerly eurocopter and naval group.\n",
      "developed upon request from the french navy , it is based upon the light helicopter cabri g2 , developed and produced by the french helicopter manufacturer h licopt res guimbal which is based at aix en provence aerodrome.\n",
      "with a maximum take off mass\n",
      "around 700 kg 1,500 lb\n",
      ", it would be a much larger aircraft than the austrian camcopter s 100 that the french navy has tried before.\n",
      "citation needed trials are scheduled to be held in 2017 aboard one of the mistral class amphibious assault ships.\n",
      "the drone is designed to eventually deploy from these ships , as well as from frigates.\n",
      "1airbus is developing a rotary wing unmanned aerial system for naval application , under a newly awarded contract signed with the french armament directorate direction g n rale de l armement dga , the naval group and airbus helicopters consortium.\n",
      "the contract covers risk reduction studies ahead of construction of a future , tactical helicopter drone demonstrator to be tested aboard warships.\n",
      "the demonstration project will lead to trials of the drone launch system , mission system and airborne vehicle , conducted from a french navy vessel.\n",
      "the platform proposed for this demonstration based is the vsr700 drone system being developed by airbus helicopters.\n",
      "this 700 kg drone , derived from the cabri g2 light civilian helicopter , is a certifiable , autonomous flight systems designed for naval operations.\n",
      "in june 2017 airbus began autonomous flights tests using an unmanned cabri g2 prototype , validating the integration of the flight control systems and the vehicle s new engine system , paving the way for the first flight of the vsr700 in 2018.\n",
      "the project is part of the navy airborne drone system sdam , to be employed aboard the future intermediate size frigates ftis expected to enter service by the middle of the 2020s , as well as other naval ships operated by the french navy ships.\n",
      "the new drone will be used as a technology demonstrator to assess the technical risks associated with the sdam program and the vessel drone integration and select the principal technologies for the program.\n",
      "the vsr700 drone is proposed for the french future maritime autonomous aerial system known as sdam.\n",
      "naval group and airbus helicopters will jointly be responsible for the industrial project management and shall coordinate wider input from french industry sector.\n",
      "the two companies will jointly act as the programme design authority and shall have h licopt res guimbal , thales syst mes a roport s , safran e s and onera as their principal subcontractors.\n",
      "the vsr700 can exceed 10 flight hours of operational autonomy with a payload capacity of up to 150 kg , offering performance levels that have , until now , been the reserve of aircraft of a significantly higher category and size.\n",
      "the system will benefit from all the know how of airbus helicopters in terms of automated flight control the guarantee of a unique automatic deck landing capacity in rough seas , autonomous navigation system , secure data link , the integration of sensors such as radar and optronic systems , the management of complex mission systems and the certification of military aircraft.\n",
      "this expertise , which builds on a heritage going back more than 70 years , allows airbus helicopters to design a drone system that precisely meets the needs of the french navy.\n",
      "the aerial vehicle has low maintenance requirements and strong synergies with the ships existing logistical footprint , thus limiting support and operations costs , while its compact size is compatible with the simultaneous use of an on board helicopter across different surface\n",
      "ships.the airbus helicopters\n",
      "vsr700 demonstrator a light military tactical unmanned aerial system uav developed by airbus helicopters sas formerly eurocopter of marignane , france and paris based naval group took off for a fully unmanned autonomous flight at the istres le tub military air base northwest of marseille , france.\n",
      "the flight established compliance with demanding regulatory and safety systems necessary for future unmanned flight in france.\n",
      "during the exercise the vsr700 demonstrator performed a 30 minute flight , successfully executing a variety of flight patterns before landing in an autonomous mode.\n",
      "the uav was piloted and monitored from the ground station located at the base.\n",
      "the airbus helicopters has been operating the vsr700 which stands for 700 kilogram vertivision surveillance rotorcraft autonomously with a safety pilot onboard since may 2017 as part of its accelerated development program.\n",
      "the vsr700 is light , single engine , diesel powered helicopter based on the civil cabri g2 developed by h licopt res guimbal , based in aix en provence , france.\n",
      "the new vsr700 solution is tailored to the new medium sized frigate requirements of the french navy.\n",
      "the payload of around 250 kg is intended for optical reconnaissance instruments and radar and the diesel engine has been fine tuned to military and naval requirements.\n",
      "additionally , the automatic flight control systems have been developed to meet the new regulatory standards for this new type of critical operational capability.\n",
      "the uav has an endurance of around 8 hours at 100 nautical miles.\n",
      "the system will initially offer extended surveillance capabilities for navies , allowing them to preserve manned helicopter flights for critical missions.\n",
      "the earth s curvature means a frigate can survey an area of about 100 km , says r gis antomarchi , who heads the vsr700 program.\n",
      "with the vsr700 , this radius is multiplied many times over.\n",
      "antomarchi adds ship borne uavs are already available , but they are either lightweight , and therefore not powerful enough to carry the necessary instruments , or they are relatively large , making operation more complex.\n",
      "the vsr700 fills this gap.\n",
      "users will benefit from the system s low operational cost thanks to its proven civil certified cabri g2 platform and its low consumption diesel engine.\n",
      "the ideal size , it is designed to complement manned helicopters , without replacing them , on ships ranging from small corvettes to major warships.\n",
      "the prototype will be rolled out in 2019.airbus helicopters recently started autonomous flight trials of the optionally piloted vsr700 demonstrator in anticipation of the first flight of the actual vsr700 prototype in 2018.\n",
      "the vsr700 is based on the helicopteres guimbal cabri g2 and is intended to be a rotary wing tactical unmanned aerial vehicle.\n",
      "passing this first step of autonomous flights with a safety pilot onboard allows us to validate the integration of airbus helicopters flight control system with the aerial vehicle and its specific engine installation , said helicopteres guimbal president and ceo bruno guimbal.\n",
      "this phase of flight trials with a safety pilot will focus on refining the automatic flight control system aboard the vsr700 , eventually leading to autonomous flights without a safety pilot.\n",
      "the vehicle is reportedly able to autonomously take off , hover and perform stabilized flight maneuvers.\n",
      "the vsr will be fitted with a diesel engine and have a maximum endurance in excess of 10 hours , depending on mission and equipment package.\n",
      "meanwhile , sea trials of a manned cabri g2 have recently taken place with the support of a french navy air defense frigate to assess its flight envelope for shipborne operations.what is going on beyond the horizon it s a crucial question for any ship captain.\n",
      "in the past , sailors would climb to the crow s nest for a better view.\n",
      "modern technology means today s captains can send unmanned aerial vehicles uavs into the air to transmit images and data back to the bridge.\n",
      "it is a rapidly growing field and airbus aims to enter with the 700 kg vertivision surveillance rotorcraft vsr700 which is being developed by airbus helicopter division in marignane , france in cooperation with helicopt res guimbal , a specialist in aerospace and aeronautics.\n",
      "the earth s curvature means a frigate can survey an area of about 100 km , says r gis antomarchi , who heads the programme to develop the rotary wing uav and bring it to market.\n",
      "with the vsr700 , this radius is multiplied many times over.\n",
      "antomarchi adds ship borne uavs are already available , but they are either lightweight , and therefore not powerful enough to carry the necessary instruments , or they are relatively large , making operation more complex.\n",
      "the vsr700 fills this gap.\n",
      "the vsr700 is based on the civil cabri g2 developed by guimbal , a light , single engine , diesel powered helicopter.\n",
      "with a fuel consumption of 15 kg per hour , the uav is expected to stay airborne for up to 10 hours.\n",
      "the payload of around 250 kg is intended for optical reconnaissance instruments and radar.\n",
      "in cooperation with french shipbuilder naval group , airbus is also offering a solution for the new medium sized frigates tailored specifically to the requirements of the french navy.\n",
      "we are moving quickly to stay ahead in the marketplace , says antomarchi.\n",
      "hence a pilot operated flight control system was added to the vsr700 equipment for its first test flights as an optionally piloted vehicle opv.\n",
      "the initial tests are taking place with the safety pilot on board before unmanned flights begin next year , he says.\n",
      "safety first airbus test pilot , olivier gensse , was on board the vsr700 s first flight in may 2017.\n",
      "gensse knows the cabri g2 , the basis for the vsr700.\n",
      "before he joined airbus he worked for helicopt res guimbal , where he piloted the cabri on its maiden flight and accompanied its certification process.\n",
      "as chief test pilot on helicopters in marignane , gensse not only flies the vsr700 , he also spends time rigorously testing the h160 helicopter prototypes.\n",
      "during the vsr700 s maiden flight i had two tasks ensure safety and test the new technologies , he says.\n",
      "we are testing the systems in flight at an early stage , which means we can t rule out possible problems.\n",
      "if something does go wrong i can take over the controls on board.\n",
      "that was exactly the case during the flight , when gensse intentionally pushed the automatic flight control system to its limits.\n",
      "gensse and his team are testing the vsr700 at aix les milles aerodrome , where helicopt res guimbal has its production facilities.\n",
      "the process is in line with the usual standards , says gensse.\n",
      "together with the team we go through the safety procedures , then i activate the safety system so that i can intervene if necessary.\n",
      "on the maiden flight we then started the uav flight control system and the aircraft took off autonomously.\n",
      "we also tested hovering using the autonomous flight control system and carried out various manoeuvres in stable flight.\n",
      "and we tested the limits of the technology.\n",
      "this time , landing was still my responsibility as the pilot.\n",
      "for a test pilot like gensse , there is very little difference between flying the vsr700 and conducting a traditional helicopter test flight.\n",
      "we follow the standard procedures and even the tests on the autonomous flight control system are similar to the test flights with our highly developed helicopter autopilot , he says.\n",
      "one important difference may be that there are usually two people in the cockpit in a helicopter a pilot and a flight test engineer.\n",
      "there is only room for one in the vsr700.\n",
      "that s why i record my observations\n",
      "and then we run through them afterwards.\n",
      "that said , the team he relies on has to work perfectly.\n",
      "the pilot is simply the visible tip of the iceberg.\n",
      "he s on the photo and everyone says how amazing , he performed the maiden flight.\n",
      "you must remember , though , all the essential work that has to be done before that by the developers , the prototype builders , the mechanics , the team at the ground station and so on.\n",
      "the actual flying of the helicopter is\n",
      "the easiest part.airbus helicopters has completed the first unmanned , autonomous flight of its vsr700 demonstrator tactical vehicle.\n",
      "the highly modified helicopteres guimbal cabri g2 took off from the military airbase in istres in the south of france.\n",
      "the vsr700 s 30 minute flight consisted of a variety of flight patterns before landing autonomously.\n",
      "the helicopter was piloted and monitored from the ground station located at the base.\n",
      "the helicopter had been flying autonomously since may 2017 with a safety pilot aboard.\n",
      "the aircraft is fitted with a diesel engine to meet military requirements and has an automatic flight control system designed to meet regulatory standards.\n",
      "the vsr700 is a light military tactical unmanned aerial system able to carry multiple payloads , with an endurance of around eight hours.\n",
      "the system will initially offer extended surveillance capabilities for navies , allowing them to preserve manned helicopter flights for critical missions.\n",
      "the vsr700 is designed to land on navy ships as small as corvettes , and successful sea trials have already taken place.airbus helicopters has unveiled a new version of its h 145 twin engine light utility helicopter at the ongoing heli expo 2019 in atlanta , america.\n",
      "the latest upgrade to the chopper involves incorporating five bladed rotor to the h 145.\n",
      "maximum take off\n",
      "weight is raised to 3,800 kg and a useful load now equivalent to the aircraft s empty weight , the company said in a statement monday.\n",
      "the new bearingless main rotor design will help ease maintenance operations.\n",
      "the reduced rotor diameter will allow the h145 to operate in confined areas.\n",
      "the chopper has a wireless airborne communication system wacs , allowing seamless and secure transmission of data generated by the helicopter.\n",
      "easa certification is planned for early 2020 , with first deliveries to follow later that year.\n",
      "the upgrade will be offered to current h 145 customers as a retrofit option.\n",
      "powered by two safran arriel 2e engines , the h 145 is equipped with full authority digital engine control fadec and the helionix digital avionics suite.\n",
      "it includes a 4 axis autopilot , increasing safety and reducing pilot workload.\n",
      "the helicopter also has a low acoustic footprint , the company stated further.blr aerospace booth hashtaghere announced the continued success of its airbus h125 fastfin tail rotor enhancement and stability system for increasing operating performance and safety margins , while creating an impressive return on investment roi for operators.\n",
      "blr released key roi analysis information at heli expo 2019 , highlighting customers quantifiable investment returns in a variety of operating environments.\n",
      "we are receiving very positive data and feedback about the dramatic improvements fastfin operators are experiencing , said blr aerospace president mike carpenter.\n",
      "satisfied airbus customers continue to demand the fastfin , recognizing the increased performance , safety and stability benefits of the system to their missions.\n",
      "we remain committed to continually innovating and improving the system by working with airbus to making it more available for our new and returning customers through aftermarket and factory installation options.\n",
      "flying today on more than 40 aircraft in eight countries , blr aerospace s h125 fastfin system uses advanced airflow management to increase the anti torque system s effectiveness.\n",
      "data proves customers experience an up to 18 percent increase in useful load and a 10 percent increase in available right pedal margin at high power settings , which translates into a 100 percent payback on the system investment in as little as 21 months.\n",
      "we are very satisfied with the increased performance and additional payload in hot and high conditions , said bart brainerd of firehawk helicopters , blr aerospace s launch customer for the fastfin system for the h125 and operator of multiple helicopters for public service , charter , movie , and construction missions.\n",
      "we lift more , and our pilots report increased stability and decreased workload , allowing them to focus on efficiency and safety while performing the job , brainerd added.\n",
      "we ve placed more fastfin system orders and look forward to increasing our capability across the fleet.\n",
      "comprised of an advanced tailboom aerodynamic cowling atac , a tailboom strake , and vortex generators , the fastfin system increases useful load and improves aircraft stability , especially in hot high conditions without modifying the vertical fin.\n",
      "the system also increases safety by reducing pilot workload.\n",
      "pilots experience easier control in precision hover hold operations and a significant improvement in yaw axis control when hovering in challenging crosswinds.\n",
      "airbus continues to promote the fastfin system with factory installations and through a world wide network of airbus customer centers.\n",
      "to date , airbus has installed two systems at its factory in marignane france , illustrating customer recognition of the system s performance benefits and value.\n",
      "the additional performances brought by the blr fastfin system benefits our h125 customers performing very demanding missions , said airbus helicopters vice president axel aloccio.\n",
      "the fastfin system is approved by the federal aviation administration faa , transport canada tc , the european aviation safety agency easa , and numerous other civil aviation authorities around the world.\n",
      "more than 1,000 of blr s performance enhancing fastfin systems have been installed on various light and medium helicopters\n",
      "worldwide.the us army intends to buy 15 more airbus uh 72a lakota utility helicopters and is considering an option to buy two more.\n",
      "the service indicated its intent to buy the aircraft in a sole source requirement notice posted online on 5 september.\n",
      "airbus helicopters says it has not received a request for proposal from the us army and does not know the specific configuration or intended use of the helicopters.\n",
      "at the heliexpo conference in march 2019 , the company said it expected orders for 12 to 15 additional uh 72as from the us army.\n",
      "the army fleet down at fort rucker , based on their student load , they are needing more aircraft.\n",
      "i think there are about 12 aircraft that the army is looking for at fort rucker , chris emerson , head of airbus helicopters north american region , said earlier this year.\n",
      "there are odd ones for the national guard , combat training center , national training center.\n",
      "they are already funded.\n",
      "they are already in the president s budget.\n",
      "with those prospective us army orders , lakota production could be extended from 2020 until 2022 , emerson said.\n",
      "the uh 72a is a militarised version of the airbus ec145 light twin engined utility helicopter.\n",
      "the helicopter is federal aviation administration instrument flight rules certificated and is manufactured at an airbus facility in columbus , mississippi.\n",
      "the us army uses uh 72as as utility and training helicopters.\n",
      "in 2006 , airbus won a competition to replace the service s light utility helicopter fleet , previously composed of bell\n",
      "oh 58s\n",
      "and uh 1s , with the lakota.\n",
      "the us naval test pilot school operates a handful of the helicopters.\n",
      "and airbus is competing against leonardo and bell to supply the us navy with its smaller light twin engined helicopter , the ec135 , as a trainer.\n",
      "the us navy is expected to pick a winner of that competition in november 2019.\n",
      "the royal thai army acquired six uh 72a lakota helicopters from airbus through the us foreign military sales fms programme in 2014.\n",
      "the company has said it hopes to close additional fms deals for the uh 72a.\n",
      "us army aviation did not immediately respond to questions about its sole source notice.as the industry gathers for this year s heli expo , three of the big four western helicopter oems are scheduled to bring new , long awaited civil models to market in 2019.\n",
      "each promises to be a game changer in its respective category with regard to speed , efficiencies , and capabilities.\n",
      "their success in the marketplace will in no small measure be at least partially determined by the willingness of offshore energy companies to continue to increase capital expenditures for exploration and production.\n",
      "these increases are relatively modest this year.\n",
      "they follow a period of severe retrenchment that started in 2014 and has left helicopter lessors and operators with significant overcapacity.\n",
      "in some cases , that has led to bankruptcy filings and attempts to diversify their business models to be less dependent on oil and gas revenues.\n",
      "airbus helicopters flew the first production model of its new h160 medium twin in december.\n",
      "it will join the three prototypes , which have already accumulated more than 1,000 flight test hours.\n",
      "it is one of 10 pre serial production aircraft that the company plans to assemble in the coming months as it refines its production process.\n",
      "the helicopter will be delivered to launch customer babcock in 2020.\n",
      "when the helicopter achieves full rate production , airbus expects to assemble an h160 in as little as 40 days on the helicopter s new , dedicated production line in marignane , france.\n",
      "babcock plans to take delivery of a fleet of the aircraft for worldwide operations over a five year period.\n",
      "airbus said it expects easa and faa certification for the h160 by the end of this year.\n",
      "the h160 features the helionix avionics suite , an all composite airframe , flat floor cabin , oversize cabin windows , and a baggage compartment that can hold 661 pounds.\n",
      "its cabin can be configured to seat four or eight passengers in executive vip layouts , or 12 in a utility configuration.\n",
      "the h160 also incorporates a variety of new technologies , among them blue edge active tracking main rotor blades in a five blade system with a double sweep design that reduces noise and contributes to a smoother ride , and 10 to 15 percent better fuel consumption than the h155 family it replaces.\n",
      "the aircraft is powered by a pair of safran arrano engines 1,300 shaft horsepower each that feature a two stage centrifugal compressor and variable inlet guided vanes , which cut fuel consumption in all phases of flight , particularly at cruise power.\n",
      "they help propel the h160 to its estimated maximum cruise speed of 160 knots and service ceiling of 20,000 feet and give it an anticipated range of 450 nautical miles.\n",
      "airbus helicopters also maintains that the arranos will have lower maintenance costs than other engines in their class.\n",
      "next year airbus is planning the first flight of its racer rapid and cost efficient rotorcraft compound helicopter.\n",
      "the racer uses elements of the h160 s fuselage mated to a conventional main rotor , a box wing , and twin pusher propellers.\n",
      "top speed is expected to be in the area of 250 knots.\n",
      "power comes from a pair of safran aneto turboshafts 2,500 shp each.\n",
      "the racer is expected to be 25 percent more fuel efficient than a conventional helicopter.\n",
      "last year , suppliers began fabricating key racer components , including the lateral drive shafts , the gearbox housing , wing cradle composite side panels , and primary tail structure.\n",
      "bell expects to certify its super medium 525 relentless twin by the end of 2019.\n",
      "four aircraft are currently in flight test.\n",
      "two are slated for additional cold weather testing in yellowknife nwt canada early this year , while a third will undergo snow testing in upstate new york.\n",
      "during cold weather testing last year , the aircraft was tested at temperatures down to 37 degrees f. over the summer , it flew hot weather testing in yuma , arizona at temperatures\n",
      "up to 120 degrees f as well as completed high altitude operations to density altitudes of 14,000 feet.\n",
      "the 20,500 pound 525 features fly by wire flight controls , garmin g5000h avionics , and two ge aviation ct7 2f1 engines.\n",
      "the cabin features 88 square feet of floor space and can be configured for 16 passengers utility seating and 8 12 executive vip.\n",
      "cruising speed is expected to be 160 knots and maximum range 560 nm.\n",
      "the 525 flight test program was interrupted for a year following the fatal 2016 crash of the first prototype aircraft.\n",
      "after the accident , bell incorporated a variety of design changes , including filtering of the biomechanical and sensor feedback by the control system to prevent amplification of vibrations in specific flight conditions.\n",
      "leonardo is aiming for faa certification of its aw609 civil tiltrotor this year and plans to fly test aircraft ac4 soon.\n",
      "program milestones last year included successful drop testing of the production landing gear , production engine certification testing on ac3 , continued fuselage and empennage fatigue testing , and installation of a new production main cabin door designed with an embedded rescue hoist for search and rescue operations.\n",
      "ac4 will fly with the new embedded hoist that will be fitted on aw609s kitted for sar operations.\n",
      "it will also have the new rockwell collins pro line fusion flight deck.\n",
      "the executive interior will feature six single executive seats and a small forward refreshment center.airbus helicopters logged orders for 43 aircraft at heli expo this week , 21 of which came from long time customer texas based air medical group holdings amgh for a mix of h125 singles and h135 light twins as part of that company s fleet modernization program.\n",
      "amgh currently operates a fleet of more than 306 helicopters , 85 of them airbus ships.\n",
      "the company also announced a number of orders for its new d3 variant of its h145 medium twin that features a new five blade main rotor system and fadec engine.\n",
      "newly signed up customers include dare county north carolina medflight , the ukrainian ministry of interior , advance flight of new zealand , the norwegian air ambulance services , and swiss air rega.\n",
      "altogether , it booked orders for 10 new h145s and nine d3 component retrofits for in service h145s.\n",
      "airbus also inked orders for a new ach160 from an undisclosed canadian customer , two new h175 super mediums from the chinese ministry of transport s rescue and salvage bureau , and an h225 acquisition from the japan coast guard.\n",
      "on the support side , airbus signed contracts covering the 19 helicopters in the uk s national police air service fleet.hai is coming into this year s heli expo celebrating its 70 year heritage with a continued focus on safety as its core mission and myriad issues on its plate from workforce shortages to ifr approvals in single engine helicopters , says matt zuccaro , president and ceo of the association.\n",
      "the association , founded in 1948 with a gathering of a handful of operators and a bell representative in burbank , california , commemorated its 70th anniversary on december 13.\n",
      "while the septuagenarian association has hosted conventions ever since , this year is marking a first for heli expo its initial appearance in atlanta.\n",
      "its venues have varied over the years , but as heli expo has grown , it has become limited in its options and more recently has rotated among about a little more than a handful of cities anaheim , orlando , las vegas , and dallas among the most frequent of locales.\n",
      "heli expo now requires about one million square feet that houses displays from the more than 700 annual exhibitors , nearby hotel rooms that can accommodate an annual attendance of around 18,000 people , and the ability to bring the roughly 60 helicopters into the show floor.\n",
      "this year s venue meets those requirements , as well as others , such as a central location for operators and a number nearby attractions , including neighboring college football hall of fame , the site of the opening members reception.\n",
      "zuccaro has been upbeat about prospects for this year s venue in the month s leading up to it.\n",
      "we are very encouraged by the numbers that we track compared to the other years and it looks like we have got a great response in terms of the indices we use to measure the show\n",
      "and so we are going to have a great crowd , he said.\n",
      "we re going to have a full floor of exhibitors.\n",
      "as always , he stressed , safety is the number one priority for the association and a focal point of heli expo , including the return of its rotor safety challenge that is designed to encourage participation in the nearly 40 safety sessions that will take place over the three day expo.\n",
      "those attending six sessions over the course of heli expo qualify for a rotor safety challenge certificate.\n",
      "the challenge comes in addition to safety committee meetings , workshops , and other events that will highlight safety.\n",
      "legislative agenda\n",
      "but while focus remains on safety , heli expo will focus on another mission of the association , zuccaro said making sure that operator members are not overburdened with legislative and regulatory initiatives.\n",
      "hai returns to heli expo after capping an intense lobbying campaign to combat user fees and secure a long range faa reauthorization bill.\n",
      "the bill that passed last fall marked the first five year faa reauthorization in decades.\n",
      "we are very proud of the fact that we worked with the other general aviation associations and we are able to prevent that user fees from coming into play , he said , we do n't really have any delusion that it 's gone away , but certainly , for the time being , it 's not going to happen.\n",
      "and that is a good thing for us.\n",
      "the five year bill had a multitude of measures , including a number affecting helicopter operators that zuccaro said will likely be addressed either through various sessions or at the annual meet the regulators session that will be held this year on march 7.\n",
      "one key regulatory initiative before the association is the possible rewrite of part 27 and 29 regulations governing helicopter certification.\n",
      "we think that is long overdue.\n",
      "they haven t been updated in decades.\n",
      "hai is pushing for the update to accommodate new technology and advancements that have taken place over time.\n",
      "we also would like to see an effort to unify those two regulations and break them down as appropriate by parameters or protocols that recognize the different technology , size , and weight of these aircraft.\n",
      "he is hoping to see a more formal process for the rewrite take shape this year , such as the creation of an aviation rulemaking committee.\n",
      "additionally , hai is pushing for a simplified path for ifr of single engine aircraft , which he said would bring the safe environment of ifr to down to the single engine helicopter category.\n",
      "this has industry support , and operators and manufacturers are collaborating on means to enable more helicopter ifr missions.\n",
      "while not all missions lend themselves to ifr , he said , there is a lot of opportunities for us to increase being in that environment.\n",
      "noise remains on the forefront , he further said.\n",
      "while the reauthorization bill addressed about a half dozen noise initiatives of interest to helicopter operators including another look at the north shore helicopter route over long island , new york\n",
      "many more farther reaching and restrictive measures were defeated.\n",
      "we have obligations and we have a responsibility to the communities that we operate over and within.\n",
      "we take that very seriously , he said our frustration is that the initiatives that the legislative people come up with are not based on any science whatsoever.\n",
      "there 're no studies that are ever done.\n",
      "this is nothing but a shoot from the hip.\n",
      "zuccaro reiterated that the majority of complaints come from a small segment of the population.\n",
      "noise complaints hotlines have highlighted that hundreds of calls can come from a single source.\n",
      "at the same time , these hotlines can showcase real noise issues that operators may be able to address.\n",
      "many of these issues will be reviewed at a three hour fly neighborly forum scheduled on march 5.\n",
      "next generation challenges and opportunties\n",
      "another hai focus has been on unmanned flight.\n",
      "hai created a member category for unmanned operations and is actively involved in numerous advisory committees and working groups.\n",
      "heli expo further will host several sessions focused on unmanned issues.\n",
      "our members every day are becoming more proficient in the operation of drones and creating subsidiaries and departments within their company to offer those service , he said.\n",
      "it has worked out really well.\n",
      "but at the same time , hai has been involved with the safe integration into the airspace.\n",
      "in addition to the uas committee meeting to be held on march 6 , heli expo will feature sessions ranging from uas integration to part 107 ground school for the new generation of operators.\n",
      "central on everyone s minds coming into this heli expo is the pilot and maintenance technician shortage.\n",
      "hai documented this during last year s heli expo , releasing a study conducted with the university of north dakota that found a potential for a shortage of 7,600 helicopters pilots and as many as 40,600 mechanics in the america over the next 18 years.\n",
      "we already knew pretty much what the results were.\n",
      "we wanted to confirm it with some real high end analysis to give us a better idea of what the numbers were , zuccaro said.\n",
      "not only is the rotorcraft market facing a shortage of new pilots coming in but also stiff competition from other sectors.\n",
      "the airlines are aggressively recruiting helicopter pilots who are not even qualified and they are paying for their crossover training.\n",
      "they value the skills of helicopter pilots , he said.\n",
      "so we are in a competitive environment.\n",
      "hai s affiliate organization helicopter foundation international has established a number of programs to capture the interest of the next generation , zuccaro noted.\n",
      "at heli expo , educational and professional development sessions will be held , as well as the annual military to civilian forum scheduled on the eve of this year s convention.\n",
      "the forum tends to draw a standing room\n",
      "only crowd.\n",
      "this is in addition to networking opportunities that are ongoing throughout the convention , as well as the career and mentoring fair scheduled for all day on march 5.\n",
      "as all of these issues come together in atlanta , zuccaro stressed that he remains encouraged by the state of the industry.\n",
      "we obviously monitor the offshore industry , which is so closely tied to the price of a barrel of oil and what is going on in the international community.\n",
      "also not to be ignored is the situation with some of the fleets and the leasing companies , he said.\n",
      "but he also noted the breadth of the rotorcraft industry and operations.\n",
      "we have been through these cycles and the good news is we are very diverse , we are flexible , and we are survivors , zuccaro said.\n",
      "we are optimistic about the future.imt vislink booth c4338 is showcasing its updated airborne video downlink system\n",
      "avds with the addition of the tsm 2020 transport management system at the hai heli expo 2019.\n",
      "imt vislink s avds is an integrated suite of downlink transmitters , receivers and antennas that creates a comprehensive aerial based video transmission solution.\n",
      "it is designed to improve situational awareness through real time hd video surveillance captured from drones , helicopters and other aircraft for display at command centers , mobile units and on video management systems.\n",
      "imt vislink has received tremendous interest in its avds system , which is comprised of the hdx 1100 , mini mobilcmdr , ciras x6 , crx6 , crx2 , and the new tsm 2020 , from both local and international law enforcement and military agencies within the past year.\n",
      "it remains the leading solution for the airborne surveillance industry , reflecting the company s longstanding commitment to delivering actionable intelligence through mission critical video communications.\n",
      "imt vislink is a trusted and valued partner to the armed forces and local law enforcement agencies , primarily because of our reliable , accurate and rapidly deployable video communications systems , says john payne , president and coo of vislink technologies.\n",
      "avds encompasses our air to anywhere technology that enables real time video to be collected , distributed and managed across all deployed assets.\n",
      "avds provides full compatibility with regional agencies large platform , fixed and rotary wing surveillance aircraft platforms , allowing for flexible implementation of current portable and mobile command vehicle downlink receive systems.\n",
      "the tsm 2020 is used to collect , aggregate and distribute video captured from a single or multiple receive site applications.\n",
      "it controls and accepts video streams from imt vislink s family of ip diversity receivers for viewing by commanders , staff and other key stakeholders.\n",
      "the tsm 2020 extends critical situational video to an unlimited number of observers who can view the video over any network connection , including wired ethernet , wifi , ip satellite , and ip cellular.\n",
      "video can be distributed over a secure ip network or the internet.\n",
      "using the imt elink intelligent aggregation algorithm iaa , the tsm 2020 automatically down selects to the best receivers and reconstructs an error free ip stream.\n",
      "it continuously monitors all connected remote receivers , coordinates all receiver channels and acts as a single point interface.\n",
      "metadata received from each remote receiver enables the tsm 2020 to analyze and manage total system bandwidth and preselect the best signal.\n",
      "it uses the reconstructed stream to adaptively transcode the received video into various standard streaming formats , and distributes the video , audio , and metadata to multiple viewing platforms.\n",
      "viewing platforms can range from a single pc , smartphones , and notepads connected over a cellular network , to an hd video wall.\n",
      "the tsm 2020 also features a local , native resolution hd decoder with hdmi and sdi outputs for video monitoring.\n",
      "avds is a critical tool for improving situational awareness by giving those on the ground a clear and reliable picture of what is being captured from airborne units , as it adds an additional layer of safety and security to missions.\n",
      "it plays an essential role in surveillance , assessment and deployment operations.\n",
      "including search and rescue operations , narcotics surveillance interdiction , personnel cargo transport , inter agency pursuit coordination , wildfire suppression , emergency medical services transport , and patrol support.the second prototype of the five bladed h145 helicopter carried out its maiden flight in august from airbus helicopters site in donauw rth , germany.\n",
      "the aircraft will now be used to help achieve easa certification for the variant , which is expected to be granted in early 2020.\n",
      "a first prototype is currently being used for high altitude testing in south america , while this new addition to the test campaign will mainly be used for autopilot testing , performance and airframe structure validation.\n",
      "the new variant was unveiled at the heli expo exhibition in atlanta in march , and provides 150kg of extra payload while also offering more comfort , simplicity and connectivity , according to the company.a leader in helicopter customizations will display some of the newest avionics solutions during the heli expo trade show in atlanta , georgia.\n",
      "eurotec vertical flight solutions eurotec has installed one of the first garmin g500h txi 10.6 inch lcd touchscreen display units and will be showcasing this new product on its recently completed vip ec130b4 aircraft.\n",
      "attendees can see the 10.6 inch txi and other new in 19 components by visiting eurotec s b424 at the atlanta convention center , directly across from garmin s b616.\n",
      "the display upgrade is one of many features integrated by eurotec into the vip configured aircraft , which will be utilized in charter and tour operations.\n",
      "garmin s txi series is a breakthrough that brings cockpit awareness to a new level , states adam boyko , eurotec s avionics and design manager.\n",
      "we focus on integrating such key avionics and other cutting edge products to make our client s flight operations as efficient as possible.\n",
      "the eurotec team s efficient integration of the txi into an existing b4 allowed clients to access such a high quality avionics improvement shortly after release.\n",
      "eurotec offers retrofit options for a range of legacy g500h equipped helicopters including the as350 series and ec130b4 t2 series.\n",
      "garmin has an excellent trade in program and we have developed a turn key solution to ensure a seamless , economical retrofit and upgrade , adds boyko.\n",
      "the g500h txi represents the latest in electronic glass cockpit instrumentation on bright , crisp 10.6 inch and 7 inch lcd touchscreen displays , offering an expanded array of features , options and panel layout possibilities.\n",
      "the 10.6 inch horizontal format can accommodate primary flight display pfd information and a multifunction display mfd side by side within the same unit.\n",
      "eurotec reports it plans additional txi installs as clients rely on eurotec for sales , service and support including integration of such leading avionics.\n",
      "corporate , private , fire utility and air medical clients benefit from eurotec s breadth of commercial rotorcraft services.\n"
     ]
    }
   ],
   "source": [
    "for sent in doc.sents:\n",
    "    print(sent)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[0.22106017037549036,\n",
       " 0.21130433767616916,\n",
       " 0.19028115116278407,\n",
       " 0.18950109199525128,\n",
       " 0.1878532487903051]"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sum_ranks = sum(unit_vector)\n",
    "unit_vector = [ rank/sum_ranks for rank in unit_vector ]\n",
    "\n",
    "unit_vector"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "{8}\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "{4}\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "{3}\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "{3}\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "{3}\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "{0}\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "{1}\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "{9}\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "{6}\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "{7}\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "{5}\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "{0}\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "{5}\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "{2}\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "set()\n",
      "0 0.22106017037549036\n",
      "1 0.21130433767616916\n",
      "2 0.19028115116278407\n",
      "3 0.18950109199525128\n",
      "4 0.1878532487903051\n",
      "{0: 0.4482449614702932, 1: 0.4482449614702932, 2: 0.4482449614702932, 3: 0.4482449614702932, 4: 0.4482449614702932, 5: 0.4482449614702932, 6: 0.4482449614702932, 7: 0.4482449614702932, 8: 0.4482449614702932, 9: 0.4482449614702932, 10: 0.4482449614702932, 11: 0.4482449614702932, 12: 0.4482449614702932, 13: 0.4482449614702932, 14: 0.4482449614702932, 15: 0.4482449614702932, 16: 0.4482449614702932, 17: 0.4482449614702932, 18: 0.4482449614702932, 19: 0.4482449614702932, 20: 0.4482449614702932, 21: 0.4482449614702932, 22: 0.4482449614702932, 23: 0.4482449614702932, 24: 0.4482449614702932, 25: 0.4482449614702932, 26: 0.4482449614702932, 27: 0.4482449614702932, 28: 0.4482449614702932, 29: 0.4482449614702932, 30: 0.4482449614702932, 31: 0.4482449614702932, 32: 0.4482449614702932, 33: 0.4482449614702932, 34: 0.4482449614702932, 35: 0.4482449614702932, 36: 0.4482449614702932, 37: 0.4482449614702932, 38: 0.4482449614702932, 39: 0.4482449614702932, 40: 0.4482449614702932, 41: 0.4482449614702932, 42: 0.4482449614702932, 43: 0.4482449614702932, 44: 0.4482449614702932, 45: 0.4482449614702932, 46: 0.4482449614702932, 47: 0.4482449614702932, 48: 0.4482449614702932, 49: 0.4482449614702932, 50: 0.4482449614702932, 51: 0.4482449614702932, 52: 0.4482449614702932, 53: 0.4482449614702932, 54: 0.4482449614702932, 55: 0.4482449614702932, 56: 0.4482449614702932, 57: 0.4482449614702932, 58: 0.4482449614702932, 59: 0.4482449614702932, 60: 0.4482449614702932, 61: 0.4482449614702932, 62: 0.4482449614702932, 63: 0.4482449614702932, 64: 0.4482449614702932, 65: 0.4482449614702932, 66: 0.4482449614702932, 67: 0.4482449614702932, 68: 0.4482449614702932, 69: 0.4069824350047952, 70: 0.4482449614702932, 71: 0.4482449614702932, 72: 0.4482449614702932, 73: 0.4482449614702932, 74: 0.4482449614702932, 75: 0.4482449614702932, 76: 0.4482449614702932, 77: 0.4482449614702932, 78: 0.4482449614702932, 79: 0.4482449614702932, 80: 0.4482449614702932, 81: 0.4482449614702932, 82: 0.4482449614702932, 83: 0.4482449614702932, 84: 0.4482449614702932, 85: 0.4482449614702932, 86: 0.4482449614702932, 87: 0.4482449614702932, 88: 0.4482449614702932, 89: 0.4482449614702932, 90: 0.4482449614702932, 91: 0.4482449614702932, 92: 0.4482449614702932, 93: 0.4482449614702932, 94: 0.4482449614702932, 95: 0.4482449614702932, 96: 0.4482449614702932, 97: 0.4482449614702932, 98: 0.4482449614702932, 99: 0.4482449614702932, 100: 0.4482449614702932, 101: 0.4482449614702932, 102: 0.4482449614702932, 103: 0.4482449614702932, 104: 0.4482449614702932, 105: 0.4482449614702932, 106: 0.4482449614702932, 107: 0.4482449614702932, 108: 0.4482449614702932, 109: 0.4482449614702932, 110: 0.4482449614702932, 111: 0.4482449614702932, 112: 0.4482449614702932, 113: 0.4482449614702932, 114: 0.4482449614702932, 115: 0.4482449614702932, 116: 0.4482449614702932, 117: 0.4482449614702932, 118: 0.4482449614702932, 119: 0.4482449614702932, 120: 0.4482449614702932, 121: 0.4482449614702932, 122: 0.4482449614702932, 123: 0.4482449614702932, 124: 0.4482449614702932, 125: 0.4482449614702932, 126: 0.4482449614702932, 127: 0.4482449614702932, 128: 0.4482449614702932, 129: 0.4482449614702932, 130: 0.4482449614702932, 131: 0.4482449614702932, 132: 0.4482449614702932, 133: 0.4482449614702932, 134: 0.4482449614702932, 135: 0.4482449614702932, 136: 0.4482449614702932, 137: 0.4482449614702932, 138: 0.4482449614702932, 139: 0.4482449614702932, 140: 0.4482449614702932, 141: 0.4482449614702932, 142: 0.4482449614702932, 143: 0.4482449614702932, 144: 0.4482449614702932, 145: 0.4482449614702932, 146: 0.4482449614702932, 147: 0.4482449614702932, 148: 0.4482449614702932, 149: 0.4482449614702932, 150: 0.4482449614702932, 151: 0.4482449614702932, 152: 0.4482449614702932, 153: 0.40621777609567006, 154: 0.4482449614702932, 155: 0.4482449614702932, 156: 0.4482449614702932, 157: 0.4482449614702932, 158: 0.4482449614702932, 159: 0.4482449614702932, 160: 0.4482449614702932, 161: 0.4482449614702932, 162: 0.4482449614702932, 163: 0.4482449614702932, 164: 0.4482449614702932, 165: 0.4482449614702932, 166: 0.4482449614702932, 167: 0.4482449614702932, 168: 0.4482449614702932, 169: 0.4482449614702932, 170: 0.4482449614702932, 171: 0.4482449614702932, 172: 0.4482449614702932, 173: 0.4482449614702932, 174: 0.4482449614702932, 175: 0.4482449614702932, 176: 0.4482449614702932, 177: 0.4482449614702932, 178: 0.4482449614702932, 179: 0.4482449614702932, 180: 0.4482449614702932, 181: 0.4482449614702932, 182: 0.4482449614702932, 183: 0.4482449614702932, 184: 0.4482449614702932, 185: 0.4482449614702932, 186: 0.4482449614702932, 187: 0.4482449614702932, 188: 0.4482449614702932, 189: 0.4482449614702932, 190: 0.4482449614702932, 191: 0.4482449614702932, 192: 0.4482449614702932, 193: 0.4482449614702932, 194: 0.4482449614702932, 195: 0.4482449614702932, 196: 0.4482449614702932, 197: 0.4482449614702932, 198: 0.4482449614702932, 199: 0.40621777609567006, 200: 0.4482449614702932, 201: 0.4482449614702932, 202: 0.4482449614702932, 203: 0.4482449614702932, 204: 0.4482449614702932, 205: 0.4482449614702932, 206: 0.4482449614702932, 207: 0.4482449614702932, 208: 0.40621777609567006, 209: 0.4482449614702932, 210: 0.4482449614702932, 211: 0.4482449614702932, 212: 0.4482449614702932, 213: 0.4482449614702932, 214: 0.4482449614702932, 215: 0.4482449614702932, 216: 0.4482449614702932, 217: 0.4482449614702932, 218: 0.4482449614702932, 219: 0.4482449614702932, 220: 0.4482449614702932, 221: 0.4482449614702932, 222: 0.4482449614702932, 223: 0.4482449614702932, 224: 0.4482449614702932, 225: 0.4482449614702932, 226: 0.4482449614702932, 227: 0.4482449614702932, 228: 0.4482449614702932, 229: 0.4482449614702932, 230: 0.4482449614702932, 231: 0.4482449614702932, 232: 0.4482449614702932, 233: 0.4482449614702932, 234: 0.4482449614702932, 235: 0.4482449614702932, 236: 0.4482449614702932, 237: 0.4482449614702932, 238: 0.4482449614702932, 239: 0.4482449614702932, 240: 0.4482449614702932, 241: 0.4482449614702932, 242: 0.4482449614702932, 243: 0.38994351713685893, 244: 0.3953150925056367, 245: 0.4482449614702932, 246: 0.4482449614702932, 247: 0.4482449614702932, 248: 0.4482449614702932, 249: 0.4482449614702932, 250: 0.4482449614702932, 251: 0.4482449614702932, 252: 0.4482449614702932, 253: 0.4482449614702932, 254: 0.4482449614702932, 255: 0.4482449614702932, 256: 0.4482449614702932, 257: 0.4482449614702932, 258: 0.4482449614702932, 259: 0.4482449614702932, 260: 0.4482449614702932, 261: 0.4482449614702932, 262: 0.4482449614702932, 263: 0.4482449614702932, 264: 0.4482449614702932, 265: 0.4482449614702932, 266: 0.4482449614702932, 267: 0.4482449614702932, 268: 0.4482449614702932, 269: 0.4482449614702932, 270: 0.4482449614702932, 271: 0.4482449614702932, 272: 0.4482449614702932, 273: 0.4482449614702932, 274: 0.4482449614702932, 275: 0.4482449614702932, 276: 0.4482449614702932, 277: 0.4482449614702932, 278: 0.4482449614702932, 279: 0.4482449614702932, 280: 0.4482449614702932, 281: 0.4482449614702932, 282: 0.4482449614702932, 283: 0.4482449614702932, 284: 0.4482449614702932, 285: 0.4482449614702932, 286: 0.4482449614702932, 287: 0.4482449614702932, 288: 0.4482449614702932, 289: 0.4482449614702932, 290: 0.4482449614702932, 291: 0.4482449614702932, 292: 0.4482449614702932, 293: 0.4482449614702932, 294: 0.4482449614702932, 295: 0.4482449614702932, 296: 0.4482449614702932, 297: 0.4482449614702932, 298: 0.4482449614702932, 299: 0.4482449614702932, 300: 0.4482449614702932, 301: 0.4482449614702932, 302: 0.4482449614702932, 303: 0.4482449614702932, 304: 0.4482449614702932, 305: 0.4482449614702932, 306: 0.4482449614702932, 307: 0.4482449614702932, 308: 0.4482449614702932, 309: 0.4482449614702932, 310: 0.4482449614702932, 311: 0.4482449614702932, 312: 0.4482449614702932, 313: 0.4482449614702932, 314: 0.4482449614702932, 315: 0.4482449614702932, 316: 0.4482449614702932, 317: 0.4482449614702932, 318: 0.4482449614702932, 319: 0.4482449614702932, 320: 0.4482449614702932, 321: 0.4482449614702932, 322: 0.4482449614702932, 323: 0.4482449614702932, 324: 0.4482449614702932, 325: 0.4482449614702932, 326: 0.4482449614702932, 327: 0.4482449614702932, 328: 0.4482449614702932, 329: 0.4482449614702932, 330: 0.4482449614702932, 331: 0.4482449614702932, 332: 0.4482449614702932, 333: 0.4482449614702932, 334: 0.4482449614702932, 335: 0.4482449614702932, 336: 0.4482449614702932, 337: 0.4482449614702932, 338: 0.4482449614702932, 339: 0.4482449614702932, 340: 0.4482449614702932, 341: 0.4482449614702932, 342: 0.4482449614702932, 343: 0.4482449614702932, 344: 0.4482449614702932, 345: 0.38994351713685893, 346: 0.4482449614702932, 347: 0.4482449614702932, 348: 0.4482449614702932, 349: 0.4482449614702932, 350: 0.4482449614702932, 351: 0.4482449614702932, 352: 0.4482449614702932, 353: 0.4482449614702932, 354: 0.4482449614702932, 355: 0.4482449614702932, 356: 0.4482449614702932, 357: 0.4482449614702932, 358: 0.4482449614702932, 359: 0.4482449614702932, 360: 0.4482449614702932, 361: 0.4482449614702932, 362: 0.4482449614702932, 363: 0.4482449614702932, 364: 0.4482449614702932, 365: 0.4482449614702932, 366: 0.4482449614702932, 367: 0.4482449614702932, 368: 0.4482449614702932, 369: 0.4482449614702932, 370: 0.4482449614702932, 371: 0.4482449614702932, 372: 0.4482449614702932, 373: 0.4482449614702932, 374: 0.4482449614702932, 375: 0.4482449614702932, 376: 0.4482449614702932, 377: 0.4482449614702932, 378: 0.4482449614702932, 379: 0.4482449614702932, 380: 0.4482449614702932, 381: 0.4482449614702932, 382: 0.4482449614702932, 383: 0.4482449614702932, 384: 0.4482449614702932, 385: 0.4482449614702932, 386: 0.4482449614702932, 387: 0.4482449614702932, 388: 0.4482449614702932, 389: 0.4482449614702932, 390: 0.4482449614702932, 391: 0.4482449614702932, 392: 0.4482449614702932, 393: 0.4482449614702932, 394: 0.4482449614702932, 395: 0.4482449614702932, 396: 0.4482449614702932, 397: 0.4482449614702932, 398: 0.4482449614702932, 399: 0.4482449614702932, 400: 0.4482449614702932, 401: 0.4482449614702932, 402: 0.4482449614702932, 403: 0.4482449614702932, 404: 0.4482449614702932, 405: 0.4482449614702932, 406: 0.4482449614702932, 407: 0.4482449614702932, 408: 0.4482449614702932, 409: 0.4482449614702932, 410: 0.4482449614702932, 411: 0.4482449614702932, 412: 0.4482449614702932, 413: 0.4482449614702932, 414: 0.4482449614702932, 415: 0.4482449614702932, 416: 0.4482449614702932, 417: 0.4482449614702932, 418: 0.4482449614702932, 419: 0.4482449614702932, 420: 0.4482449614702932, 421: 0.4482449614702932, 422: 0.4482449614702932, 423: 0.4482449614702932, 424: 0.4482449614702932, 425: 0.4482449614702932, 426: 0.4482449614702932, 427: 0.4482449614702932, 428: 0.4482449614702932, 429: 0.4482449614702932, 430: 0.4482449614702932, 431: 0.4482449614702932, 432: 0.4482449614702932, 433: 0.4482449614702932, 434: 0.4482449614702932, 435: 0.4482449614702932, 436: 0.4482449614702932, 437: 0.4482449614702932, 438: 0.4482449614702932, 439: 0.4482449614702932, 440: 0.4482449614702932, 441: 0.4482449614702932, 442: 0.4482449614702932, 443: 0.4482449614702932, 444: 0.4482449614702932, 445: 0.4482449614702932, 446: 0.4482449614702932, 447: 0.4482449614702932, 448: 0.4482449614702932, 449: 0.4482449614702932, 450: 0.4482449614702932, 451: 0.4482449614702932, 452: 0.4482449614702932, 453: 0.4482449614702932, 454: 0.4482449614702932, 455: 0.4482449614702932, 456: 0.4482449614702932, 457: 0.4482449614702932, 458: 0.4482449614702932, 459: 0.4482449614702932, 460: 0.4482449614702932, 461: 0.4482449614702932, 462: 0.4482449614702932, 463: 0.4482449614702932, 464: 0.4482449614702932, 465: 0.4482449614702932, 466: 0.4482449614702932, 467: 0.4482449614702932, 468: 0.4482449614702932, 469: 0.4482449614702932, 470: 0.4482449614702932, 471: 0.4482449614702932, 472: 0.4482449614702932, 473: 0.4482449614702932, 474: 0.4482449614702932, 475: 0.4482449614702932, 476: 0.4482449614702932, 477: 0.4482449614702932, 478: 0.4482449614702932, 479: 0.4482449614702932, 480: 0.4482449614702932, 481: 0.4482449614702932, 482: 0.4482449614702932, 483: 0.4482449614702932, 484: 0.4482449614702932, 485: 0.4482449614702932, 486: 0.4482449614702932, 487: 0.4482449614702932, 488: 0.4482449614702932, 489: 0.4482449614702932, 490: 0.4482449614702932, 491: 0.4482449614702932, 492: 0.4482449614702932, 493: 0.4482449614702932, 494: 0.4482449614702932, 495: 0.4482449614702932, 496: 0.4482449614702932, 497: 0.4482449614702932, 498: 0.4482449614702932, 499: 0.4482449614702932, 500: 0.4482449614702932, 501: 0.4482449614702932, 502: 0.4482449614702932, 503: 0.4482449614702932, 504: 0.4482449614702932, 505: 0.4482449614702932, 506: 0.4482449614702932, 507: 0.4482449614702932, 508: 0.4482449614702932, 509: 0.4482449614702932, 510: 0.4482449614702932, 511: 0.4482449614702932, 512: 0.4482449614702932, 513: 0.4482449614702932, 514: 0.4482449614702932, 515: 0.4482449614702932, 516: 0.4482449614702932, 517: 0.4482449614702932, 518: 0.4482449614702932, 519: 0.4482449614702932, 520: 0.4482449614702932, 521: 0.4482449614702932, 522: 0.4482449614702932, 523: 0.4482449614702932, 524: 0.4482449614702932, 525: 0.4482449614702932, 526: 0.4482449614702932, 527: 0.4482449614702932, 528: 0.4482449614702932, 529: 0.4482449614702932, 530: 0.4482449614702932, 531: 0.4482449614702932, 532: 0.4482449614702932, 533: 0.4482449614702932, 534: 0.4482449614702932, 535: 0.4482449614702932, 536: 0.4482449614702932, 537: 0.4482449614702932, 538: 0.4482449614702932, 539: 0.4482449614702932, 540: 0.4482449614702932, 541: 0.4482449614702932, 542: 0.4482449614702932, 543: 0.4482449614702932, 544: 0.4482449614702932, 545: 0.4482449614702932, 546: 0.4482449614702932, 547: 0.4482449614702932, 548: 0.4482449614702932, 549: 0.4482449614702932, 550: 0.4482449614702932, 551: 0.4482449614702932, 552: 0.4482449614702932, 553: 0.4482449614702932, 554: 0.4482449614702932, 555: 0.4482449614702932, 556: 0.4482449614702932, 557: 0.4482449614702932, 558: 0.4482449614702932, 559: 0.4482449614702932, 560: 0.4482449614702932, 561: 0.4482449614702932, 562: 0.4482449614702932, 563: 0.4482449614702932, 564: 0.4482449614702932, 565: 0.4482449614702932, 566: 0.4482449614702932, 567: 0.4482449614702932, 568: 0.4482449614702932, 569: 0.4482449614702932, 570: 0.4482449614702932, 571: 0.4482449614702932, 572: 0.4482449614702932, 573: 0.4482449614702932, 574: 0.4482449614702932, 575: 0.4482449614702932, 576: 0.4482449614702932, 577: 0.4482449614702932, 578: 0.4482449614702932, 579: 0.4482449614702932, 580: 0.40585296474914445, 581: 0.4482449614702932, 582: 0.4482449614702932, 583: 0.4482449614702932, 584: 0.4482449614702932, 585: 0.4482449614702932, 586: 0.4482449614702932, 587: 0.4482449614702932, 588: 0.4482449614702932, 589: 0.4482449614702932, 590: 0.4482449614702932, 591: 0.4482449614702932, 592: 0.4482449614702932, 593: 0.4482449614702932, 594: 0.4482449614702932, 595: 0.4482449614702932}\n"
     ]
    }
   ],
   "source": [
    "from math import sqrt\n",
    "\n",
    "sent_rank = {}\n",
    "sent_id = 0\n",
    "\n",
    "for sent_start, sent_end, sent_vector in sent_bounds:\n",
    "    print(sent_vector)\n",
    "    sum_sq = 0.0\n",
    "    \n",
    "    for phrase_id in range(len(unit_vector)):\n",
    "        print(phrase_id, unit_vector[phrase_id])\n",
    "        \n",
    "        if phrase_id not in sent_vector:\n",
    "            sum_sq += unit_vector[phrase_id]**2.0\n",
    "\n",
    "    sent_rank[sent_id] = sqrt(sum_sq)\n",
    "    sent_id += 1\n",
    "\n",
    "print(sent_rank)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[(243, 0.38994351713685893),\n",
       " (345, 0.38994351713685893),\n",
       " (244, 0.3953150925056367),\n",
       " (580, 0.40585296474914445),\n",
       " (153, 0.40621777609567006),\n",
       " (199, 0.40621777609567006),\n",
       " (208, 0.40621777609567006),\n",
       " (69, 0.4069824350047952),\n",
       " (0, 0.4482449614702932),\n",
       " (1, 0.4482449614702932),\n",
       " (2, 0.4482449614702932),\n",
       " (3, 0.4482449614702932),\n",
       " (4, 0.4482449614702932),\n",
       " (5, 0.4482449614702932),\n",
       " (6, 0.4482449614702932),\n",
       " (7, 0.4482449614702932),\n",
       " (8, 0.4482449614702932),\n",
       " (9, 0.4482449614702932),\n",
       " (10, 0.4482449614702932),\n",
       " (11, 0.4482449614702932),\n",
       " (12, 0.4482449614702932),\n",
       " (13, 0.4482449614702932),\n",
       " (14, 0.4482449614702932),\n",
       " (15, 0.4482449614702932),\n",
       " (16, 0.4482449614702932),\n",
       " (17, 0.4482449614702932),\n",
       " (18, 0.4482449614702932),\n",
       " (19, 0.4482449614702932),\n",
       " (20, 0.4482449614702932),\n",
       " (21, 0.4482449614702932),\n",
       " (22, 0.4482449614702932),\n",
       " (23, 0.4482449614702932),\n",
       " (24, 0.4482449614702932),\n",
       " (25, 0.4482449614702932),\n",
       " (26, 0.4482449614702932),\n",
       " (27, 0.4482449614702932),\n",
       " (28, 0.4482449614702932),\n",
       " (29, 0.4482449614702932),\n",
       " (30, 0.4482449614702932),\n",
       " (31, 0.4482449614702932),\n",
       " (32, 0.4482449614702932),\n",
       " (33, 0.4482449614702932),\n",
       " (34, 0.4482449614702932),\n",
       " (35, 0.4482449614702932),\n",
       " (36, 0.4482449614702932),\n",
       " (37, 0.4482449614702932),\n",
       " (38, 0.4482449614702932),\n",
       " (39, 0.4482449614702932),\n",
       " (40, 0.4482449614702932),\n",
       " (41, 0.4482449614702932),\n",
       " (42, 0.4482449614702932),\n",
       " (43, 0.4482449614702932),\n",
       " (44, 0.4482449614702932),\n",
       " (45, 0.4482449614702932),\n",
       " (46, 0.4482449614702932),\n",
       " (47, 0.4482449614702932),\n",
       " (48, 0.4482449614702932),\n",
       " (49, 0.4482449614702932),\n",
       " (50, 0.4482449614702932),\n",
       " (51, 0.4482449614702932),\n",
       " (52, 0.4482449614702932),\n",
       " (53, 0.4482449614702932),\n",
       " (54, 0.4482449614702932),\n",
       " (55, 0.4482449614702932),\n",
       " (56, 0.4482449614702932),\n",
       " (57, 0.4482449614702932),\n",
       " (58, 0.4482449614702932),\n",
       " (59, 0.4482449614702932),\n",
       " (60, 0.4482449614702932),\n",
       " (61, 0.4482449614702932),\n",
       " (62, 0.4482449614702932),\n",
       " (63, 0.4482449614702932),\n",
       " (64, 0.4482449614702932),\n",
       " (65, 0.4482449614702932),\n",
       " (66, 0.4482449614702932),\n",
       " (67, 0.4482449614702932),\n",
       " (68, 0.4482449614702932),\n",
       " (70, 0.4482449614702932),\n",
       " (71, 0.4482449614702932),\n",
       " (72, 0.4482449614702932),\n",
       " (73, 0.4482449614702932),\n",
       " (74, 0.4482449614702932),\n",
       " (75, 0.4482449614702932),\n",
       " (76, 0.4482449614702932),\n",
       " (77, 0.4482449614702932),\n",
       " (78, 0.4482449614702932),\n",
       " (79, 0.4482449614702932),\n",
       " (80, 0.4482449614702932),\n",
       " (81, 0.4482449614702932),\n",
       " (82, 0.4482449614702932),\n",
       " (83, 0.4482449614702932),\n",
       " (84, 0.4482449614702932),\n",
       " (85, 0.4482449614702932),\n",
       " (86, 0.4482449614702932),\n",
       " (87, 0.4482449614702932),\n",
       " (88, 0.4482449614702932),\n",
       " (89, 0.4482449614702932),\n",
       " (90, 0.4482449614702932),\n",
       " (91, 0.4482449614702932),\n",
       " (92, 0.4482449614702932),\n",
       " (93, 0.4482449614702932),\n",
       " (94, 0.4482449614702932),\n",
       " (95, 0.4482449614702932),\n",
       " (96, 0.4482449614702932),\n",
       " (97, 0.4482449614702932),\n",
       " (98, 0.4482449614702932),\n",
       " (99, 0.4482449614702932),\n",
       " (100, 0.4482449614702932),\n",
       " (101, 0.4482449614702932),\n",
       " (102, 0.4482449614702932),\n",
       " (103, 0.4482449614702932),\n",
       " (104, 0.4482449614702932),\n",
       " (105, 0.4482449614702932),\n",
       " (106, 0.4482449614702932),\n",
       " (107, 0.4482449614702932),\n",
       " (108, 0.4482449614702932),\n",
       " (109, 0.4482449614702932),\n",
       " (110, 0.4482449614702932),\n",
       " (111, 0.4482449614702932),\n",
       " (112, 0.4482449614702932),\n",
       " (113, 0.4482449614702932),\n",
       " (114, 0.4482449614702932),\n",
       " (115, 0.4482449614702932),\n",
       " (116, 0.4482449614702932),\n",
       " (117, 0.4482449614702932),\n",
       " (118, 0.4482449614702932),\n",
       " (119, 0.4482449614702932),\n",
       " (120, 0.4482449614702932),\n",
       " (121, 0.4482449614702932),\n",
       " (122, 0.4482449614702932),\n",
       " (123, 0.4482449614702932),\n",
       " (124, 0.4482449614702932),\n",
       " (125, 0.4482449614702932),\n",
       " (126, 0.4482449614702932),\n",
       " (127, 0.4482449614702932),\n",
       " (128, 0.4482449614702932),\n",
       " (129, 0.4482449614702932),\n",
       " (130, 0.4482449614702932),\n",
       " (131, 0.4482449614702932),\n",
       " (132, 0.4482449614702932),\n",
       " (133, 0.4482449614702932),\n",
       " (134, 0.4482449614702932),\n",
       " (135, 0.4482449614702932),\n",
       " (136, 0.4482449614702932),\n",
       " (137, 0.4482449614702932),\n",
       " (138, 0.4482449614702932),\n",
       " (139, 0.4482449614702932),\n",
       " (140, 0.4482449614702932),\n",
       " (141, 0.4482449614702932),\n",
       " (142, 0.4482449614702932),\n",
       " (143, 0.4482449614702932),\n",
       " (144, 0.4482449614702932),\n",
       " (145, 0.4482449614702932),\n",
       " (146, 0.4482449614702932),\n",
       " (147, 0.4482449614702932),\n",
       " (148, 0.4482449614702932),\n",
       " (149, 0.4482449614702932),\n",
       " (150, 0.4482449614702932),\n",
       " (151, 0.4482449614702932),\n",
       " (152, 0.4482449614702932),\n",
       " (154, 0.4482449614702932),\n",
       " (155, 0.4482449614702932),\n",
       " (156, 0.4482449614702932),\n",
       " (157, 0.4482449614702932),\n",
       " (158, 0.4482449614702932),\n",
       " (159, 0.4482449614702932),\n",
       " (160, 0.4482449614702932),\n",
       " (161, 0.4482449614702932),\n",
       " (162, 0.4482449614702932),\n",
       " (163, 0.4482449614702932),\n",
       " (164, 0.4482449614702932),\n",
       " (165, 0.4482449614702932),\n",
       " (166, 0.4482449614702932),\n",
       " (167, 0.4482449614702932),\n",
       " (168, 0.4482449614702932),\n",
       " (169, 0.4482449614702932),\n",
       " (170, 0.4482449614702932),\n",
       " (171, 0.4482449614702932),\n",
       " (172, 0.4482449614702932),\n",
       " (173, 0.4482449614702932),\n",
       " (174, 0.4482449614702932),\n",
       " (175, 0.4482449614702932),\n",
       " (176, 0.4482449614702932),\n",
       " (177, 0.4482449614702932),\n",
       " (178, 0.4482449614702932),\n",
       " (179, 0.4482449614702932),\n",
       " (180, 0.4482449614702932),\n",
       " (181, 0.4482449614702932),\n",
       " (182, 0.4482449614702932),\n",
       " (183, 0.4482449614702932),\n",
       " (184, 0.4482449614702932),\n",
       " (185, 0.4482449614702932),\n",
       " (186, 0.4482449614702932),\n",
       " (187, 0.4482449614702932),\n",
       " (188, 0.4482449614702932),\n",
       " (189, 0.4482449614702932),\n",
       " (190, 0.4482449614702932),\n",
       " (191, 0.4482449614702932),\n",
       " (192, 0.4482449614702932),\n",
       " (193, 0.4482449614702932),\n",
       " (194, 0.4482449614702932),\n",
       " (195, 0.4482449614702932),\n",
       " (196, 0.4482449614702932),\n",
       " (197, 0.4482449614702932),\n",
       " (198, 0.4482449614702932),\n",
       " (200, 0.4482449614702932),\n",
       " (201, 0.4482449614702932),\n",
       " (202, 0.4482449614702932),\n",
       " (203, 0.4482449614702932),\n",
       " (204, 0.4482449614702932),\n",
       " (205, 0.4482449614702932),\n",
       " (206, 0.4482449614702932),\n",
       " (207, 0.4482449614702932),\n",
       " (209, 0.4482449614702932),\n",
       " (210, 0.4482449614702932),\n",
       " (211, 0.4482449614702932),\n",
       " (212, 0.4482449614702932),\n",
       " (213, 0.4482449614702932),\n",
       " (214, 0.4482449614702932),\n",
       " (215, 0.4482449614702932),\n",
       " (216, 0.4482449614702932),\n",
       " (217, 0.4482449614702932),\n",
       " (218, 0.4482449614702932),\n",
       " (219, 0.4482449614702932),\n",
       " (220, 0.4482449614702932),\n",
       " (221, 0.4482449614702932),\n",
       " (222, 0.4482449614702932),\n",
       " (223, 0.4482449614702932),\n",
       " (224, 0.4482449614702932),\n",
       " (225, 0.4482449614702932),\n",
       " (226, 0.4482449614702932),\n",
       " (227, 0.4482449614702932),\n",
       " (228, 0.4482449614702932),\n",
       " (229, 0.4482449614702932),\n",
       " (230, 0.4482449614702932),\n",
       " (231, 0.4482449614702932),\n",
       " (232, 0.4482449614702932),\n",
       " (233, 0.4482449614702932),\n",
       " (234, 0.4482449614702932),\n",
       " (235, 0.4482449614702932),\n",
       " (236, 0.4482449614702932),\n",
       " (237, 0.4482449614702932),\n",
       " (238, 0.4482449614702932),\n",
       " (239, 0.4482449614702932),\n",
       " (240, 0.4482449614702932),\n",
       " (241, 0.4482449614702932),\n",
       " (242, 0.4482449614702932),\n",
       " (245, 0.4482449614702932),\n",
       " (246, 0.4482449614702932),\n",
       " (247, 0.4482449614702932),\n",
       " (248, 0.4482449614702932),\n",
       " (249, 0.4482449614702932),\n",
       " (250, 0.4482449614702932),\n",
       " (251, 0.4482449614702932),\n",
       " (252, 0.4482449614702932),\n",
       " (253, 0.4482449614702932),\n",
       " (254, 0.4482449614702932),\n",
       " (255, 0.4482449614702932),\n",
       " (256, 0.4482449614702932),\n",
       " (257, 0.4482449614702932),\n",
       " (258, 0.4482449614702932),\n",
       " (259, 0.4482449614702932),\n",
       " (260, 0.4482449614702932),\n",
       " (261, 0.4482449614702932),\n",
       " (262, 0.4482449614702932),\n",
       " (263, 0.4482449614702932),\n",
       " (264, 0.4482449614702932),\n",
       " (265, 0.4482449614702932),\n",
       " (266, 0.4482449614702932),\n",
       " (267, 0.4482449614702932),\n",
       " (268, 0.4482449614702932),\n",
       " (269, 0.4482449614702932),\n",
       " (270, 0.4482449614702932),\n",
       " (271, 0.4482449614702932),\n",
       " (272, 0.4482449614702932),\n",
       " (273, 0.4482449614702932),\n",
       " (274, 0.4482449614702932),\n",
       " (275, 0.4482449614702932),\n",
       " (276, 0.4482449614702932),\n",
       " (277, 0.4482449614702932),\n",
       " (278, 0.4482449614702932),\n",
       " (279, 0.4482449614702932),\n",
       " (280, 0.4482449614702932),\n",
       " (281, 0.4482449614702932),\n",
       " (282, 0.4482449614702932),\n",
       " (283, 0.4482449614702932),\n",
       " (284, 0.4482449614702932),\n",
       " (285, 0.4482449614702932),\n",
       " (286, 0.4482449614702932),\n",
       " (287, 0.4482449614702932),\n",
       " (288, 0.4482449614702932),\n",
       " (289, 0.4482449614702932),\n",
       " (290, 0.4482449614702932),\n",
       " (291, 0.4482449614702932),\n",
       " (292, 0.4482449614702932),\n",
       " (293, 0.4482449614702932),\n",
       " (294, 0.4482449614702932),\n",
       " (295, 0.4482449614702932),\n",
       " (296, 0.4482449614702932),\n",
       " (297, 0.4482449614702932),\n",
       " (298, 0.4482449614702932),\n",
       " (299, 0.4482449614702932),\n",
       " (300, 0.4482449614702932),\n",
       " (301, 0.4482449614702932),\n",
       " (302, 0.4482449614702932),\n",
       " (303, 0.4482449614702932),\n",
       " (304, 0.4482449614702932),\n",
       " (305, 0.4482449614702932),\n",
       " (306, 0.4482449614702932),\n",
       " (307, 0.4482449614702932),\n",
       " (308, 0.4482449614702932),\n",
       " (309, 0.4482449614702932),\n",
       " (310, 0.4482449614702932),\n",
       " (311, 0.4482449614702932),\n",
       " (312, 0.4482449614702932),\n",
       " (313, 0.4482449614702932),\n",
       " (314, 0.4482449614702932),\n",
       " (315, 0.4482449614702932),\n",
       " (316, 0.4482449614702932),\n",
       " (317, 0.4482449614702932),\n",
       " (318, 0.4482449614702932),\n",
       " (319, 0.4482449614702932),\n",
       " (320, 0.4482449614702932),\n",
       " (321, 0.4482449614702932),\n",
       " (322, 0.4482449614702932),\n",
       " (323, 0.4482449614702932),\n",
       " (324, 0.4482449614702932),\n",
       " (325, 0.4482449614702932),\n",
       " (326, 0.4482449614702932),\n",
       " (327, 0.4482449614702932),\n",
       " (328, 0.4482449614702932),\n",
       " (329, 0.4482449614702932),\n",
       " (330, 0.4482449614702932),\n",
       " (331, 0.4482449614702932),\n",
       " (332, 0.4482449614702932),\n",
       " (333, 0.4482449614702932),\n",
       " (334, 0.4482449614702932),\n",
       " (335, 0.4482449614702932),\n",
       " (336, 0.4482449614702932),\n",
       " (337, 0.4482449614702932),\n",
       " (338, 0.4482449614702932),\n",
       " (339, 0.4482449614702932),\n",
       " (340, 0.4482449614702932),\n",
       " (341, 0.4482449614702932),\n",
       " (342, 0.4482449614702932),\n",
       " (343, 0.4482449614702932),\n",
       " (344, 0.4482449614702932),\n",
       " (346, 0.4482449614702932),\n",
       " (347, 0.4482449614702932),\n",
       " (348, 0.4482449614702932),\n",
       " (349, 0.4482449614702932),\n",
       " (350, 0.4482449614702932),\n",
       " (351, 0.4482449614702932),\n",
       " (352, 0.4482449614702932),\n",
       " (353, 0.4482449614702932),\n",
       " (354, 0.4482449614702932),\n",
       " (355, 0.4482449614702932),\n",
       " (356, 0.4482449614702932),\n",
       " (357, 0.4482449614702932),\n",
       " (358, 0.4482449614702932),\n",
       " (359, 0.4482449614702932),\n",
       " (360, 0.4482449614702932),\n",
       " (361, 0.4482449614702932),\n",
       " (362, 0.4482449614702932),\n",
       " (363, 0.4482449614702932),\n",
       " (364, 0.4482449614702932),\n",
       " (365, 0.4482449614702932),\n",
       " (366, 0.4482449614702932),\n",
       " (367, 0.4482449614702932),\n",
       " (368, 0.4482449614702932),\n",
       " (369, 0.4482449614702932),\n",
       " (370, 0.4482449614702932),\n",
       " (371, 0.4482449614702932),\n",
       " (372, 0.4482449614702932),\n",
       " (373, 0.4482449614702932),\n",
       " (374, 0.4482449614702932),\n",
       " (375, 0.4482449614702932),\n",
       " (376, 0.4482449614702932),\n",
       " (377, 0.4482449614702932),\n",
       " (378, 0.4482449614702932),\n",
       " (379, 0.4482449614702932),\n",
       " (380, 0.4482449614702932),\n",
       " (381, 0.4482449614702932),\n",
       " (382, 0.4482449614702932),\n",
       " (383, 0.4482449614702932),\n",
       " (384, 0.4482449614702932),\n",
       " (385, 0.4482449614702932),\n",
       " (386, 0.4482449614702932),\n",
       " (387, 0.4482449614702932),\n",
       " (388, 0.4482449614702932),\n",
       " (389, 0.4482449614702932),\n",
       " (390, 0.4482449614702932),\n",
       " (391, 0.4482449614702932),\n",
       " (392, 0.4482449614702932),\n",
       " (393, 0.4482449614702932),\n",
       " (394, 0.4482449614702932),\n",
       " (395, 0.4482449614702932),\n",
       " (396, 0.4482449614702932),\n",
       " (397, 0.4482449614702932),\n",
       " (398, 0.4482449614702932),\n",
       " (399, 0.4482449614702932),\n",
       " (400, 0.4482449614702932),\n",
       " (401, 0.4482449614702932),\n",
       " (402, 0.4482449614702932),\n",
       " (403, 0.4482449614702932),\n",
       " (404, 0.4482449614702932),\n",
       " (405, 0.4482449614702932),\n",
       " (406, 0.4482449614702932),\n",
       " (407, 0.4482449614702932),\n",
       " (408, 0.4482449614702932),\n",
       " (409, 0.4482449614702932),\n",
       " (410, 0.4482449614702932),\n",
       " (411, 0.4482449614702932),\n",
       " (412, 0.4482449614702932),\n",
       " (413, 0.4482449614702932),\n",
       " (414, 0.4482449614702932),\n",
       " (415, 0.4482449614702932),\n",
       " (416, 0.4482449614702932),\n",
       " (417, 0.4482449614702932),\n",
       " (418, 0.4482449614702932),\n",
       " (419, 0.4482449614702932),\n",
       " (420, 0.4482449614702932),\n",
       " (421, 0.4482449614702932),\n",
       " (422, 0.4482449614702932),\n",
       " (423, 0.4482449614702932),\n",
       " (424, 0.4482449614702932),\n",
       " (425, 0.4482449614702932),\n",
       " (426, 0.4482449614702932),\n",
       " (427, 0.4482449614702932),\n",
       " (428, 0.4482449614702932),\n",
       " (429, 0.4482449614702932),\n",
       " (430, 0.4482449614702932),\n",
       " (431, 0.4482449614702932),\n",
       " (432, 0.4482449614702932),\n",
       " (433, 0.4482449614702932),\n",
       " (434, 0.4482449614702932),\n",
       " (435, 0.4482449614702932),\n",
       " (436, 0.4482449614702932),\n",
       " (437, 0.4482449614702932),\n",
       " (438, 0.4482449614702932),\n",
       " (439, 0.4482449614702932),\n",
       " (440, 0.4482449614702932),\n",
       " (441, 0.4482449614702932),\n",
       " (442, 0.4482449614702932),\n",
       " (443, 0.4482449614702932),\n",
       " (444, 0.4482449614702932),\n",
       " (445, 0.4482449614702932),\n",
       " (446, 0.4482449614702932),\n",
       " (447, 0.4482449614702932),\n",
       " (448, 0.4482449614702932),\n",
       " (449, 0.4482449614702932),\n",
       " (450, 0.4482449614702932),\n",
       " (451, 0.4482449614702932),\n",
       " (452, 0.4482449614702932),\n",
       " (453, 0.4482449614702932),\n",
       " (454, 0.4482449614702932),\n",
       " (455, 0.4482449614702932),\n",
       " (456, 0.4482449614702932),\n",
       " (457, 0.4482449614702932),\n",
       " (458, 0.4482449614702932),\n",
       " (459, 0.4482449614702932),\n",
       " (460, 0.4482449614702932),\n",
       " (461, 0.4482449614702932),\n",
       " (462, 0.4482449614702932),\n",
       " (463, 0.4482449614702932),\n",
       " (464, 0.4482449614702932),\n",
       " (465, 0.4482449614702932),\n",
       " (466, 0.4482449614702932),\n",
       " (467, 0.4482449614702932),\n",
       " (468, 0.4482449614702932),\n",
       " (469, 0.4482449614702932),\n",
       " (470, 0.4482449614702932),\n",
       " (471, 0.4482449614702932),\n",
       " (472, 0.4482449614702932),\n",
       " (473, 0.4482449614702932),\n",
       " (474, 0.4482449614702932),\n",
       " (475, 0.4482449614702932),\n",
       " (476, 0.4482449614702932),\n",
       " (477, 0.4482449614702932),\n",
       " (478, 0.4482449614702932),\n",
       " (479, 0.4482449614702932),\n",
       " (480, 0.4482449614702932),\n",
       " (481, 0.4482449614702932),\n",
       " (482, 0.4482449614702932),\n",
       " (483, 0.4482449614702932),\n",
       " (484, 0.4482449614702932),\n",
       " (485, 0.4482449614702932),\n",
       " (486, 0.4482449614702932),\n",
       " (487, 0.4482449614702932),\n",
       " (488, 0.4482449614702932),\n",
       " (489, 0.4482449614702932),\n",
       " (490, 0.4482449614702932),\n",
       " (491, 0.4482449614702932),\n",
       " (492, 0.4482449614702932),\n",
       " (493, 0.4482449614702932),\n",
       " (494, 0.4482449614702932),\n",
       " (495, 0.4482449614702932),\n",
       " (496, 0.4482449614702932),\n",
       " (497, 0.4482449614702932),\n",
       " (498, 0.4482449614702932),\n",
       " (499, 0.4482449614702932),\n",
       " (500, 0.4482449614702932),\n",
       " (501, 0.4482449614702932),\n",
       " (502, 0.4482449614702932),\n",
       " (503, 0.4482449614702932),\n",
       " (504, 0.4482449614702932),\n",
       " (505, 0.4482449614702932),\n",
       " (506, 0.4482449614702932),\n",
       " (507, 0.4482449614702932),\n",
       " (508, 0.4482449614702932),\n",
       " (509, 0.4482449614702932),\n",
       " (510, 0.4482449614702932),\n",
       " (511, 0.4482449614702932),\n",
       " (512, 0.4482449614702932),\n",
       " (513, 0.4482449614702932),\n",
       " (514, 0.4482449614702932),\n",
       " (515, 0.4482449614702932),\n",
       " (516, 0.4482449614702932),\n",
       " (517, 0.4482449614702932),\n",
       " (518, 0.4482449614702932),\n",
       " (519, 0.4482449614702932),\n",
       " (520, 0.4482449614702932),\n",
       " (521, 0.4482449614702932),\n",
       " (522, 0.4482449614702932),\n",
       " (523, 0.4482449614702932),\n",
       " (524, 0.4482449614702932),\n",
       " (525, 0.4482449614702932),\n",
       " (526, 0.4482449614702932),\n",
       " (527, 0.4482449614702932),\n",
       " (528, 0.4482449614702932),\n",
       " (529, 0.4482449614702932),\n",
       " (530, 0.4482449614702932),\n",
       " (531, 0.4482449614702932),\n",
       " (532, 0.4482449614702932),\n",
       " (533, 0.4482449614702932),\n",
       " (534, 0.4482449614702932),\n",
       " (535, 0.4482449614702932),\n",
       " (536, 0.4482449614702932),\n",
       " (537, 0.4482449614702932),\n",
       " (538, 0.4482449614702932),\n",
       " (539, 0.4482449614702932),\n",
       " (540, 0.4482449614702932),\n",
       " (541, 0.4482449614702932),\n",
       " (542, 0.4482449614702932),\n",
       " (543, 0.4482449614702932),\n",
       " (544, 0.4482449614702932),\n",
       " (545, 0.4482449614702932),\n",
       " (546, 0.4482449614702932),\n",
       " (547, 0.4482449614702932),\n",
       " (548, 0.4482449614702932),\n",
       " (549, 0.4482449614702932),\n",
       " (550, 0.4482449614702932),\n",
       " (551, 0.4482449614702932),\n",
       " (552, 0.4482449614702932),\n",
       " (553, 0.4482449614702932),\n",
       " (554, 0.4482449614702932),\n",
       " (555, 0.4482449614702932),\n",
       " (556, 0.4482449614702932),\n",
       " (557, 0.4482449614702932),\n",
       " (558, 0.4482449614702932),\n",
       " (559, 0.4482449614702932),\n",
       " (560, 0.4482449614702932),\n",
       " (561, 0.4482449614702932),\n",
       " (562, 0.4482449614702932),\n",
       " (563, 0.4482449614702932),\n",
       " (564, 0.4482449614702932),\n",
       " (565, 0.4482449614702932),\n",
       " (566, 0.4482449614702932),\n",
       " (567, 0.4482449614702932),\n",
       " (568, 0.4482449614702932),\n",
       " (569, 0.4482449614702932),\n",
       " (570, 0.4482449614702932),\n",
       " (571, 0.4482449614702932),\n",
       " (572, 0.4482449614702932),\n",
       " (573, 0.4482449614702932),\n",
       " (574, 0.4482449614702932),\n",
       " (575, 0.4482449614702932),\n",
       " (576, 0.4482449614702932),\n",
       " (577, 0.4482449614702932),\n",
       " (578, 0.4482449614702932),\n",
       " (579, 0.4482449614702932),\n",
       " (581, 0.4482449614702932),\n",
       " (582, 0.4482449614702932),\n",
       " (583, 0.4482449614702932),\n",
       " (584, 0.4482449614702932),\n",
       " (585, 0.4482449614702932),\n",
       " (586, 0.4482449614702932),\n",
       " (587, 0.4482449614702932),\n",
       " (588, 0.4482449614702932),\n",
       " (589, 0.4482449614702932),\n",
       " (590, 0.4482449614702932),\n",
       " (591, 0.4482449614702932),\n",
       " (592, 0.4482449614702932),\n",
       " (593, 0.4482449614702932),\n",
       " (594, 0.4482449614702932),\n",
       " (595, 0.4482449614702932)]"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from operator import itemgetter\n",
    "\n",
    "sorted(sent_rank.items(), key=itemgetter(1))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "243 passing this first step of autonomous flights with a safety pilot onboard allows us to validate the integration of airbus helicopters flight control system with the aerial vehicle and its specific engine installation said bruno guimbal , president ceo of helicopteres guimbal.\n",
      "345 passing this first step of autonomous flights with a safety pilot onboard allows us to validate the integration of airbus helicopters flight control system with the aerial vehicle and its specific engine installation , said helicopteres guimbal president and ceo bruno guimbal.\n",
      "244 this phase of flight trials with a safety pilot will focus on refining airbus helicopters automatic flight control system aboard the opv , eventually leading to fully autonomous flights without a safety pilot.\n",
      "580 including search and rescue operations , narcotics surveillance interdiction , personnel cargo transport , inter agency pursuit coordination , wildfire suppression , emergency medical services transport , and patrol support.the second prototype of the five bladed h145 helicopter carried out its maiden flight in august from airbus helicopters site in donauw rth , germany.\n",
      "153 operations took place from the base of babcock scandinavian airambulance , which flies airbus h145 helicopters for emergency medical services ems customers in the region.\n",
      "199 operations took place from the base of babcock scandinavian airambulance , which flies airbus h145 helicopters for emergency medical services ems customers in the region , including finland s finnhems and the regional government of aland , also in finland.\n",
      "208 operations took place from the base of babcock scandinavian airambulance , which flies airbus h145 helicopters for emergency medical services ems customers in the region.\n",
      "69 earlier this year , airbus corporate helicopters ach announced the sale of an ach160 to a european customer.\n",
      "0 continued weakness in the oil and gas market has left airbus helicopters uncertain of how quickly it will be able to ramp up output of its new h160 medium twin.\n",
      "1 in 2018 , the airframer took 15 orders for the 6t class helicopter , which was in line with its internal target.\n"
     ]
    }
   ],
   "source": [
    "limit_sentences = 10\n",
    "\n",
    "sent_text = {}\n",
    "sent_id = 0\n",
    "\n",
    "for sent in doc.sents:\n",
    "    sent_text[sent_id] = sent.text\n",
    "    sent_id += 1\n",
    "\n",
    "num_sent = 0\n",
    "\n",
    "for sent_id, rank in sorted(sent_rank.items(), key=itemgetter(1)):\n",
    "    print(sent_id, sent_text[sent_id])\n",
    "    num_sent += 1\n",
    "    \n",
    "    if num_sent == limit_sentences:\n",
    "        break"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
